swagger: '2.0'
info:
  description: |-
    <p>The Unisphere Management REST API lets you manage Unisphere through web browsers and application programs. This API conforms to Representational State Transfer (REST) design principles, which is a frequent choice for many web-based APIs. In a REST API, each resource type (object) has a unique Universal Resource Identifier (URI), and each resource instance has a unique identifier. You interact with the resources exposed by the API by accessing resources using HTTP GET, POST, and DELETE requests. The server sends response data in JavaScript Object Notation (JSON) format.</p><p>The Unisphere Management REST API is compliant with the EMC Data Access API (EDAA) style, which follows REST industry best practices. Once you are familiar with one EMC EDAA-compliant REST API, you can easily learn to use the other EMC EDAA-compliant REST APIs.</p><p>This online Help system describes Unisphere Management REST APIs, along with other API information such as data types and enumerations. The sidebar on the left lets you access the Help topics for individual resoure APIs by alphabetically.<p>
  version: '5.1.0'
  title: 'Unisphere Management REST API Reference Guide '
tags:
- name: "aclUser"
- name: "alert"
- name: "alertConfig"
- name: "alertConfigSNMPTarget"
- name: "alertEmailConfig"
- name: "archive"
- name: "autodownloadSoftwareVersion"
- name: "basicSystemInfo"
- name: "battery"
- name: "candidateSoftwareVersion"
- name: "capabilityProfile"
- name: "cifsServer"
- name: "cifsShare"
- name: "configCaptureResult"
- name: "coreDump"
- name: "crl"
- name: "dae"
- name: "dataCollectionResult"
- name: "datastore"
- name: "dhsmConnection"
- name: "dhsmServer"
- name: "disk"
- name: "diskGroup"
- name: "dnsServer"
- name: "dpe"
- name: "encryption"
- name: "esrsParam"
- name: "esrsPolicyManager"
- name: "ethernetPort"
- name: "event"
- name: "fan"
- name: "fastCache"
- name: "fastVP"
- name: "fcPort"
- name: "feature"
- name: "fileDNSServer"
- name: "fileEventsPool"
- name: "fileEventsPublisher"
- name: "fileInterface"
- name: "fileKerberosServer"
- name: "fileLDAPServer"
- name: "fileNDMPServer"
- name: "fileNISServer"
- name: "filesystem"
- name: "fsnPort"
- name: "ftpServer"
- name: "host"
- name: "hostContainer"
- name: "hostGroup"
- name: "hostGroupLUN"
- name: "hostGroupVmwareLUN"
- name: "hostIPPort"
- name: "hostInitiator"
- name: "hostInitiatorPath"
- name: "hostLUN"
- name: "hostVVolDatastore"
- name: "importSession"
- name: "installedSoftwareVersion"
- name: "ioLimitPolicy"
- name: "ioLimitRule"
- name: "ioLimitSetting"
- name: "ioModule"
- name: "ipInterface"
- name: "ipPort"
- name: "iscsiNode"
- name: "iscsiPortal"
- name: "iscsiSettings"
- name: "job"
- name: "kmipServer"
- name: "lcc"
- name: "ldapServer"
- name: "license"
- name: "linkAggregation"
- name: "loginSessionInfo"
- name: "lun"
- name: "memoryModule"
- name: "metric"
- name: "metricCollection"
- name: "metricQueryResult"
- name: "metricRealTimeQuery"
- name: "metricService"
- name: "metricValue"
- name: "mgmtInterface"
- name: "mgmtInterfaceSettings"
- name: "moveSession"
- name: "nasServer"
- name: "nfsServer"
- name: "nfsShare"
- name: "ntpServer"
- name: "pool"
- name: "poolConsumer"
- name: "poolConsumerAllocation"
- name: "poolUnit"
- name: "powerSupply"
- name: "preferredInterfaceSettings"
- name: "quotaConfig"
- name: "raidGroup"
- name: "remoteInterface"
- name: "remoteSyslog"
- name: "remoteSystem"
- name: "replicationInterface"
- name: "replicationSession"
- name: "role"
- name: "roleMapping"
- name: "route"
- name: "rpChapSettings"
- name: "sasPort"
- name: "scheduleTimezone"
- name: "securitySettings"
- name: "serviceAction"
- name: "serviceContract"
- name: "serviceInfo"
- name: "smtpServer"
- name: "snap"
- name: "snapSchedule"
- name: "softwareUpgradeSession"
- name: "ssc"
- name: "ssd"
- name: "storageProcessor"
- name: "storageResource"
- name: "storageResourceCapabilityProfile"
- name: "storageTier"
- name: "supportAsset"
- name: "supportProxy"
- name: "supportService"
- name: "system"
- name: "systemCapacity"
- name: "systemInformation"
- name: "systemLimit"
- name: "systemTime"
- name: "technicalAdvisory"
- name: "tenant"
- name: "treeQuota"
- name: "udoctorPackage"
- name: "uncommittedPort"
- name: "upgradeSession"
- name: "urServer"
- name: "user"
- name: "userQuota"
- name: "virtualVolume"
- name: "virusChecker"
- name: "vlanInfo"
- name: "vm"
- name: "vmDisk"
- name: "vmwareNasPEServer"
- name: "vmwarePE"
- name: "x509Certificate"
paths:
  /api/types/aclUser/instances:
    get:
      tags:
      - aclUser
      description: 'Collection query'
      operationId: aclUser_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/aclUser'
      summary: 1. Get all aclUser
  /api/instances/aclUser/{id}:
    get:
      tags:
      - aclUser
      description: 'Instance query'
      operationId: aclUser_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/aclUser'
      summary: 2. Get aclUser by id
  /api/types/aclUser/action/lookupSIDByDomainUser:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [domainName,userName]
          properties:
            domainName:
              description: "Domain name."
              type: string
            userName:
              description: "User name."
              type: string
      tags:
      - aclUser
      description: "get SID by domain name and user name"
      operationId: aclUser_lookupSIDByDomainUser
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  sid:
                    description: "SID, if found."
                    type: string
      summary: 3. LookupSIDByDomainUser aclUser
  /api/types/alert/instances:
    get:
      tags:
      - alert
      description: 'Collection query'
      operationId: alert_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/alert'
      summary: 1. Get all alert
  /api/instances/alert/{id}:
    get:
      tags:
      - alert
      description: 'Instance query'
      operationId: alert_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the alert instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/alert'
      summary: 2. Get alert by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the alert instance."
        required: true
        type: string
      tags:
      - alert
      description: "Delete an alert."
      operationId: alert_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Delete alert by id
  /api/instances/alert/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the alert instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            isAcknowledged:
              description: "Whether alert is acknowledged."
              type: boolean
            state:
              description: "New state of the alert.
  <br/>
  The new state should be 'Inactive' since the only valid transition supported is from 'Active_Manual' to 'Inactive'.<br/>"
              $ref: '#/definitions/AlertStateEnum'
      tags:
      - alert
      description: "Update the 'ack' status or/and the state of the alert."
      operationId: alert_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify alert by id
  /api/types/alertConfig/instances:
    get:
      tags:
      - alertConfig
      description: 'Collection query'
      operationId: alertConfig_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/alertConfig'
      summary: 1. Get all alertConfig
  /api/instances/alertConfig/{id}:
    get:
      tags:
      - alertConfig
      description: 'Instance query'
      operationId: alertConfig_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the alertConfig instance. This value is always 0, because
  there is only one occurrence of this resource type."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/alertConfig'
      summary: 2. Get alertConfig by id
  /api/instances/alertConfig/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the alertConfig instance. This value is always 0, because
  there is only one occurrence of this resource type."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            alertLocale:
              description: "Language in which the system sends email alerts."
              $ref: '#/definitions/LocaleEnum'
            isThresholdAlertsEnabled:
              description: "Whether pool space usage related alerts will be sent."
              type: boolean
            minSNMPTrapNotificationSeverity:
              description: "Minimum severity level for SNMP trap alerts."
              $ref: '#/definitions/SeverityEnum'
            emailFromAddress:
              description: "Email from address used when sending alert emails."
              type: string
            callHomeSuppressionEndTime:
              description: "The date and time when the call home suppression will end. The total suppression window (the difference between suppressionStartTime and suppressionEndTime) should be more than 1 hour and less than 48 hours. Set to null to diable the call home suppression."
              type: string
              format: date-time
      tags:
      - alertConfig
      description: "Modify the alert configuration settings."
      operationId: alertConfig_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify alertConfig by id
  /api/instances/alertConfig/{id}/action/testUCAlert:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the alertConfig instance. This value is always 0, because
  there is only one occurrence of this resource type."
        required: true
        type: string
      tags:
      - alertConfig
      description: "Test Unisphere Central alert notification by sending a test alert to a
  Unisphere Central destination."
      operationId: alertConfig_testUCAlert
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. TestUCAlert alertConfig by id
  /api/instances/alertConfig/{id}/action/testEmailAlert:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the alertConfig instance. This value is always 0, because
  there is only one occurrence of this resource type."
        required: true
        type: string
      tags:
      - alertConfig
      description: "Test email alert notification by sending a test alert to all configured email
  destinations."
      operationId: alertConfig_testEmailAlert
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. TestEmailAlert alertConfig by id
  /api/instances/alertConfig/{id}/action/testUIAlert:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the alertConfig instance. This value is always 0, because
  there is only one occurrence of this resource type."
        required: true
        type: string
      tags:
      - alertConfig
      description: "Test GUI alert notification by sending a test alert to all open CEM GUIs."
      operationId: alertConfig_testUIAlert
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. TestUIAlert alertConfig by id
  /api/instances/alertConfig/{id}/action/testSNMPAlert:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the alertConfig instance. This value is always 0, because
  there is only one occurrence of this resource type."
        required: true
        type: string
      tags:
      - alertConfig
      description: "Test SNMP trap notification by sending an alert to all configured SNMP trap
  destinations."
      operationId: alertConfig_testSNMPAlert
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. TestSNMPAlert alertConfig by id
  /api/types/alertConfigSNMPTarget/instances:
    get:
      tags:
      - alertConfigSNMPTarget
      description: 'Collection query'
      operationId: alertConfigSNMPTarget_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/alertConfigSNMPTarget'
      summary: 1. Get all alertConfigSNMPTarget
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [targetAddress]
          properties:
            targetAddress:
              description: "Host address and port for the new SNMP destination. The default UDP port number is 162."
              type: string
            username:
              description: "Username used to access the SNMP destination, v3 only."
              type: string
            authProtocol:
              description: "Protocol used to authenticate access to the new SNMP destination, v3 only."
              $ref: '#/definitions/SNMPAuthProtocolEnum'
            authPassword:
              description: "Password used to access the new SNMP destination, v3 only."
              type: string
            privProtocol:
              description: "Protocol used to enable privacy on the new SNMP destination. The privacy protocol encrypts the SNMP packets, v3 only."
              $ref: '#/definitions/SNMPPrivacyProtocolEnum'
            privPassword:
              description: "Privacy password for the privacy protocol, v3 only."
              type: string
            version:
              description: "SNMP version used to send the traps or informs."
              $ref: '#/definitions/SNMPVersionEnum'
            community:
              description: "Community string used by SNMP v2c, not applicable for SNMP v3."
              type: string
      tags:
      - alertConfigSNMPTarget
      description: "Create a new SNMP v3/v2c trap destination."
      operationId: alertConfigSNMPTarget_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new alertConfigSNMPTarget instance."
                    type: string
      summary: 3. Create alertConfigSNMPTarget
  /api/instances/alertConfigSNMPTarget/{id}:
    get:
      tags:
      - alertConfigSNMPTarget
      description: 'Instance query'
      operationId: alertConfigSNMPTarget_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the alertConfigSNMPTarget instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/alertConfigSNMPTarget'
      summary: 2. Get alertConfigSNMPTarget by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the alertConfigSNMPTarget instance."
        required: true
        type: string
      tags:
      - alertConfigSNMPTarget
      description: "Delete an SNMPv3 destination."
      operationId: alertConfigSNMPTarget_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete alertConfigSNMPTarget by id
  /api/instances/alertConfigSNMPTarget/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the alertConfigSNMPTarget instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            targetAddress:
              description: "Host address and port for the new SNMP destination. The default UDP port number is 162."
              type: string
            username:
              description: "Username used to access the SNMP destination, v3 only."
              type: string
            authProtocol:
              description: "Protocol used to authenticate access to the new SNMP destination, v3 only."
              $ref: '#/definitions/SNMPAuthProtocolEnum'
            authPassword:
              type: string
            privProtocol:
              description: "Protocol used to enable privacy on the new SNMP destination. The privacy protocol encrypts the SNMP packets, v3 only."
              $ref: '#/definitions/SNMPPrivacyProtocolEnum'
            privPassword:
              description: "Privacy password for the privacy protocol, v3 only."
              type: string
            community:
              description: "Community string used by SNMP v2c, not applicable for SNMP v3."
              type: string
      tags:
      - alertConfigSNMPTarget
      description: "Modify an SNMP destination."
      operationId: alertConfigSNMPTarget_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify alertConfigSNMPTarget by id
  /api/types/alertEmailConfig/instances:
    get:
      tags:
      - alertEmailConfig
      description: 'Collection query'
      operationId: alertEmailConfig_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/alertEmailConfig'
      summary: 1. Get all alertEmailConfig
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [emailAddress]
          properties:
            emailAddress:
              description: "Email address to receive alert notifications of certain severity."
              type: string
            minNotificationSeverity:
              description: "Minimum severity level for alerts sent to this email address. The default value is NOTICE."
              $ref: '#/definitions/SeverityEnum'
      tags:
      - alertEmailConfig
      description: "Add an email to receive notifications based on severity."
      operationId: alertEmailConfig_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    type: string
      summary: 3. Create alertEmailConfig
  /api/instances/alertEmailConfig/{id}:
    get:
      tags:
      - alertEmailConfig
      description: 'Instance query'
      operationId: alertEmailConfig_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the alert email configuration."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/alertEmailConfig'
      summary: 2. Get alertEmailConfig by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the alert email configuration."
        required: true
        type: string
      tags:
      - alertEmailConfig
      description: "Remove the alert email configuration."
      operationId: alertEmailConfig_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete alertEmailConfig by id
  /api/instances/alertEmailConfig/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the alert email configuration."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            emailAddress:
              description: "Email to receive alert notifications."
              type: string
            minNotificationSeverity:
              description: "Minimum severity level for email alerts."
              $ref: '#/definitions/SeverityEnum'
      tags:
      - alertEmailConfig
      description: "Modify the alert email configuration settings."
      operationId: alertEmailConfig_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify alertEmailConfig by id
  /api/types/archive/instances:
    get:
      tags:
      - archive
      description: 'Collection query'
      operationId: archive_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/archive'
      summary: 1. Get all archive
  /api/instances/archive/{id}:
    get:
      tags:
      - archive
      description: 'Instance query'
      operationId: archive_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Archive id."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/archive'
      summary: 2. Get archive by id
  /api/types/autodownloadSoftwareVersion/instances:
    get:
      tags:
      - autodownloadSoftwareVersion
      description: 'Collection query'
      operationId: autodownloadSoftwareVersion_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/autodownloadSoftwareVersion'
      summary: 1. Get all autodownloadSoftwareVersion
  /api/instances/autodownloadSoftwareVersion/{id}:
    get:
      tags:
      - autodownloadSoftwareVersion
      description: 'Instance query'
      operationId: autodownloadSoftwareVersion_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the autodownloadSoftwareVersion instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/autodownloadSoftwareVersion'
      summary: 2. Get autodownloadSoftwareVersion by id
  /api/instances/autodownloadSoftwareVersion/name:{name}:
    get:
      tags:
      - autodownloadSoftwareVersion
      description: 'Instance query'
      operationId: autodownloadSoftwareVersion_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "File name of the autodownloaded software."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/autodownloadSoftwareVersion'
      summary: 3. Get autodownloadSoftwareVersion by name
  /api/types/basicSystemInfo/instances:
    get:
      tags:
      - basicSystemInfo
      description: 'Collection query'
      operationId: basicSystemInfo_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/basicSystemInfo'
      summary: 1. Get all basicSystemInfo
  /api/instances/basicSystemInfo/{id}:
    get:
      tags:
      - basicSystemInfo
      description: 'Instance query'
      operationId: basicSystemInfo_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the basicSystemInfo instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/basicSystemInfo'
      summary: 2. Get basicSystemInfo by id
  /api/instances/basicSystemInfo/name:{name}:
    get:
      tags:
      - basicSystemInfo
      description: 'Instance query'
      operationId: basicSystemInfo_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Name of this storage system. This value comes from the name attribute of the
  system resource."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/basicSystemInfo'
      summary: 3. Get basicSystemInfo by name
  /api/types/battery/instances:
    get:
      tags:
      - battery
      description: 'Collection query'
      operationId: battery_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/battery'
      summary: 1. Get all battery
  /api/instances/battery/{id}:
    get:
      tags:
      - battery
      description: 'Instance query'
      operationId: battery_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the battery instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/battery'
      summary: 2. Get battery by id
  /api/instances/battery/name:{name}:
    get:
      tags:
      - battery
      description: 'Instance query'
      operationId: battery_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Battery name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/battery'
      summary: 3. Get battery by name
  /api/types/candidateSoftwareVersion/instances:
    get:
      tags:
      - candidateSoftwareVersion
      description: 'Collection query'
      operationId: candidateSoftwareVersion_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/candidateSoftwareVersion'
      summary: 1. Get all candidateSoftwareVersion
  /api/instances/candidateSoftwareVersion/{id}:
    get:
      tags:
      - candidateSoftwareVersion
      description: 'Instance query'
      operationId: candidateSoftwareVersion_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the candidateSoftwareVersion instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/candidateSoftwareVersion'
      summary: 2. Get candidateSoftwareVersion by id
  /api/types/candidateSoftwareVersion/action/prepare:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [filename]
          properties:
            filename:
              description: "Filename of the automated downloaded software image to
  change into candidate version."
              type: string
      tags:
      - candidateSoftwareVersion
      description: "Prepare the automated downloaded software image. Create a candidate version given
  a filename of the automated downloaded software image on the storage syttem."
      operationId: candidateSoftwareVersion_prepare
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  id:
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the candidateSoftwareVersion instance."
      summary: 3. Prepare candidateSoftwareVersion
  /api/types/capabilityProfile/instances:
    get:
      tags:
      - capabilityProfile
      description: 'Collection query'
      operationId: capabilityProfile_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/capabilityProfile'
      summary: 1. Get all capabilityProfile
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name,pool]
          properties:
            name:
              description: "The user-friendly name of the new capability profile."
              type: string
            description:
              description: "Description of the new capability profile."
              type: string
            pool:
              description: "The pool with which the capability profile is associated."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the pool instance."
            usageTags:
              description: "List of user defined usage tags for the new capability profile."
              type: array
              items:
                type: string
      tags:
      - capabilityProfile
      description: "Create a new capability profile."
      operationId: capabilityProfile_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Reference to the created capability profile instance."
                    type: string
      summary: 4. Create capabilityProfile
  /api/instances/capabilityProfile/{id}:
    get:
      tags:
      - capabilityProfile
      description: 'Instance query'
      operationId: capabilityProfile_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the capability profile."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/capabilityProfile'
      summary: 2. Get capabilityProfile by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the capability profile."
        required: true
        type: string
      tags:
      - capabilityProfile
      description: "Delete a capability profile."
      operationId: capabilityProfile_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete capabilityProfile by id
  /api/instances/capabilityProfile/name:{name}:
    get:
      tags:
      - capabilityProfile
      description: 'Instance query'
      operationId: capabilityProfile_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "The name of the capability profile."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/capabilityProfile'
      summary: 3. Get capabilityProfile by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "The name of the capability profile."
        required: true
        type: string
      tags:
      - capabilityProfile
      description: "Delete a capability profile."
      operationId: capabilityProfile_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 9. Delete capabilityProfile by name
  /api/instances/capabilityProfile/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the capability profile."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "New user-friendly name of the capability profile."
              type: string
            description:
              description: "New description of the capability profile."
              type: string
            usageTags:
              description: "New list of user defined usage tags for the capability profile."
              type: array
              items:
                type: string
      tags:
      - capabilityProfile
      description: "Modify a capability profile."
      operationId: capabilityProfile_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify capabilityProfile by id
  /api/instances/capabilityProfile/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "The name of the capability profile."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "New user-friendly name of the capability profile."
              type: string
            description:
              description: "New description of the capability profile."
              type: string
            usageTags:
              description: "New list of user defined usage tags for the capability profile."
              type: array
              items:
                type: string
      tags:
      - capabilityProfile
      description: "Modify a capability profile."
      operationId: capabilityProfile_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify capabilityProfile by name
  /api/types/capabilityProfile/action/recommend:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [pool]
          properties:
            pool:
              description: "Reference to the pool for which a capability profile recommendation is requested."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the pool instance."
      tags:
      - capabilityProfile
      description: "Recommend the set of capabilities for a capability profile based on the specified pool."
      operationId: capabilityProfile_recommend
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  result:
                    description: "Result list of capability profile recommendations that specify the set of capabilities for the capability profile and associated constraints."
                    type: array
                    items:
                      description: "An entity representing a recommendation for a VASA 2.0 SPBM capability profile."
                      $ref: '#/definitions/capabilityProfileRecommendation'
      summary: 7. Recommend capabilityProfile
  /api/types/cifsServer/instances:
    get:
      tags:
      - cifsServer
      description: 'Collection query'
      operationId: cifsServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/cifsServer'
      summary: 1. Get all cifsServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [nasServer]
          properties:
            nasServer:
              description: "Unique identifier of the NAS server which the SMB server belongs to."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the nasServer instance."
            netbiosName:
              description: "Computer name of the SMB server in Windows network."
              type: string
            name:
              description: "User friendly, descriptive name of SMB server."
              type: string
            description:
              description: "Description of the SMB server."
              type: string
            domain:
              description: "Domain name where SMB server is registered in Active Directory, if applicable."
              type: string
            organizationalUnit:
              description: "LDAP organizational unit of SMB server in Active Directory, if applicable."
              type: string
            domainUsername:
              description: "Active Directory domain user name."
              type: string
            domainPassword:
              description: "Active Directory domain password."
              type: string
            reuseComputerAccount:
              description: "Reuse existing SMB server account in the Active Directory."
              type: boolean
            workgroup:
              description: "Standalone SMB server workgroup."
              type: string
            localAdminPassword:
              description: "Standalone SMB server administrator password."
              type: string
            interfaces:
              description: "List of file IP interfaces that service CIFS protocol of SMB server."
              type: array
              items:
                description: "Information about network interfaces in the storage system. These interfaces
  control access to Windows (CIFS) and UNIX/Linux (NFS) file storage."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the fileInterface instance."
      tags:
      - cifsServer
      description: "Create an SMB server."
      operationId: cifsServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new SMB server."
                    type: string
      summary: 4. Create cifsServer
  /api/instances/cifsServer/{id}:
    get:
      tags:
      - cifsServer
      description: 'Instance query'
      operationId: cifsServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the cifsServer instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/cifsServer'
      summary: 2. Get cifsServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the cifsServer instance."
        required: true
        type: string
      tags:
      - cifsServer
      description: "Delete an SMB server."
      operationId: cifsServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete cifsServer by id
  /api/instances/cifsServer/name:{name}:
    get:
      tags:
      - cifsServer
      description: 'Instance query'
      operationId: cifsServer_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "User-specified name for the SMB server."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/cifsServer'
      summary: 3. Get cifsServer by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified name for the SMB server."
        required: true
        type: string
      tags:
      - cifsServer
      description: "Delete an SMB server."
      operationId: cifsServer_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete cifsServer by name
  /api/instances/cifsServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the cifsServer instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            netbiosName:
              description: "Computer name of the SMB server in Windows network."
              type: string
            name:
              description: "User friendly, descriptive name of SMB server."
              type: string
            description:
              description: "Description of the SMB server."
              type: string
            domain:
              description: "Domain name where SMB server is registered in Active Directory, if applicable."
              type: string
            organizationalUnit:
              description: "LDAP organizational unit of SMB server in Active Directory, if applicable."
              type: string
            domainUsername:
              description: "Active Directory domain user name."
              type: string
            domainPassword:
              description: "Active Directory domain password."
              type: string
            skipUnjoin:
              description: "Skip unjoining the current SMB server account from Active Directory.
  Values are:
  <ul>
  <li>true - Skip unjoining the current SMB server account.</li>
  <li>false - Unjoin the current SMB server account if needed.</li>
  </ul>"
              type: boolean
            currentUsername:
              description: "Specify the user name of an Active Directory domain in order to unjoin the SMB server from it."
              type: string
            currentPassword:
              description: "Specify the password of an Active Directory domain to unjoin the SMB server from it."
              type: string
            reuseComputerAccount:
              description: "Reuse existing SMB server account in the Active Directory."
              type: boolean
            workgroup:
              description: "Standalone SMB server workgroup."
              type: string
            localAdminPassword:
              description: "Standalone SMB server administrator password."
              type: string
            interfaces:
              description: "List of file IP interfaces that service CIFS protocol of SMB server."
              type: array
              items:
                description: "Information about network interfaces in the storage system. These interfaces
  control access to Windows (CIFS) and UNIX/Linux (NFS) file storage."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the fileInterface instance."
      tags:
      - cifsServer
      description: "Modify an SMB server."
      operationId: cifsServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify cifsServer by id
  /api/instances/cifsServer/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified name for the SMB server."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            netbiosName:
              description: "Computer name of the SMB server in Windows network."
              type: string
            name:
              description: "User friendly, descriptive name of SMB server."
              type: string
            description:
              description: "Description of the SMB server."
              type: string
            domain:
              description: "Domain name where SMB server is registered in Active Directory, if applicable."
              type: string
            organizationalUnit:
              description: "LDAP organizational unit of SMB server in Active Directory, if applicable."
              type: string
            domainUsername:
              description: "Active Directory domain user name."
              type: string
            domainPassword:
              description: "Active Directory domain password."
              type: string
            skipUnjoin:
              description: "Skip unjoining the current SMB server account from Active Directory.
  Values are:
  <ul>
  <li>true - Skip unjoining the current SMB server account.</li>
  <li>false - Unjoin the current SMB server account if needed.</li>
  </ul>"
              type: boolean
            currentUsername:
              description: "Specify the user name of an Active Directory domain in order to unjoin the SMB server from it."
              type: string
            currentPassword:
              description: "Specify the password of an Active Directory domain to unjoin the SMB server from it."
              type: string
            reuseComputerAccount:
              description: "Reuse existing SMB server account in the Active Directory."
              type: boolean
            workgroup:
              description: "Standalone SMB server workgroup."
              type: string
            localAdminPassword:
              description: "Standalone SMB server administrator password."
              type: string
            interfaces:
              description: "List of file IP interfaces that service CIFS protocol of SMB server."
              type: array
              items:
                description: "Information about network interfaces in the storage system. These interfaces
  control access to Windows (CIFS) and UNIX/Linux (NFS) file storage."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the fileInterface instance."
      tags:
      - cifsServer
      description: "Modify an SMB server."
      operationId: cifsServer_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify cifsServer by name
  /api/types/cifsShare/instances:
    get:
      tags:
      - cifsShare
      description: 'Collection query'
      operationId: cifsShare_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/cifsShare'
      summary: 01. Get all cifsShare
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [snap,path,name]
          properties:
            snap:
              description: "Parent file system associated with the CIFS share, as defined by the filesystemSnap resource type."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the snap instance."
            path:
              description: "Local path to a location within a file system.  <br> <br> By default, the system creates a share to the root of the file system (top-most directory) at file system creation time. This path specifies the unique location of the file system on the storage system. CIFS shares allow you to create multiple network shares with the same local path. You can specify different host-side access controls for different users, while setting up network shares within the file system to access common content.  <br> <br>  If you want the CIFS network shares within the same file system to access different content, you must first create a share to the root of the file system. Then, you can connect from a Windows host, create additional directories from Windows, and create corresponding network shares using the REST API, Unisphere GUI, or Unisphere CLI."
              type: string
            name:
              description: "CIFS share name."
              type: string
            description:
              description: "CIFS share description."
              type: string
            isABEEnabled:
              description: "Specifies Access-based Enumeration state.
  Values are:
  <ul> 
  <li> true - Enumerating is enabled. </li>
  <li> false - Enumerating is disabled. </li>
  </ul>"
              type: boolean
            isBranchCacheEnabled:
              description: "Specifies BranchCache state for Server Message Block (SMB) 3.0 and later.
  Values are:
  <ul>
  <li> true - Branch Cache is enabled. </li>
  <li> false - Branch Cache is disabled.  </li>
  </ul>"
              type: boolean
            offlineAvailability:
              description: "Specifies Offline Availability state."
              $ref: '#/definitions/CifsShareOfflineAvailabilityEnum'
            umask:
              description: "Specifies the default UNIX umask for new files created on the share."
              type: string
            isReadOnly:
              description: "Indicates whether the CIFS share is read-only. 
  Values are:  
  <ul> 
  <li> true - CIFS share is read-only. </li>
  <li> false - CIFS share is read-write. </li>
  </ul>"
              type: boolean
            isContinuousAvailabilityEnabled:
              description: "Indicates whether continuous availability for Server Message Block (SMB) 3.0 is enabled for the CIFS share.
  Values are:
  <ul> 
  <li> true - Continuous availability for SMB 3.0 is enabled for the CIFS share. </li>
  <li> false - Continuous availability for SMB 3.0 is disabled for the CIFS share. </li>
  </ul>"
              type: boolean
            isEncryptionEnabled:
              description: "Indicates whether the CIFS share access-level permissions are enabled.
  Values are:
  <ul> 
  <li> true - CIFS share access-level permissions are enabled. </li>
  <li> false - CIFS share access-level permissions are disabled. </li>
  </ul>"
              type: boolean
      tags:
      - cifsShare
      description: "Create a CIFS share for a file system snapshot."
      operationId: cifsShare_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new cifsShare instance."
                    type: string
      summary: 04. Create cifsShare
  /api/instances/cifsShare/{id}:
    get:
      tags:
      - cifsShare
      description: 'Instance query'
      operationId: cifsShare_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the cifsShare instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/cifsShare'
      summary: 02. Get cifsShare by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the cifsShare instance."
        required: true
        type: string
      tags:
      - cifsShare
      description: "Delete a CIFS share for a file system snapshot."
      operationId: cifsShare_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 11. Delete cifsShare by id
  /api/instances/cifsShare/name:{name}:
    get:
      tags:
      - cifsShare
      description: 'Instance query'
      operationId: cifsShare_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "CIFS share name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/cifsShare'
      summary: 03. Get cifsShare by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "CIFS share name."
        required: true
        type: string
      tags:
      - cifsShare
      description: "Delete a CIFS share for a file system snapshot."
      operationId: cifsShare_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 12. Delete cifsShare by name
  /api/instances/cifsShare/{id}/action/getACEs:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the cifsShare instance."
        required: true
        type: string
      tags:
      - cifsShare
      description: "Get ACEs for the cifs share"
      operationId: cifsShare_getACEs
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  cifsShareACEs:
                    description: "The output list of ACEs associated with the cifs share."
                    type: array
                    items:
                      description: "Access Control Entry (ACE) settings for CIFS shares.
  <br/>
  <br/>
  This resource type is embedded in the storageResource type."
                      $ref: '#/definitions/cifsShareACE'
      summary: 05. GetACEs cifsShare by id
  /api/instances/cifsShare/name:{name}/action/getACEs:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: name
        in: path
        description: "CIFS share name."
        required: true
        type: string
      tags:
      - cifsShare
      description: "Get ACEs for the cifs share"
      operationId: cifsShare_getACEs_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  cifsShareACEs:
                    description: "The output list of ACEs associated with the cifs share."
                    type: array
                    items:
                      description: "Access Control Entry (ACE) settings for CIFS shares.
  <br/>
  <br/>
  This resource type is embedded in the storageResource type."
                      $ref: '#/definitions/cifsShareACE'
      summary: 06. GetACEs cifsShare by name
  /api/instances/cifsShare/{id}/action/setACEs:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the cifsShare instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            cifsShareACEs:
              description: "The input list of ACEs associated with the cifs share."
              type: array
              items:
                description: "Access Control Entry (ACE) settings for CIFS shares.
  <br/>
  <br/>
  This resource type is embedded in the storageResource type."
                $ref: '#/definitions/cifsShareACE'
      tags:
      - cifsShare
      description: "Set ACEs for the cifs share"
      operationId: cifsShare_setACEs
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 07. SetACEs cifsShare by id
  /api/instances/cifsShare/name:{name}/action/setACEs:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: name
        in: path
        description: "CIFS share name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            cifsShareACEs:
              description: "The input list of ACEs associated with the cifs share."
              type: array
              items:
                description: "Access Control Entry (ACE) settings for CIFS shares.
  <br/>
  <br/>
  This resource type is embedded in the storageResource type."
                $ref: '#/definitions/cifsShareACE'
      tags:
      - cifsShare
      description: "Set ACEs for the cifs share"
      operationId: cifsShare_setACEs_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 08. SetACEs cifsShare by name
  /api/instances/cifsShare/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the cifsShare instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            description:
              description: "CIFS share description."
              type: string
            isABEEnabled:
              description: "Specifies Access-based Enumeration state.
  Values are:
  <ul>
  <li> true - Enumerating is enabled. </li>
  <li> false - Enumerating is disabled. </li>
  </ul>"
              type: boolean
            isBranchCacheEnabled:
              description: "Specifies BranchCache state for Server Message Block (SMB) 3.0 and later.
  Values are:
  <ul>
  <li> true - Branch Cache is enabled. </li>
  <li> false - Branch Cache is disabled. </li>
  </ul>"
              type: boolean
            offlineAvailability:
              description: "Specifies Offline Availability state."
              $ref: '#/definitions/CifsShareOfflineAvailabilityEnum'
            umask:
              description: "Specifies the default UNIX umask for new files created on the share."
              type: string
            isContinuousAvailabilityEnabled:
              description: "Indicates whether continuous availability for Server Message Block (SMB) 3.0 is enabled for the CIFS share.
  Values are:
  <ul>
  <li> true - Continuous availability for SMB 3.0 is enabled for the CIFS share. </li>
  <li> false - Continuous availability for SMB 3.0 is disabled for the CIFS share. </li>
  </ul>"
              type: boolean
            isEncryptionEnabled:
              description: "Indicates whether SMB encryption for Server Message Block (SMB) 3.0 is enabled on the messages received and sent on the network.
  Values are: 
  <ul>
  <li> true - SMB encryption for SMB 3.0 is enabled. </li>
  <li> false - SMB encryption for SMB 3.0 is disabled. </li>
  </ul>"
              type: boolean
      tags:
      - cifsShare
      description: "Modify a CIFS share for a file system snapshot."
      operationId: cifsShare_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 09. Modify cifsShare by id
  /api/instances/cifsShare/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "CIFS share name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            description:
              description: "CIFS share description."
              type: string
            isABEEnabled:
              description: "Specifies Access-based Enumeration state.
  Values are:
  <ul>
  <li> true - Enumerating is enabled. </li>
  <li> false - Enumerating is disabled. </li>
  </ul>"
              type: boolean
            isBranchCacheEnabled:
              description: "Specifies BranchCache state for Server Message Block (SMB) 3.0 and later.
  Values are:
  <ul>
  <li> true - Branch Cache is enabled. </li>
  <li> false - Branch Cache is disabled. </li>
  </ul>"
              type: boolean
            offlineAvailability:
              description: "Specifies Offline Availability state."
              $ref: '#/definitions/CifsShareOfflineAvailabilityEnum'
            umask:
              description: "Specifies the default UNIX umask for new files created on the share."
              type: string
            isContinuousAvailabilityEnabled:
              description: "Indicates whether continuous availability for Server Message Block (SMB) 3.0 is enabled for the CIFS share.
  Values are:
  <ul>
  <li> true - Continuous availability for SMB 3.0 is enabled for the CIFS share. </li>
  <li> false - Continuous availability for SMB 3.0 is disabled for the CIFS share. </li>
  </ul>"
              type: boolean
            isEncryptionEnabled:
              description: "Indicates whether SMB encryption for Server Message Block (SMB) 3.0 is enabled on the messages received and sent on the network.
  Values are: 
  <ul>
  <li> true - SMB encryption for SMB 3.0 is enabled. </li>
  <li> false - SMB encryption for SMB 3.0 is disabled. </li>
  </ul>"
              type: boolean
      tags:
      - cifsShare
      description: "Modify a CIFS share for a file system snapshot."
      operationId: cifsShare_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 10. Modify cifsShare by name
  /api/types/configCaptureResult/instances:
    get:
      tags:
      - configCaptureResult
      description: 'Collection query'
      operationId: configCaptureResult_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/configCaptureResult'
      summary: 1. Get all configCaptureResult
  /api/instances/configCaptureResult/{id}:
    get:
      tags:
      - configCaptureResult
      description: 'Instance query'
      operationId: configCaptureResult_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the configCaptureResult instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/configCaptureResult'
      summary: 2. Get configCaptureResult by id
  /api/instances/configCaptureResult/name:{name}:
    get:
      tags:
      - configCaptureResult
      description: 'Instance query'
      operationId: configCaptureResult_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "File name of the configCaptureResult instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/configCaptureResult'
      summary: 3. Get configCaptureResult by name
  /api/types/configCaptureResult/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      tags:
      - configCaptureResult
      description: "Refresh the Configuration Capture results."
      operationId: configCaptureResult_refresh
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Refresh configCaptureResult
  /api/types/coreDump/instances:
    get:
      tags:
      - coreDump
      description: 'Collection query'
      operationId: coreDump_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/coreDump'
      summary: 1. Get all coreDump
  /api/instances/coreDump/{id}:
    get:
      tags:
      - coreDump
      description: 'Instance query'
      operationId: coreDump_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the core dump instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/coreDump'
      summary: 2. Get coreDump by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the core dump instance."
        required: true
        type: string
      tags:
      - coreDump
      description: "Delete the core dump and the related files. Service credential needs to be provided before this operation."
      operationId: coreDump_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Delete coreDump by id
  /api/instances/coreDump/name:{name}:
    get:
      tags:
      - coreDump
      description: 'Instance query'
      operationId: coreDump_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Name of the core dump instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/coreDump'
      summary: 3. Get coreDump by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: name
        in: path
        description: "Name of the core dump instance."
        required: true
        type: string
      tags:
      - coreDump
      description: "Delete the core dump and the related files. Service credential needs to be provided before this operation."
      operationId: coreDump_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete coreDump by name
  /api/types/coreDump/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      tags:
      - coreDump
      description: "Refresh will update the list of available core dumps. It is called automatically for Unisphere GUI core dump screen, but must be called explicitly before a GET in order to get the current dumps via REST."
      operationId: coreDump_refresh
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Refresh coreDump
  /api/types/coreDump/action/authenticate:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [password]
          properties:
            password:
              description: "Service password."
              type: string
      tags:
      - coreDump
      description: "Authenticate with service password. Service credential is needed for downloading and deleting a core dump. The authenticated status will last for 10 minutes."
      operationId: coreDump_authenticate
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Authenticate coreDump
  /api/types/crl/instances:
    get:
      tags:
      - crl
      description: 'Collection query'
      operationId: crl_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/crl'
      summary: 1. Get all crl
  /api/instances/crl/{id}:
    get:
      tags:
      - crl
      description: 'Instance query'
      operationId: crl_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the crl instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/crl'
      summary: 2. Get crl by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the crl instance."
        required: true
        type: string
      tags:
      - crl
      description: "Delete a CRL"
      operationId: crl_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete crl by id
  /api/types/crl/action/importCRLByString:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [crlString,service]
          properties:
            crlString:
              description: "CRL string to be used to create crl instance.
               The CRL must be PEM-encoded."
              type: string
            service:
              description: "Service with which the CRL is associated."
              $ref: '#/definitions/ServiceTypeEnum'
            scope:
              description: "Scope of the CRL."
              type: object
              properties:
                nasServer:
                  description: "NAS Server with which the certificate is associated."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the nasServer instance."
      tags:
      - crl
      description: "Import a CRL by string"
      operationId: crl_importCRLByString
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new crl instance."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the crl instance."
      summary: 3. ImportCRLByString crl
  /api/instances/crl/{id}/action/exportCRLByString:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the crl instance."
        required: true
        type: string
      tags:
      - crl
      description: "Export a CRL by string"
      operationId: crl_exportCRLByString
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  crlString:
                    description: "CRL string for the PEM-encoded CRL instance."
                    type: string
      summary: 4. ExportCRLByString crl by id
  /api/types/dae/instances:
    get:
      tags:
      - dae
      description: 'Collection query'
      operationId: dae_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/dae'
      summary: 1. Get all dae
  /api/instances/dae/{id}:
    get:
      tags:
      - dae
      description: 'Instance query'
      operationId: dae_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the dae instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/dae'
      summary: 2. Get dae by id
  /api/instances/dae/name:{name}:
    get:
      tags:
      - dae
      description: 'Instance query'
      operationId: dae_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "DAE name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/dae'
      summary: 3. Get dae by name
  /api/types/dataCollectionResult/instances:
    get:
      tags:
      - dataCollectionResult
      description: 'Collection query'
      operationId: dataCollectionResult_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/dataCollectionResult'
      summary: 1. Get all dataCollectionResult
  /api/instances/dataCollectionResult/{id}:
    get:
      tags:
      - dataCollectionResult
      description: 'Instance query'
      operationId: dataCollectionResult_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the dataCollectionResult instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/dataCollectionResult'
      summary: 2. Get dataCollectionResult by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the dataCollectionResult instance."
        required: true
        type: string
      tags:
      - dataCollectionResult
      description: "Delete the dataCollection result."
      operationId: dataCollectionResult_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete dataCollectionResult by id
  /api/instances/dataCollectionResult/name:{name}:
    get:
      tags:
      - dataCollectionResult
      description: 'Instance query'
      operationId: dataCollectionResult_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "File name of the dataCollectionResult instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/dataCollectionResult'
      summary: 3. Get dataCollectionResult by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "File name of the dataCollectionResult instance."
        required: true
        type: string
      tags:
      - dataCollectionResult
      description: "Delete the dataCollection result."
      operationId: dataCollectionResult_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Delete dataCollectionResult by name
  /api/types/dataCollectionResult/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      tags:
      - dataCollectionResult
      description: "Refresh the Data Collection results."
      operationId: dataCollectionResult_refresh
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Refresh dataCollectionResult
  /api/types/datastore/instances:
    get:
      tags:
      - datastore
      description: 'Collection query'
      operationId: datastore_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/datastore'
      summary: 1. Get all datastore
  /api/instances/datastore/{id}:
    get:
      tags:
      - datastore
      description: 'Instance query'
      operationId: datastore_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/datastore'
      summary: 2. Get datastore by id
  /api/instances/datastore/name:{name}:
    get:
      tags:
      - datastore
      description: 'Instance query'
      operationId: datastore_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Friendly name of datastore displayed on vCenter."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/datastore'
      summary: 3. Get datastore by name
  /api/types/dhsmConnection/instances:
    get:
      tags:
      - dhsmConnection
      description: 'Collection query'
      operationId: dhsmConnection_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/dhsmConnection'
      summary: 1. Get all dhsmConnection
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [secondaryUrl,filesystemId]
          properties:
            secondaryUrl:
              description: "url of the secondary storage, if the secondary storage is Centera 
 or Cloud, this url should point to the CTA"
              type: string
            secondaryPort:
              description: "only valid when the secondary url points to CTA"
              type: integer
            localPort:
              description: "local port of the DHSM connection."
              type: integer
            readPolicy:
              description: "policy for recalling, can be full, passthrough, partial or none"
              $ref: '#/definitions/RecallPolicyEnum'
            secondaryUsername:
              description: "defines the username the Unity uses if digest authentication
 is required by the secondary storage"
              type: string
            secondaryPassword:
              description: "defines the password the Unity uses if digest authentication
 is required by the secondary storage"
              type: string
            timeout:
              description: "timeout of this connection in seconds"
              type: integer
            filesystemId:
              description: "id of the file system for which the connection is created."
              type: string
            mode:
              description: "mode of this connection, value could be enabled, disabled or recallOnly"
              $ref: '#/definitions/DhsmConnectionModeEnum'
      tags:
      - dhsmConnection
      description: "Create a new dhsm connection"
      operationId: dhsmConnection_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "connection instance that is created"
                    type: string
      summary: 3. Create dhsmConnection
  /api/instances/dhsmConnection/{id}:
    get:
      tags:
      - dhsmConnection
      description: 'Instance query'
      operationId: dhsmConnection_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/dhsmConnection'
      summary: 2. Get dhsmConnection by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      tags:
      - dhsmConnection
      description: "Delete a dhsm connection"
      operationId: dhsmConnection_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete dhsmConnection by id
  /api/instances/dhsmConnection/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            mode:
              description: "new mode of the connection."
              $ref: '#/definitions/DhsmConnectionModeEnum'
            secondaryServerName:
              type: string
            secondaryPort:
              description: "new port of the secondary storage"
              type: integer
            localPort:
              description: "local port of the DHSM connection."
              type: integer
            readPolicy:
              description: "new policy for recall."
              $ref: '#/definitions/RecallPolicyEnum'
            secondaryUsername:
              description: "new username of the secondary storage"
              type: string
            secondaryPassword:
              description: "new password of the secondary storage"
              type: string
            timeout:
              description: "new timeout value"
              type: integer
      tags:
      - dhsmConnection
      description: "Modify an existing dhsm connection"
      operationId: dhsmConnection_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify dhsmConnection by id
  /api/types/dhsmServer/instances:
    get:
      tags:
      - dhsmServer
      description: 'Collection query'
      operationId: dhsmServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/dhsmServer'
      summary: 1. Get all dhsmServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [nasServer]
          properties:
            nasServer:
              description: "Unique identifier of the NAS server which the DHSM server belongs."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the nasServer instance."
            password:
              description: "The password for the DHSM server"
              type: string
            isHTTPSEnabled:
              description: "Require SSL (HTTPS) for DHSM requests to this DHSM server.
  Values are:
  <ul>
  <li> true - HTTPS is required. </li>
  <li> false - HTTPS is not allowed. </li>
  </ul>"
              type: boolean
      tags:
      - dhsmServer
      description: "Create a DHSM server."
      operationId: dhsmServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new DHSM server."
                    type: string
      summary: 3. Create dhsmServer
  /api/instances/dhsmServer/{id}:
    get:
      tags:
      - dhsmServer
      description: 'Instance query'
      operationId: dhsmServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the dhsmServer instance"
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/dhsmServer'
      summary: 2. Get dhsmServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the dhsmServer instance"
        required: true
        type: string
      tags:
      - dhsmServer
      description: "Delete a DHSM server."
      operationId: dhsmServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete dhsmServer by id
  /api/instances/dhsmServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the dhsmServer instance"
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            password:
              description: "The password for the DHSM server."
              type: string
            isHTTPSEnabled:
              description: "Require SSL (HTTPS) for DHSM requests to this DHSM server.
  Values are:
  <ul>
  <li> true - HTTPS is required. </li>
  <li> false - HTTPS is not allowed. </li>
  </ul>"
              type: boolean
      tags:
      - dhsmServer
      description: "Modify a DHSM server."
      operationId: dhsmServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify dhsmServer by id
  /api/types/disk/instances:
    get:
      tags:
      - disk
      description: 'Collection query'
      operationId: disk_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/disk'
      summary: 1. Get all disk
  /api/instances/disk/{id}:
    get:
      tags:
      - disk
      description: 'Instance query'
      operationId: disk_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the drive instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/disk'
      summary: 2. Get disk by id
  /api/instances/disk/name:{name}:
    get:
      tags:
      - disk
      description: 'Instance query'
      operationId: disk_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Drive name. Modifiable for virtual drives only."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/disk'
      summary: 3. Get disk by name
  /api/instances/disk/{id}/action/repurpose:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the drive instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [psid]
          properties:
            psid:
              description: "An alpha-numeric string that can be found on the physical label of the drive to repurpose."
              type: string
      tags:
      - disk
      description: "This operation will allow a locked foreign drive to be used in the
  current storage array, all data on the drive will become unrecoverable."
      operationId: disk_repurpose
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Repurpose disk by id
  /api/instances/disk/name:{name}/action/repurpose:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Drive name. Modifiable for virtual drives only."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [psid]
          properties:
            psid:
              description: "An alpha-numeric string that can be found on the physical label of the drive to repurpose."
              type: string
      tags:
      - disk
      description: "This operation will allow a locked foreign drive to be used in the
  current storage array, all data on the drive will become unrecoverable."
      operationId: disk_repurpose_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Repurpose disk by name
  /api/types/diskGroup/instances:
    get:
      tags:
      - diskGroup
      description: 'Collection query'
      operationId: diskGroup_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/diskGroup'
      summary: 1. Get all diskGroup
  /api/instances/diskGroup/{id}:
    get:
      tags:
      - diskGroup
      description: 'Instance query'
      operationId: diskGroup_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the diskGroup instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/diskGroup'
      summary: 2. Get diskGroup by id
  /api/instances/diskGroup/name:{name}:
    get:
      tags:
      - diskGroup
      description: 'Instance query'
      operationId: diskGroup_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Disk group name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/diskGroup'
      summary: 3. Get diskGroup by name
  /api/types/dnsServer/instances:
    get:
      tags:
      - dnsServer
      description: 'Collection query'
      operationId: dnsServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/dnsServer'
      summary: 1. Get all dnsServer
  /api/instances/dnsServer/{id}:
    get:
      tags:
      - dnsServer
      description: 'Instance query'
      operationId: dnsServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the dnsServer instance.
  This is a singleton resource, so the id is always 0."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/dnsServer'
      summary: 2. Get dnsServer by id
  /api/instances/dnsServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the dnsServer instance.
  This is a singleton resource, so the id is always 0."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            addresses:
              description: "New list of IP addresses to replace the exsting address list for this DNS server."
              type: array
              items:
                type: string
      tags:
      - dnsServer
      description: "Modify DNS server domain settings."
      operationId: dnsServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify dnsServer by id
  /api/types/dpe/instances:
    get:
      tags:
      - dpe
      description: 'Collection query'
      operationId: dpe_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/dpe'
      summary: 1. Get all dpe
  /api/instances/dpe/{id}:
    get:
      tags:
      - dpe
      description: 'Instance query'
      operationId: dpe_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the dpe instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/dpe'
      summary: 2. Get dpe by id
  /api/instances/dpe/name:{name}:
    get:
      tags:
      - dpe
      description: 'Instance query'
      operationId: dpe_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "DPE name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/dpe'
      summary: 3. Get dpe by name
  /api/types/encryption/instances:
    get:
      tags:
      - encryption
      description: 'Collection query'
      operationId: encryption_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/encryption'
      summary: 1. Get all encryption
  /api/instances/encryption/{id}:
    get:
      tags:
      - encryption
      description: 'Instance query'
      operationId: encryption_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the encryption instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/encryption'
      summary: 2. Get encryption by id
  /api/instances/encryption/{id}/action/retrieveNonce:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the encryption instance."
        required: true
        type: string
      tags:
      - encryption
      description: "Retrieve the nonce integer which is required by modify/activate method."
      operationId: encryption_retrieveNonce
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  nonce:
                    description: "Key Manager generated nonce integer with 1 minute expiration."
                    type: integer
      summary: 3. RetrieveNonce encryption by id
  /api/instances/encryption/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the encryption instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            kmipStatus:
              description: "Enable/Disable KMIP server support."
              $ref: '#/definitions/KmipStatusEnum'
      tags:
      - encryption
      description: "Modify the encryption."
      operationId: encryption_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify encryption by id
  /api/types/esrsParam/instances:
    get:
      tags:
      - esrsParam
      description: 'Collection query'
      operationId: esrsParam_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/esrsParam'
      summary: 1. Get all esrsParam
  /api/instances/esrsParam/{id}:
    get:
      tags:
      - esrsParam
      description: 'Instance query'
      operationId: esrsParam_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the Remote Support instance.<br/>
  <br/>
  
  --eng
  This value is always 0, 
  because at any given time there can only one remote support 
  solution enabled."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/esrsParam'
      summary: 2. Get esrsParam by id
  /api/instances/esrsParam/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the Remote Support instance.<br/>
  <br/>
  
  --eng
  This value is always 0, 
  because at any given time there can only one remote support 
  solution enabled."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            enabled:
              description: "Enable or disable Remote Support. <br/>
  <br/>
  Values are:
  <ul>
  <li>true - Enable Remote Support</li>
  <li>false - Disable Remote Support</li>
  </ul>"
              type: boolean
            esrsVeAddress:
              description: "Centralized Remote Support ESRS VE appliance.<br/>"
              type: string
            secondaryEsrsVeAddress:
              description: "Secondary Centralized Remote Support ESRS VE appliance.<br/>
  <br/>
  If a port is not specified the following default port of
  9443 will be used.<br/>"
              type: string
            isCentralized:
              description: "Type of Remote Support<br/>
  <br/>
  Values are:
  <ul>
  <li>true - Centralized Remote Support</li>
  <li>false - Integrated Remote Support</li>
  <ul>"
              type: boolean
            siteId:
              description: "Site id where the system is located.
  <br/>"
              type: string
            isEsrsVeEulaAccepted:
              description: "Indicate whether to accept the ESRS VE End User License Agreement (EULA) or not.<br/>
  <li>true - To accept the ESRS VE EULA.</li>
  <li>false - Not to accept the ESRS VE EULA.</li>
  <br/>"
              type: boolean
            serviceLevel:
              description: "ESRS configuration level.  
  <br/>
  Values are:
  <ul>
  <li>2 - Partial ESRS functions (Without remote access from DELL EMC into the storage system)</li>
  <li>3 - Full ESRS functions (With remote access from DELL EMC into the storage system)</li>
  <ul>
  Contact information is required to configure service level 3 ESRS. 
  Only allow service level 2 ESRS upgrade into service level 3 ESRS. The opposite is not allowed."
              $ref: '#/definitions/EsrsLevelEnum'
      tags:
      - esrsParam
      description: "Modify ESRS settings.<br/>
  <br/>
  Enable, disable or change Remote Support options.<br/>
  <br/>"
      operationId: esrsParam_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify esrsParam by id
  /api/instances/esrsParam/{id}/action/sendTestAlert:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the Remote Support instance.<br/>
  <br/>
  
  --eng
  This value is always 0, 
  because at any given time there can only one remote support 
  solution enabled."
        required: true
        type: string
      tags:
      - esrsParam
      description: "Send a test alert to EMC using the configured Remote Support option."
      operationId: esrsParam_sendTestAlert
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. SendTestAlert esrsParam by id
  /api/instances/esrsParam/{id}/action/checkNetwork:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the Remote Support instance.<br/>
  <br/>
  
  --eng
  This value is always 0, 
  because at any given time there can only one remote support 
  solution enabled."
        required: true
        type: string
      tags:
      - esrsParam
      description: "Check the network connectivity from the ESRS VE to all required EMC servers.
  Upon a connectivity failure, contact your network or server administrator
  to fix any proxy or firewall issues."
      operationId: esrsParam_checkNetwork
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. CheckNetwork esrsParam by id
  /api/instances/esrsParam/{id}/action/checkSupportAccount:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the Remote Support instance.<br/>
  <br/>
  
  --eng
  This value is always 0, 
  because at any given time there can only one remote support 
  solution enabled."
        required: true
        type: string
      tags:
      - esrsParam
      description: "Check whether the support account is properly set and is ready to configure integrated ESRS.
  Upon a check failure, follow instruction or contact your service provider to fix it."
      operationId: esrsParam_checkSupportAccount
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. CheckSupportAccount esrsParam by id
  /api/instances/esrsParam/{id}/action/validateAccessCode:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the Remote Support instance.<br/>
  <br/>
  
  --eng
  This value is always 0, 
  because at any given time there can only one remote support 
  solution enabled."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [accessCode]
          properties:
            accessCode:
              description: "Access code requested via requestAccessCode method."
              type: string
      tags:
      - esrsParam
      description: "Validate access code for configuring integrated ESRS. The access code is sent from EMC after calling 
  requestAccessCode, and can be read from the email account user registered with support.emc.com."
      operationId: esrsParam_validateAccessCode
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. ValidateAccessCode esrsParam by id
  /api/instances/esrsParam/{id}/action/requestAccessCode:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the Remote Support instance.<br/>
  <br/>
  
  --eng
  This value is always 0, 
  because at any given time there can only one remote support 
  solution enabled."
        required: true
        type: string
      tags:
      - esrsParam
      description: "Request an access code for ESRS VE. This access code will be emailed to the email account user
  registered with support.emc.com.
 When user tries to configure ESRS VE, ESRS VE needs to verify he/she has access to the provided support
 credential. User could finish the verification operation via requesting an access code via this method,
 and submit the received access code back to ESRS VE for verification."
      operationId: esrsParam_requestAccessCode
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  emailAddress:
                    description: "The email address to which the access code be sent."
                    type: string
      summary: 8. RequestAccessCode esrsParam by id
  /api/instances/esrsParam/{id}/action/checkESRSVEConnectivity:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the Remote Support instance.<br/>
  <br/>
  
  --eng
  This value is always 0, 
  because at any given time there can only one remote support 
  solution enabled."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [esrsVeAddress]
          properties:
            esrsVeAddress:
              description: "Centralized Remote Support ESRS VE appliance.<br/>
  <br/>
  If a port is not specified the following default port of
  9443 will be used.<br/>"
              type: string
      tags:
      - esrsParam
      description: "Check the network connectivity from storage system to the Centralized Remote Support ESRS VE appliance."
      operationId: esrsParam_checkESRSVEConnectivity
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 9. CheckESRSVEConnectivity esrsParam by id
  /api/types/esrsPolicyManager/instances:
    get:
      tags:
      - esrsPolicyManager
      description: 'Collection query'
      operationId: esrsPolicyManager_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/esrsPolicyManager'
      summary: 1. Get all esrsPolicyManager
  /api/instances/esrsPolicyManager/{id}:
    get:
      tags:
      - esrsPolicyManager
      description: 'Instance query'
      operationId: esrsPolicyManager_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the ESRS Policy Manager.<br/>
  <br/>
  
  --eng
  This value is always 0, 
  because at any given time there can only one remote support 
  solution enabled."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/esrsPolicyManager'
      summary: 2. Get esrsPolicyManager by id
  /api/instances/esrsPolicyManager/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the ESRS Policy Manager.<br/>
  <br/>
  
  --eng
  This value is always 0, 
  because at any given time there can only one remote support 
  solution enabled."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            isEnabled:
              description: "Enable or disable the use of a Policy Manager
  for Integrated Remote Support.<br/>
  <br/>
  Values are: 
  <ul> 
  <li>true - Policy Manager is configured</li> 
  <li>false - Policy Manager is configured</li> 
  </ul>"
              type: boolean
            address:
              description: "Address and port of Integrated Remote Support Policy Manager.<br/>
  <br/>
  If a port is not specified the following default ports 
  will be used:
  <ul>
  <li>Protocol = http, Default port = 8090</li>
  <li>Protocol = https, Default port = 8443</li>
  </ul>"
              type: string
            useHTTPS:
              description: "The protocol used for communications with the 
  Integrated Remote Support Policy Manager. <br/>
  <br/>
  Values are:: 
  <ul> 
  <li>true - Protocol is https (default, secure)</li>
  <li>false - Protocol s http</li> 
  </ul>"
              type: boolean
            sslStrength:
              description: "The SSL Strength when policy manager uses HTTPS protocol. <br/>
  <br/>
  Values are::
  <ul>
  <li>2 - High(168 bit) (default, secure)</li>
  <li>1 - Medium(128 bit)</li>
  <li>0 - Low(40 bit)</li>
  </ul>"
              $ref: '#/definitions/SSLStrengthEnum'
            proxyIsEnabled:
              description: "Enable or disable proxy server of an integrated
  Remote Support Policy Manager.<br/>
  Values are:
  <ul>
  <li>true - Proxy manager is configured</li>
  <li>false - Proxy Manager is not configured</li>
  </ul>"
              type: boolean
            proxyAddress:
              description: "Integrated Remote Support Policy 
  Manager proxy server.<br/>
  <br/>
  If a port is not specified the following default ports 
  will be used:.
  <ul>
  <li>Protocol = http, Default port = 3128</li>
  <li>Protocol = socks, Default port = 1080</li>
  </ul>"
              type: string
            proxyUseSocks:
              description: "The protocol used for communications with the 
  Integrated Remote Support Policy Manager Proxy Server. <br/>
  <br/>
  Values are:  
  <ul>
  <li>false - Protocol is http</li>
  <li>true - Protocol is socks (default, secure)</li>
  </ul>"
              type: boolean
            proxyUserName:
              description: "User account with permission to access 
  the Integrated Remote Support Policy Manager proxy server"
              type: string
            proxyPassword:
              description: "User account password for the
  Integrated Remote Support Policy Manager proxy server.<br/> 

  <br/>"
              type: string
      tags:
      - esrsPolicyManager
      description: "Modify ESRS policy manager settings.<br/>"
      operationId: esrsPolicyManager_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify esrsPolicyManager by id
  /api/types/ethernetPort/instances:
    get:
      tags:
      - ethernetPort
      description: 'Collection query'
      operationId: ethernetPort_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/ethernetPort'
      summary: 1. Get all ethernetPort
  /api/instances/ethernetPort/{id}:
    get:
      tags:
      - ethernetPort
      description: 'Instance query'
      operationId: ethernetPort_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the Ethernet port instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ethernetPort'
      summary: 2. Get ethernetPort by id
  /api/instances/ethernetPort/name:{name}:
    get:
      tags:
      - ethernetPort
      description: 'Instance query'
      operationId: ethernetPort_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "User-specified Ethernet port name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ethernetPort'
      summary: 3. Get ethernetPort by name
  /api/instances/ethernetPort/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the Ethernet port instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            mtuSize:
              description: "MTU packet size that the Ethernet port can transmit, in bytes."
              type: integer
            speed:
              description: "Requested data transmission speed for the Ethernet port."
              $ref: '#/definitions/EPSpeedValuesEnum'
      tags:
      - ethernetPort
      description: "Modify the Ethernet port's Maximum Transmission Unit (MTU) size."
      operationId: ethernetPort_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify ethernetPort by id
  /api/instances/ethernetPort/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified Ethernet port name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            mtuSize:
              description: "MTU packet size that the Ethernet port can transmit, in bytes."
              type: integer
            speed:
              description: "Requested data transmission speed for the Ethernet port."
              $ref: '#/definitions/EPSpeedValuesEnum'
      tags:
      - ethernetPort
      description: "Modify the Ethernet port's Maximum Transmission Unit (MTU) size."
      operationId: ethernetPort_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify ethernetPort by name
  /api/types/ethernetPort/action/recommendForAggregation:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [ethernetPort]
          properties:
            ethernetPort:
              description: "Ethernet port for which to recommend other ports for link aggregation."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the Ethernet port instance."
      tags:
      - ethernetPort
      description: "Recommend Ethernet ports to use for link aggregation."
      operationId: ethernetPort_recommendForAggregation
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  recommendedPorts:
                    description: "Recommended ports, in order of preference."
                    type: array
                    items:
                      description: "Information about Ethernet ports in the storage system."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the Ethernet port instance."
      summary: 6. RecommendForAggregation ethernetPort
  /api/types/event/instances:
    get:
      tags:
      - event
      description: 'Collection query'
      operationId: event_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/event'
      summary: 1. Get all event
  /api/instances/event/{id}:
    get:
      tags:
      - event
      description: 'Instance query'
      operationId: event_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the event instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/event'
      summary: 2. Get event by id
  /api/types/fan/instances:
    get:
      tags:
      - fan
      description: 'Collection query'
      operationId: fan_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fan'
      summary: 1. Get all fan
  /api/instances/fan/{id}:
    get:
      tags:
      - fan
      description: 'Instance query'
      operationId: fan_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the fan instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fan'
      summary: 2. Get fan by id
  /api/instances/fan/name:{name}:
    get:
      tags:
      - fan
      description: 'Instance query'
      operationId: fan_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Fan name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fan'
      summary: 3. Get fan by name
  /api/types/fastCache/instances:
    get:
      tags:
      - fastCache
      description: 'Collection query'
      operationId: fastCache_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fastCache'
      summary: 01. Get all fastCache
  /api/instances/fastCache/{id}:
    get:
      tags:
      - fastCache
      description: 'Instance query'
      operationId: fastCache_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the FAST Cache instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fastCache'
      summary: 02. Get fastCache by id
  /api/instances/fastCache/name:{name}:
    get:
      tags:
      - fastCache
      description: 'Instance query'
      operationId: fastCache_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "The name of FAST Cache."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fastCache'
      summary: 03. Get fastCache by name
  /api/instances/fastCache/{id}/action/enable:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the FAST Cache instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [diskgroup,numberOfDisks]
          properties:
            diskgroup:
              description: "Disk group from which to take drives for FAST cache."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the diskGroup instance."
            numberOfDisks:
              description: "Number of drives."
              type: integer
            enableOnAllPools:
              description: "Enable FAST Cache for all existing pools."
              type: boolean
      tags:
      - fastCache
      description: "Create FAST Cache using specified disk group and 
  number of drives and if specified, Enable FAST Cache on all
  existing pools."
      operationId: fastCache_enable
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 04. Enable fastCache by id
  /api/instances/fastCache/name:{name}/action/enable:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "The name of FAST Cache."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [diskgroup,numberOfDisks]
          properties:
            diskgroup:
              description: "Disk group from which to take drives for FAST cache."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the diskGroup instance."
            numberOfDisks:
              description: "Number of drives."
              type: integer
            enableOnAllPools:
              description: "Enable FAST Cache for all existing pools."
              type: boolean
      tags:
      - fastCache
      description: "Create FAST Cache using specified disk group and 
  number of drives and if specified, Enable FAST Cache on all
  existing pools."
      operationId: fastCache_enable_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 05. Enable fastCache by name
  /api/instances/fastCache/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the FAST Cache instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            addDiskGroups:
              description: "List of disk groups to add to the FAST Cache, as defined by the diskGroup resource type."
              type: array
              items:
                description: "Disk groups classify the drives in the system into groups
  with equivalent storage characteristics. These
  characteristics include drive type, capacity, and rotational
  speed.
  <br/>
  <br/>
  The system uses disk groups for creating pools."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the diskGroup instance."
            addDiskGroupNumDisks:
              description: "List of the number of drives from each disk group to add to the FAST Cache."
              type: array
              items:
                type: integer
            removeRaidGroups:
              description: "List of raidGroupCache objects to remove from FAST Cache."
              type: array
              items:
                type: string
      tags:
      - fastCache
      description: "Modify the FAST cache, either by adding group(s) of drives or
  removing RAID groups."
      operationId: fastCache_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 06. Modify fastCache by id
  /api/instances/fastCache/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "The name of FAST Cache."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            addDiskGroups:
              description: "List of disk groups to add to the FAST Cache, as defined by the diskGroup resource type."
              type: array
              items:
                description: "Disk groups classify the drives in the system into groups
  with equivalent storage characteristics. These
  characteristics include drive type, capacity, and rotational
  speed.
  <br/>
  <br/>
  The system uses disk groups for creating pools."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the diskGroup instance."
            addDiskGroupNumDisks:
              description: "List of the number of drives from each disk group to add to the FAST Cache."
              type: array
              items:
                type: integer
            removeRaidGroups:
              description: "List of raidGroupCache objects to remove from FAST Cache."
              type: array
              items:
                type: string
      tags:
      - fastCache
      description: "Modify the FAST cache, either by adding group(s) of drives or
  removing RAID groups."
      operationId: fastCache_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 07. Modify fastCache by name
  /api/instances/fastCache/{id}/action/disable:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the FAST Cache instance."
        required: true
        type: string
      tags:
      - fastCache
      description: "Disable FAST cache, freeing the drives for other use."
      operationId: fastCache_disable
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 08. Disable fastCache by id
  /api/instances/fastCache/name:{name}/action/disable:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "The name of FAST Cache."
        required: true
        type: string
      tags:
      - fastCache
      description: "Disable FAST cache, freeing the drives for other use."
      operationId: fastCache_disable_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 09. Disable fastCache by name
  /api/instances/fastCache/{id}/action/getConfigurations:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the FAST Cache instance."
        required: true
        type: string
      tags:
      - fastCache
      description: "Get recommended FAST Cache drive configurations."
      operationId: fastCache_getConfigurations
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  configurations:
                    description: "The list of recommended FAST Cache configuration, output parameter."
                    type: array
                    items:
                      description: "Possible disk selections for a storage tier, given a specified storage tier
  type, RAID type, and stripe width.
  <br/>
  <br/>
  Use this resource type, along with the pool, diskGroup, and storageTier
  resource types, to create custom pools. For more information, see the help
  topic for the pool resource type.

  Use this"
                      type: object
                      properties:
                        storageTier:
                          description: "Storage tier for which you want to obtain proposed configurations as defined
  by the storageCapability resource type."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the storageTier instance."
                        raidType:
                          description: "(Applies to physical deployments only.) RAID type of the proposed storage configuration."
                          $ref: '#/definitions/RaidTypeEnum'
                        stripeWidth:
                          description: "(Applies to physical deployments only.) Stripe width of the proposed storage configuration."
                          $ref: '#/definitions/RaidStripeWidthEnum'
                        disksTotal:
                          description: "(Applies to physical deployments only.) Total number of disks in system that can be configured with the specified disk
  type, RAID type, and stripe width."
                          type: integer
                        sizeTotal:
                          description: "Maximum usable capacity for the specified storage configuration if all
  available disks are used for the configuration."
                          type: integer
                        diskGroupConfigurations:
                          description: "(Applies to physical deployments only.) Possible amounts of disks and capacities for each diskGroup that contains
  disks of type corresponding to storageCapability (NVMe, EFD, SAS, NL-SAS)"
                          type: array
                          items:
                            description: "Set of possible disk selections for a storage tier, given a specified RAID
  type (or RAID Level) and stripe width (or RAID modulus)."
                            type: object
                            properties:
                              diskGroup:
                                description: "Disk group from which to take disks for the storage tier configuration."
                                type: object
                                properties:
                                  id:
                                    type: string
                                    description: "Unique identifier of the diskGroup instance."
                              unusedDisks:
                                description: "Number of unused disks."
                                type: integer
                              tierType:
                                description: "Tier type."
                                $ref: '#/definitions/TierTypeEnum'
                              partNumber:
                                description: "Part number for the disks."
                                type: string
                              diskRpm:
                                type: integer
                              advertisedSize:
                                description: "Disk capacity written on the label of the disks."
                                type: integer
                              diskSize:
                                description: "Disk capacity."
                                type: integer
                              raidGroupConfigurations:
                                description: "Comma-separated list of allowed RAID group configurations."
                                type: array
                                items:
                                  description: "RAID group configurations for particular tier."
                                  $ref: '#/definitions/raidGroupConfiguration'
                              diskTechnology:
                                description: "Disk technology of the disks."
                                $ref: '#/definitions/DiskTechnologyEnum'
                              isDefault:
                                description: "Indicates whether the configuration is the default. Values are:
  <ul>
  <li>Storage tier configuration is the default configuration.</li>
  <li>Storage tier configuration is not the default configuration.>/li>
  </ul>"
                                type: boolean
                              minHotSpareCandidates:
                                description: "Minimum number of hot spares required for existing traditional pool(s) 
  in the disk group. Can be 0 if no traditional pool uses this disk group.
  As a rule one Hot spare is required per 30 disks."
                                type: integer
      summary: 10. GetConfigurations fastCache by id
  /api/instances/fastCache/name:{name}/action/getConfigurations:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: name
        in: path
        description: "The name of FAST Cache."
        required: true
        type: string
      tags:
      - fastCache
      description: "Get recommended FAST Cache drive configurations."
      operationId: fastCache_getConfigurations_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  configurations:
                    description: "The list of recommended FAST Cache configuration, output parameter."
                    type: array
                    items:
                      description: "Possible disk selections for a storage tier, given a specified storage tier
  type, RAID type, and stripe width.
  <br/>
  <br/>
  Use this resource type, along with the pool, diskGroup, and storageTier
  resource types, to create custom pools. For more information, see the help
  topic for the pool resource type.

  Use this"
                      type: object
                      properties:
                        storageTier:
                          description: "Storage tier for which you want to obtain proposed configurations as defined
  by the storageCapability resource type."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the storageTier instance."
                        raidType:
                          description: "(Applies to physical deployments only.) RAID type of the proposed storage configuration."
                          $ref: '#/definitions/RaidTypeEnum'
                        stripeWidth:
                          description: "(Applies to physical deployments only.) Stripe width of the proposed storage configuration."
                          $ref: '#/definitions/RaidStripeWidthEnum'
                        disksTotal:
                          description: "(Applies to physical deployments only.) Total number of disks in system that can be configured with the specified disk
  type, RAID type, and stripe width."
                          type: integer
                        sizeTotal:
                          description: "Maximum usable capacity for the specified storage configuration if all
  available disks are used for the configuration."
                          type: integer
                        diskGroupConfigurations:
                          description: "(Applies to physical deployments only.) Possible amounts of disks and capacities for each diskGroup that contains
  disks of type corresponding to storageCapability (NVMe, EFD, SAS, NL-SAS)"
                          type: array
                          items:
                            description: "Set of possible disk selections for a storage tier, given a specified RAID
  type (or RAID Level) and stripe width (or RAID modulus)."
                            type: object
                            properties:
                              diskGroup:
                                description: "Disk group from which to take disks for the storage tier configuration."
                                type: object
                                properties:
                                  id:
                                    type: string
                                    description: "Unique identifier of the diskGroup instance."
                              unusedDisks:
                                description: "Number of unused disks."
                                type: integer
                              tierType:
                                description: "Tier type."
                                $ref: '#/definitions/TierTypeEnum'
                              partNumber:
                                description: "Part number for the disks."
                                type: string
                              diskRpm:
                                type: integer
                              advertisedSize:
                                description: "Disk capacity written on the label of the disks."
                                type: integer
                              diskSize:
                                description: "Disk capacity."
                                type: integer
                              raidGroupConfigurations:
                                description: "Comma-separated list of allowed RAID group configurations."
                                type: array
                                items:
                                  description: "RAID group configurations for particular tier."
                                  $ref: '#/definitions/raidGroupConfiguration'
                              diskTechnology:
                                description: "Disk technology of the disks."
                                $ref: '#/definitions/DiskTechnologyEnum'
                              isDefault:
                                description: "Indicates whether the configuration is the default. Values are:
  <ul>
  <li>Storage tier configuration is the default configuration.</li>
  <li>Storage tier configuration is not the default configuration.>/li>
  </ul>"
                                type: boolean
                              minHotSpareCandidates:
                                description: "Minimum number of hot spares required for existing traditional pool(s) 
  in the disk group. Can be 0 if no traditional pool uses this disk group.
  As a rule one Hot spare is required per 30 disks."
                                type: integer
      summary: 11. GetConfigurations fastCache by name
  /api/types/fastVP/instances:
    get:
      tags:
      - fastVP
      description: 'Collection query'
      operationId: fastVP_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fastVP'
      summary: 1. Get all fastVP
  /api/instances/fastVP/{id}:
    get:
      tags:
      - fastVP
      description: 'Instance query'
      operationId: fastVP_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fastVP'
      summary: 2. Get fastVP by id
  /api/instances/fastVP/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            relocationRate:
              description: "Relocation rate."
              $ref: '#/definitions/FastVPRelocationRateEnum'
            isScheduleEnabled:
              description: "Enable system relocation schedule."
              type: boolean
            scheduleDays:
              description: "List of days of the week on which to run scheduled relocations."
              type: array
              items:
                $ref: '#/definitions/DayOfWeekEnum'
            scheduleStartTime:
              description: "Time of day to start scheduled relocations. Maximum resolution is in minutes."
              type: string
              format: date-time
            scheduleEndTime:
              description: "Time of day at which scheduled relocation should end. Maximum resolution is in minutes."
              type: string
              format: date-time
            isPaused:
              description: "Pause/Resume data relocation."
              type: boolean
      tags:
      - fastVP
      description: "Modify System FAST VP settings.
  <br/>
  Please note, once Relocation Rate is changed, it will take certain time up to the next scheduled relocation to update 
  estimated relocation time."
      operationId: fastVP_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify fastVP by id
  /api/types/fcPort/instances:
    get:
      tags:
      - fcPort
      description: 'Collection query'
      operationId: fcPort_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fcPort'
      summary: 1. Get all fcPort
  /api/instances/fcPort/{id}:
    get:
      tags:
      - fcPort
      description: 'Instance query'
      operationId: fcPort_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the fcPort instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fcPort'
      summary: 2. Get fcPort by id
  /api/instances/fcPort/name:{name}:
    get:
      tags:
      - fcPort
      description: 'Instance query'
      operationId: fcPort_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "FC port name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fcPort'
      summary: 3. Get fcPort by name
  /api/instances/fcPort/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the fcPort instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [requestedSpeed]
          properties:
            requestedSpeed:
              description: "Requested data transmission speed for the FC port."
              $ref: '#/definitions/FcSpeedEnum'
      tags:
      - fcPort
      description: "Set the FC port data transmission rate to the requested speed."
      operationId: fcPort_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify fcPort by id
  /api/instances/fcPort/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "FC port name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [requestedSpeed]
          properties:
            requestedSpeed:
              description: "Requested data transmission speed for the FC port."
              $ref: '#/definitions/FcSpeedEnum'
      tags:
      - fcPort
      description: "Set the FC port data transmission rate to the requested speed."
      operationId: fcPort_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify fcPort by name
  /api/types/feature/instances:
    get:
      tags:
      - feature
      description: 'Collection query'
      operationId: feature_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/feature'
      summary: 1. Get all feature
  /api/instances/feature/{id}:
    get:
      tags:
      - feature
      description: 'Instance query'
      operationId: feature_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the feature instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/feature'
      summary: 2. Get feature by id
  /api/instances/feature/name:{name}:
    get:
      tags:
      - feature
      description: 'Instance query'
      operationId: feature_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Feature name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/feature'
      summary: 3. Get feature by name
  /api/types/fileDNSServer/instances:
    get:
      tags:
      - fileDNSServer
      description: 'Collection query'
      operationId: fileDNSServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fileDNSServer'
      summary: 1. Get all fileDNSServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [nasServer,domain,addresses]
          properties:
            nasServer:
              description: "Unique identifier of the NAS server which the DNS server belongs."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the nasServer instance."
            domain:
              description: "DNS domain name."
              type: string
            addresses:
              description: "Prioritized list of one to three IPv4 and/or IPv6 addresses of DNS server(s) for the domain."
              type: array
              items:
                type: string
      tags:
      - fileDNSServer
      description: "Add a new domain for the DNS server. Only one instance can be created per NAS server."
      operationId: fileDNSServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "The created fileDNSServer instance."
                    type: string
      summary: 3. Create fileDNSServer
  /api/instances/fileDNSServer/{id}:
    get:
      tags:
      - fileDNSServer
      description: 'Instance query'
      operationId: fileDNSServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the DNS object."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fileDNSServer'
      summary: 2. Get fileDNSServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the DNS object."
        required: true
        type: string
      tags:
      - fileDNSServer
      description: "Delete a DNS domain."
      operationId: fileDNSServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete fileDNSServer by id
  /api/instances/fileDNSServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the DNS object."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            domain:
              description: "DNS domain name."
              type: string
            addresses:
              description: "The list of DNS server IP addresses."
              type: array
              items:
                type: string
            replicationPolicy:
              description: "Status of the LDAP list in the NAS server operating as a replication destination."
              $ref: '#/definitions/ReplicationPolicyEnum'
      tags:
      - fileDNSServer
      description: "Modify a DNS domain."
      operationId: fileDNSServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify fileDNSServer by id
  /api/types/fileEventsPool/instances:
    get:
      tags:
      - fileEventsPool
      description: 'Collection query'
      operationId: fileEventsPool_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fileEventsPool'
      summary: 1. Get all fileEventsPool
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [eventsPublisher,name,servers]
          properties:
            eventsPublisher:
              description: "Unique identifier of the File Event Service to which the File Event Service Pool belongs."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the File Event Service instance."
            name:
              description: "Name assigned to the set of Windows servers where File Event Service software is installed."
              type: string
            servers:
              description: "Addresses of the File Event Service servers."
              type: array
              items:
                type: string
            preEvents:
              description: "Sends notification before selected events occurs. Default is empty list."
              type: array
              items:
                $ref: '#/definitions/FileEventTypesEnum'
            postEvents:
              description: "Sends notification before selected events occurs. Default is empty list."
              type: array
              items:
                $ref: '#/definitions/FileEventTypesEnum'
            postErrorEvents:
              type: array
              items:
                $ref: '#/definitions/FileEventTypesEnum'
      tags:
      - fileEventsPool
      description: "Create a File Event Service Pool configuration."
      operationId: fileEventsPool_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    type: string
      summary: 4. Create fileEventsPool
  /api/instances/fileEventsPool/{id}:
    get:
      tags:
      - fileEventsPool
      description: 'Instance query'
      operationId: fileEventsPool_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the File Event Service Pool instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fileEventsPool'
      summary: 2. Get fileEventsPool by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the File Event Service Pool instance."
        required: true
        type: string
      tags:
      - fileEventsPool
      description: "Delete a File Event Service Pool."
      operationId: fileEventsPool_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete fileEventsPool by id
  /api/instances/fileEventsPool/name:{name}:
    get:
      tags:
      - fileEventsPool
      description: 'Instance query'
      operationId: fileEventsPool_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Name assigned to the set of Windows servers where File Event Service  software is installed."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fileEventsPool'
      summary: 3. Get fileEventsPool by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name assigned to the set of Windows servers where File Event Service  software is installed."
        required: true
        type: string
      tags:
      - fileEventsPool
      description: "Delete a File Event Service Pool."
      operationId: fileEventsPool_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete fileEventsPool by name
  /api/instances/fileEventsPool/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the File Event Service Pool instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Name assigned to the set of Windows servers where File Event Service software is installed."
              type: string
            servers:
              description: "Addresses of the File Event Service servers."
              type: array
              items:
                type: string
            preEvents:
              description: "Sends notification before selected events occurs."
              type: array
              items:
                $ref: '#/definitions/FileEventTypesEnum'
            postEvents:
              description: "Sends notification before selected events occurs."
              type: array
              items:
                $ref: '#/definitions/FileEventTypesEnum'
            postErrorEvents:
              type: array
              items:
                $ref: '#/definitions/FileEventTypesEnum'
            replicationPolicy:
              $ref: '#/definitions/ReplicationPolicyEnum'
      tags:
      - fileEventsPool
      description: "Modify a File Event Service Pool configuration."
      operationId: fileEventsPool_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify fileEventsPool by id
  /api/instances/fileEventsPool/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name assigned to the set of Windows servers where File Event Service  software is installed."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Name assigned to the set of Windows servers where File Event Service software is installed."
              type: string
            servers:
              description: "Addresses of the File Event Service servers."
              type: array
              items:
                type: string
            preEvents:
              description: "Sends notification before selected events occurs."
              type: array
              items:
                $ref: '#/definitions/FileEventTypesEnum'
            postEvents:
              description: "Sends notification before selected events occurs."
              type: array
              items:
                $ref: '#/definitions/FileEventTypesEnum'
            postErrorEvents:
              type: array
              items:
                $ref: '#/definitions/FileEventTypesEnum'
            replicationPolicy:
              $ref: '#/definitions/ReplicationPolicyEnum'
      tags:
      - fileEventsPool
      description: "Modify a File Event Service Pool configuration."
      operationId: fileEventsPool_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify fileEventsPool by name
  /api/types/fileEventsPublisher/instances:
    get:
      tags:
      - fileEventsPublisher
      description: 'Collection query'
      operationId: fileEventsPublisher_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fileEventsPublisher'
      summary: 1. Get all fileEventsPublisher
  /api/instances/fileEventsPublisher/{id}:
    get:
      tags:
      - fileEventsPublisher
      description: 'Instance query'
      operationId: fileEventsPublisher_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the File Event Service instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fileEventsPublisher'
      summary: 2. Get fileEventsPublisher by id
  /api/instances/fileEventsPublisher/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the File Event Service instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            isEnabled:
              description: "State of File Event Service is currently enabled."
              type: boolean
            username:
              description: "Name of a Windows user allowing Events Publishing to connect to CEPA servers."
              type: string
            password:
              description: "Password of the Windows user defined by the username."
              type: string
            heartbeat:
              description: "Time interval to scan each File Event Service server (in seconds) for online/offline status. The default is 10 seconds, the allowed range is 1-120 seconds."
              type: string
              format: date-time
            timeout:
              description: "Timeout in ms while attempting to send event to a CEPA server to determine that it is offline. The default is 1000 ms, the allowed range is 50-5000 ms."
              type: string
              format: date-time
            port:
              description: "HTTP port number for the connectivity to CEPA server. Default is 12228."
              type: integer
            denyAccessWhenAllServersOffline:
              description: "Specifies the behaviour when the File Event Service server did not answer.
  Value are:
  <ul>
  <li> false - indicates that nothing changes with I/O in case of File Event Service server is offline. </li>
  <li> true - indicates that all I/O is denied in case of File Event Service server is offline. </li>
  </ul>"
              type: boolean
            postEventPolicy:
              description: "Fault tolerance level assigned. Default is 'Ignore'."
              $ref: '#/definitions/FileEventsPublisherFTLevelTypeEnum'
            isHttpEnabled:
              description: "Indicates whether connection to CEPA servers via HTTP is enabled. Default is true."
              type: boolean
      tags:
      - fileEventsPublisher
      description: "Modify a File Event Service configuration."
      operationId: fileEventsPublisher_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify fileEventsPublisher by id
  /api/types/fileInterface/instances:
    get:
      tags:
      - fileInterface
      description: 'Collection query'
      operationId: fileInterface_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fileInterface'
      summary: 1. Get all fileInterface
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [nasServer,ipPort,ipAddress]
          properties:
            nasServer:
              description: "Unique identifier of the NAS server to which the network interface belongs, as defined by the nasServer resource type."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the nasServer instance."
            ipPort:
              description: "Physical port or link aggregation on the storage processor on which the interface is running, as defined by the ethernetPort resource type."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the ipPort instance."
            ipAddress:
              description: "IP address of the network interface."
              type: string
            netmask:
              description: "IPv4 netmask for the network interface, if it uses an IPv4 address."
              type: string
            v6PrefixLength:
              description: "IPv6 prefix length for the interface, if it uses an IPv6 address."
              type: integer
            gateway:
              description: "IPv4 or IPv6 gateway address for the network interface."
              type: string
            vlanId:
              description: "Virtual Local Area Network (VLAN) identifier for the interface. The interface uses the identifier to accept packets that have matching VLAN tags. <p/> Values are 1 - 4094."
              type: integer
            isPreferred:
              description: "Sets the current IP interface as preferred for associated for file-based storage and unsets the previous one."
              type: boolean
            role:
              $ref: '#/definitions/FileInterfaceRoleEnum'
      tags:
      - fileInterface
      description: "Create a network interface."
      operationId: fileInterface_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new fileInterface instance."
                    type: string
      summary: 4. Create fileInterface
  /api/instances/fileInterface/{id}:
    get:
      tags:
      - fileInterface
      description: 'Instance query'
      operationId: fileInterface_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the fileInterface instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fileInterface'
      summary: 2. Get fileInterface by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the fileInterface instance."
        required: true
        type: string
      tags:
      - fileInterface
      description: "Delete a network interface."
      operationId: fileInterface_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete fileInterface by id
  /api/instances/fileInterface/name:{name}:
    get:
      tags:
      - fileInterface
      description: 'Instance query'
      operationId: fileInterface_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Network interface name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fileInterface'
      summary: 3. Get fileInterface by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Network interface name."
        required: true
        type: string
      tags:
      - fileInterface
      description: "Delete a network interface."
      operationId: fileInterface_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete fileInterface by name
  /api/instances/fileInterface/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the fileInterface instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            ipPort:
              description: "Unique identifier of the physical port or link aggregation on the storage processor on which the network interface is running, as defined by the ethernetPort resource type."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the ipPort instance."
            ipAddress:
              description: "IP address of the network interface."
              type: string
            netmask:
              description: "IPv4 netmask for the network interface, if it uses an IPv4 address."
              type: string
            v6PrefixLength:
              description: "IPv6 prefix length for the interface, if it uses an IPv6 address."
              type: integer
            gateway:
              description: "IPv4 or IPv6 gateway address for the network interface. Empty string to unset."
              type: string
            vlanId:
              description: "Virtual Local Area Network (VLAN) identifier for the network interface. The interface uses the identifier to accept packets that have matching VLAN tags. <p/> Values are 1 - 4094. Empty string or null to unset."
              type: integer
            isPreferred:
              description: "Sets the current IP interface as preferred for associated for file-based storage and unsets the previous one."
              type: boolean
            replicationPolicy:
              $ref: '#/definitions/ReplicationPolicyEnum'
      tags:
      - fileInterface
      description: "Modify a network interface configuration."
      operationId: fileInterface_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify fileInterface by id
  /api/instances/fileInterface/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Network interface name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            ipPort:
              description: "Unique identifier of the physical port or link aggregation on the storage processor on which the network interface is running, as defined by the ethernetPort resource type."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the ipPort instance."
            ipAddress:
              description: "IP address of the network interface."
              type: string
            netmask:
              description: "IPv4 netmask for the network interface, if it uses an IPv4 address."
              type: string
            v6PrefixLength:
              description: "IPv6 prefix length for the interface, if it uses an IPv6 address."
              type: integer
            gateway:
              description: "IPv4 or IPv6 gateway address for the network interface. Empty string to unset."
              type: string
            vlanId:
              description: "Virtual Local Area Network (VLAN) identifier for the network interface. The interface uses the identifier to accept packets that have matching VLAN tags. <p/> Values are 1 - 4094. Empty string or null to unset."
              type: integer
            isPreferred:
              description: "Sets the current IP interface as preferred for associated for file-based storage and unsets the previous one."
              type: boolean
            replicationPolicy:
              $ref: '#/definitions/ReplicationPolicyEnum'
      tags:
      - fileInterface
      description: "Modify a network interface configuration."
      operationId: fileInterface_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify fileInterface by name
  /api/types/fileKerberosServer/instances:
    get:
      tags:
      - fileKerberosServer
      description: 'Collection query'
      operationId: fileKerberosServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fileKerberosServer'
      summary: 1. Get all fileKerberosServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [nasServer,realm,addresses]
          properties:
            nasServer:
              description: "Unique identifier of the NAS server to which the Kerberos service belongs."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the nasServer instance."
            realm:
              description: "The Kerberos realm with which to authenticate."
              type: string
            addresses:
              description: "DNS names for the Kerberos Key Distribution Center (KDC) servers."
              type: array
              items:
                type: string
            portNumber:
              description: "KDC servers TCP port."
              type: integer
      tags:
      - fileKerberosServer
      description: "Create a Kerberos configuration. The operation will fail if a Kerberos
  configuration already exists."
      operationId: fileKerberosServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "The created fileKerberosServer instance."
                    type: string
      summary: 3. Create fileKerberosServer
  /api/instances/fileKerberosServer/{id}:
    get:
      tags:
      - fileKerberosServer
      description: 'Instance query'
      operationId: fileKerberosServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the Kerberos instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fileKerberosServer'
      summary: 2. Get fileKerberosServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the Kerberos instance."
        required: true
        type: string
      tags:
      - fileKerberosServer
      description: "Delete a Kerberos service configuration."
      operationId: fileKerberosServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete fileKerberosServer by id
  /api/instances/fileKerberosServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the Kerberos instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            realm:
              description: "The Kerberos realm with which to authenticate."
              type: string
            addresses:
              description: "DNS names for the Kerberos Key Distribution Center (KDC) servers."
              type: array
              items:
                type: string
            portNumber:
              description: "KDC servers TCP port."
              type: integer
      tags:
      - fileKerberosServer
      description: "Modify an Kerberos service configuration."
      operationId: fileKerberosServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify fileKerberosServer by id
  /api/types/fileLDAPServer/instances:
    get:
      tags:
      - fileLDAPServer
      description: 'Collection query'
      operationId: fileLDAPServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fileLDAPServer'
      summary: 1. Get all fileLDAPServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [nasServer,authenticationType,authority]
          properties:
            nasServer:
              description: "Unique identifier of the NAS server to which the LDAP server belongs."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the nasServer instance."
            authenticationType:
              description: "Authentication type for the LDAP server."
              $ref: '#/definitions/AuthenticationTypeEnum'
            authority:
              description: "The Distinguished Name (DN) of the root level in the directory tree."
              type: string
            serverAddresses:
              description: "The IP addresses of the associated LDAP servers."
              type: array
              items:
                type: string
            portNumber:
              description: "The TCP/IP port associated with the LDAP server."
              type: integer
            protocol:
              description: "Specifies the protocol to be used."
              $ref: '#/definitions/LDAPProtocolEnum'
            verifyServerCertificate:
              description: "Specify that uploaded Certification Authority (CA) certificates
                                 should be used to verify the certificates of LDAP servers for
                                 establishing secure SSL connections."
              type: boolean
            profileDN:
              description: "For an iPlanet LDAP server, type the DN of the entry with the configuration profile."
              type: string
            bindDN:
              description: "The Distinguished Name (DN) to be used when binding to the server."
              type: string
            bindPassword:
              description: "the associated password to be used when binding to the server."
              type: string
            isCifsAccountUsed:
              description: "Specify whether you want to use CIFS authentication. For Kerberos authentication only.
  Values are:
  <ul>
  <li> true - Indicates that the CIFS settings are used for Kerberos authentication. </li>
  <li> false - Indicates that Kerberos uses its own settings. </li>
  </ul>"
              type: boolean
            principal:
              description: "The principal name for Kerberos authentication."
              type: string
            realm:
              description: "The realm name for Kerberos authentication."
              type: string
            password:
              description: "The associated password for Kerberos authentication."
              type: string
      tags:
      - fileLDAPServer
      description: "Create an LDAP server configuration. The operation will fail if an LDAP server
  configuration already exists."
      operationId: fileLDAPServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "The created fileLDAPServer instance."
                    type: string
      summary: 3. Create fileLDAPServer
  /api/instances/fileLDAPServer/{id}:
    get:
      tags:
      - fileLDAPServer
      description: 'Instance query'
      operationId: fileLDAPServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the ldapServer instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fileLDAPServer'
      summary: 2. Get fileLDAPServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the ldapServer instance."
        required: true
        type: string
      tags:
      - fileLDAPServer
      description: "Delete an LDAP server configuration."
      operationId: fileLDAPServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete fileLDAPServer by id
  /api/instances/fileLDAPServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the ldapServer instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            authenticationType:
              description: "Authentication type for the LDAP server."
              $ref: '#/definitions/AuthenticationTypeEnum'
            authority:
              description: "The Distinguished Name (DN) of the root level in the directory tree."
              type: string
            serverAddresses:
              description: "The IP addresses of the associated LDAP servers."
              type: array
              items:
                type: string
            portNumber:
              description: "The TCP/IP port associated with the LDAP server."
              type: integer
            protocol:
              description: "Specifies the protocol to be used."
              $ref: '#/definitions/LDAPProtocolEnum'
            verifyServerCertificate:
              description: "Specify that uploaded Certification Authority (CA) certificates
                                 should be used to verify the certificates of LDAP servers for
                                 establishing secure SSL connections."
              type: boolean
            profileDN:
              description: "For an iPlanet LDAP server, type the DN of the entry with the configuration profile."
              type: string
            bindDN:
              description: "The Distinguished Name (DN) to be used when binding to the server."
              type: string
            bindPassword:
              description: "the associated password to be used when binding to the server."
              type: string
            isCifsAccountUsed:
              description: "Specify whether you want to use CIFS authentication. For Kerberos authentication only.
  Values are:
  <ul>
  <li> true - Indicates that the CIFS settings are used for Kerberos authentication. </li>
  <li> false - Indicates that Kerberos uses its own settings. </li>
  </ul>"
              type: boolean
            principal:
              description: "The principal name for Kerberos authentication."
              type: string
            realm:
              description: "The realm name for Kerberos authentication."
              type: string
            password:
              description: "The associated password for Kerberos authentication."
              type: string
            replicationPolicy:
              description: "Status of the LDAP list in the NAS server operating as a replication destination."
              $ref: '#/definitions/ReplicationPolicyEnum'
            isIgnoreWarnings:
              description: "Ignore warnings will interrupt the modification process.
  Values are:
  <ul>
  <li> true - Ignore any warnings. </li>
  <li> false(Default) - Ant warnings will interrupt the modification process. </li>
  </ul>"
              type: boolean
      tags:
      - fileLDAPServer
      description: "Modify an LDAP server configuration."
      operationId: fileLDAPServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify fileLDAPServer by id
  /api/types/fileNDMPServer/instances:
    get:
      tags:
      - fileNDMPServer
      description: 'Collection query'
      operationId: fileNDMPServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fileNDMPServer'
      summary: 1. Get all fileNDMPServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [nasServer]
          properties:
            nasServer:
              description: "Unique identifier of the associated NAS server."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the nasServer instance."
            password:
              description: "The password for the NDMP server."
              type: string
      tags:
      - fileNDMPServer
      description: "Create an NDMP server."
      operationId: fileNDMPServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new NDMP server."
                    type: string
      summary: 3. Create fileNDMPServer
  /api/instances/fileNDMPServer/{id}:
    get:
      tags:
      - fileNDMPServer
      description: 'Instance query'
      operationId: fileNDMPServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fileNDMPServer'
      summary: 2. Get fileNDMPServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      tags:
      - fileNDMPServer
      description: "Delete an NDMP server."
      operationId: fileNDMPServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete fileNDMPServer by id
  /api/instances/fileNDMPServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            password:
              description: "The password for the NDMP server."
              type: string
      tags:
      - fileNDMPServer
      description: "Modify an NDMP server."
      operationId: fileNDMPServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify fileNDMPServer by id
  /api/types/fileNISServer/instances:
    get:
      tags:
      - fileNISServer
      description: 'Collection query'
      operationId: fileNISServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fileNISServer'
      summary: 1. Get all fileNISServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [nasServer,domain,addresses]
          properties:
            nasServer:
              description: "Unique identifier of the NAS server to which the LDAP server belongs."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the nasServer instance."
            domain:
              description: "Domain name of the NIS server."
              type: string
            addresses:
              description: "The IP addresses of the NIS servers to include in the domain."
              type: array
              items:
                type: string
      tags:
      - fileNISServer
      description: "Create an NIS server."
      operationId: fileNISServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "The created fileNISServer instance."
                    type: string
      summary: 3. Create fileNISServer
  /api/instances/fileNISServer/{id}:
    get:
      tags:
      - fileNISServer
      description: 'Instance query'
      operationId: fileNISServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the nisServer instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fileNISServer'
      summary: 2. Get fileNISServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the nisServer instance."
        required: true
        type: string
      tags:
      - fileNISServer
      description: "Delete an NIS server."
      operationId: fileNISServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete fileNISServer by id
  /api/instances/fileNISServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the nisServer instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            domain:
              description: "Domain name of the NIS server."
              type: string
            addresses:
              description: "Prioritized list of one to ten NIS server IP addresses for the domain."
              type: array
              items:
                type: string
            replicationPolicy:
              description: "Status of the NIS list in the NAS server operating as a replication destination."
              $ref: '#/definitions/ReplicationPolicyEnum'
            isIgnoreWarnings:
              description: "Ignore any warnings during the modification process.
  Values are:
  <ul>
  <li> true - Ignore any warnings. </li>
  <li> false(Default) - Any warnings will interrupt the modification process.  </li>
  </ul>"
              type: boolean
      tags:
      - fileNISServer
      description: "Modify an NIS server settings."
      operationId: fileNISServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify fileNISServer by id
  /api/types/filesystem/instances:
    get:
      tags:
      - filesystem
      description: 'Collection query'
      operationId: filesystem_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/filesystem'
      summary: 1. Get all filesystem
  /api/instances/filesystem/{id}:
    get:
      tags:
      - filesystem
      description: 'Instance query'
      operationId: filesystem_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the file system."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/filesystem'
      summary: 2. Get filesystem by id
  /api/instances/filesystem/name:{name}:
    get:
      tags:
      - filesystem
      description: 'Instance query'
      operationId: filesystem_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "File system name unique to the NAS server."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/filesystem'
      summary: 3. Get filesystem by name
  /api/types/fsnPort/instances:
    get:
      tags:
      - fsnPort
      description: 'Collection query'
      operationId: fsnPort_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/fsnPort'
      summary: 1. Get all fsnPort
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [primaryPort,secondaryPorts]
          properties:
            primaryPort:
              description: "Primary Port to create an fsnPort. Primary Port will be active whenever an fsnPort is operating correctly."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the ipPort instance."
            secondaryPorts:
              description: "List of secondary ports (Ethernet Ports / Link Aggregations) to be aggregated."
              type: array
              items:
                description: "IP Port information.
  <br/>
  ipPort is a base class for linkAggregation, ethernetPort and fsnPort."
                type: object
                required: [id]
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the ipPort instance."
            mtuSize:
              description: "MTU size value for an fsnPort. If you want to support jumbo frames, use 9000 as the MTU size value. If not specified, MTU size of the Primary Port is used."
              type: integer
      tags:
      - fsnPort
      description: "Create an fsnPort."
      operationId: fsnPort_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "New fsnPort instance."
                    type: string
                  peerId:
                    description: "Peer fsnPort instance."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of an fsnPort instance."
      summary: 4. Create fsnPort
  /api/instances/fsnPort/{id}:
    get:
      tags:
      - fsnPort
      description: 'Instance query'
      operationId: fsnPort_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of an fsnPort instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fsnPort'
      summary: 2. Get fsnPort by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of an fsnPort instance."
        required: true
        type: string
      tags:
      - fsnPort
      description: "Delete an fsnPort. When fsnPort is deleted, all File Interfaces will be assigned to the Primary Port."
      operationId: fsnPort_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete fsnPort by id
  /api/instances/fsnPort/name:{name}:
    get:
      tags:
      - fsnPort
      description: 'Instance query'
      operationId: fsnPort_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Name for an fsnPort. This name contains a name of parentStorageProcessor.
  For example, 'SP A FSN Port 0 1'."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/fsnPort'
      summary: 3. Get fsnPort by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name for an fsnPort. This name contains a name of parentStorageProcessor.
  For example, 'SP A FSN Port 0 1'."
        required: true
        type: string
      tags:
      - fsnPort
      description: "Delete an fsnPort. When fsnPort is deleted, all File Interfaces will be assigned to the Primary Port."
      operationId: fsnPort_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 9. Delete fsnPort by name
  /api/instances/fsnPort/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of an fsnPort instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            mtuSize:
              description: "New MTU size value for an fsnPort. If you want to support jumbo frames, use 9000 as the MTU size value."
              type: integer
            addPorts:
              description: "List of IpPorts (Ethernet Ports / Link Aggregations) to add to an fsnPort."
              type: array
              items:
                description: "IP Port information.
  <br/>
  ipPort is a base class for linkAggregation, ethernetPort and fsnPort."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the ipPort instance."
            removePorts:
              description: "List of IpPorts (Ethernet Ports / Link Aggregations) to remove from an fsnPort. Primary Port can not be removed."
              type: array
              items:
                description: "IP Port information.
  <br/>
  ipPort is a base class for linkAggregation, ethernetPort and fsnPort."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the ipPort instance."
      tags:
      - fsnPort
      description: "Modify an fsnPort."
      operationId: fsnPort_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify fsnPort by id
  /api/instances/fsnPort/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name for an fsnPort. This name contains a name of parentStorageProcessor.
  For example, 'SP A FSN Port 0 1'."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            mtuSize:
              description: "New MTU size value for an fsnPort. If you want to support jumbo frames, use 9000 as the MTU size value."
              type: integer
            addPorts:
              description: "List of IpPorts (Ethernet Ports / Link Aggregations) to add to an fsnPort."
              type: array
              items:
                description: "IP Port information.
  <br/>
  ipPort is a base class for linkAggregation, ethernetPort and fsnPort."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the ipPort instance."
            removePorts:
              description: "List of IpPorts (Ethernet Ports / Link Aggregations) to remove from an fsnPort. Primary Port can not be removed."
              type: array
              items:
                description: "IP Port information.
  <br/>
  ipPort is a base class for linkAggregation, ethernetPort and fsnPort."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the ipPort instance."
      tags:
      - fsnPort
      description: "Modify an fsnPort."
      operationId: fsnPort_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify fsnPort by name
  /api/types/fsnPort/action/recommendForInterface:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [storageProcessor]
          properties:
            storageProcessor:
              description: "SP on which to recommend fsnPorts."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the storageProcessor instance."
      tags:
      - fsnPort
      description: "Recommend appropriate fsnPorts for creation of network interface."
      operationId: fsnPort_recommendForInterface
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  recommendations:
                    description: "List of identifiers for the recommended fsnPorts."
                    type: array
                    items:
                      description: "(Applies if link aggregation is supported.)
  In a GUI it is available on General Settings - 'Link aggregation & FSN' page.
  <p/>
  Fail-Safe Network (FSN) is a high-availability feature that extends link failover into the
  network by providing a switch-level redundancy. An FSN appears as a single link with a single
  MAC address and potentially multiple IP addresses. An FSN can be built from Ethernet Ports and
  non-FSN link aggregations, or combination of them. Only one connection in an FSN is active
  at a time. Port with active connection is the Active Port. Unity always uses the primary connection,
  if available. Port with primary connection is the Primary Port. If the primary connection fails,
  Unity automatically switches to one of the standby connections. When the primary connection is
  available again, an FSN automatically switches back to the primary connection.
  <p/>
  <b>Note: </b>If you want to include either Ethernet Ports or link aggregations in an FSN Port,
  configure them before creating an FSN.
  <p/>
  <b>Note: </b>You can aggregate only Ethernet Ports and link aggregations with the same MTU size
  and not included in another FSN Port.
  <p/>
  <b>Note: </b>You can not add an Ethernet Port to FSN if there are iSCSI portals on it.
  <p/>
  The features of an FSN Port are as follows:
  <ul>
  <li>FSN component devices do not have to be the same device type. A single FSN Port
  can include Fast Ethernet devices or link aggregations, or a combination of these types,
  all on the same Unity.</li>
  <li>There can be a maximum of four devices in a FSN.</li>
  <li>Only one component device of an FSN Port is active at a time.</li>
  <li>If all the connections in FSN Port fail, the link is down.</li>
  </ul>
  <p/>
  The Unisphere online Help provides more details on FSN configuring."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of an fsnPort instance."
      summary: 7. RecommendForInterface fsnPort
  /api/types/ftpServer/instances:
    get:
      tags:
      - ftpServer
      description: 'Collection query'
      operationId: ftpServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/ftpServer'
      summary: 1. Get all ftpServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [nasServer]
          properties:
            nasServer:
              description: "NAS server associated with the FTP or SFTP server."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the nasServer instance."
            isFtpEnabled:
              description: "Indicates whether the FTP server is enabled on the NAS server 
   specified in the nasServer attribute. Values are:
   <ul>
   <li> true - FTP server is enabled on the specified NAS server.</li>
   <li> false - FTP server is disabled on the specified NAS server.</li>
   </ul>"
              type: boolean
            isSftpEnabled:
              description: "Indicates whether the SFTP server is enabled on the NAS server 
   specified in the nasServer attribute. Values are:
   <ul>
   <li> true - SFTP server is enabled on the specified NAS server.</li>
   <li> false - SFTP server is disabled on the specified NAS server.</li>
   </ul>"
              type: boolean
            isCifsUserEnabled:
              description: "Indicates whether FTP and SFTP clients can be authenticated using a CIFS user name.
   These user names are defined in a Windows domain controller, and their formats are user@domain or domain\\user. 
   Values are:
   <ul>
   <li> true - CIFS user names are accepted for authentication.</li>
   <li> false - CIFS user names are not accepted for authentication.</li>
   </ul>"
              type: boolean
            isUnixUserEnabled:
              description: "Indicates whether FTP and SFTP clients can be authenticated using a Unix user name.
   Unix user names are defined in LDAP or NIS servers. Values are:
   <ul>
   <li> true - Unix user names are accepted for authentication.</li>
   <li> false - Unix user names are not accepted for authentication.</li>
   </ul>"
              type: boolean
            isAnonymousUserEnabled:
              description: "Indicates whether FTP clients can be authenticated anonymously.
   Values are:
   <ul>
   <li> true - Anonymous user name is accepted.</li>
   <li> false - Anonymous user name is not accepted.</li>
   </ul>"
              type: boolean
            isHomedirLimitEnabled:
              description: "Indicates whether an FTP or SFTP user's area is limited to his or her home directory.
   Values are:
   <ul>
   <li> true - An FTP or SFTP user can access his or her own home directory only.</li>
   <li> false - FTP and SFTP users can access any NAS server directory, according to NAS server permissions.</li>
   </ul>"
              type: boolean
            defaultHomedir:
              description: "(Applies when the value of isHomedirLimitEnabled is false.) Default directory of FTP and SFTP clients 
   who have a home directory that is not defined or accessible."
              type: string
            welcomeMsg:
              description: "Welcome message displayed on the console of FTP and SFTP clients before their authentication."
              type: string
            motd:
              description: "Message of the day displayed on the console of FTP clients after their authentication."
              type: string
            isAuditEnabled:
              description: "Indicates whether the activity of FTP and SFTP clients is tracked in audit files.
   Values are:
   <ul>
   <li> true - FTP/SFTP activity is tracked.</li>
   <li> false - FTP/SFTP activity is not tracked.</li>
   </ul>"
              type: boolean
            auditDir:
              description: "(Applies when the value of isAuditEnabled is true.) Directory of FTP/SFTP audit files.
   This parameter is an absolute path relative to the root of the NAS server."
              type: string
            auditMaxSize:
              description: "(Applies when the value of isAuditEnabled is true.) Maximum size of 
   FTP/SFTP audit files."
              type: integer
            hostsList:
              description: "Allowed or denied hosts, depending on the value of the isAllowHost attribute. 
   A host is defined using its IP address. Subnets using CIDR notation are also supported.
   <ul>
   <li>If allowed hosts exist, only those hosts and no others can connect to the NAS server through FTP or SFTP.</li>
   <li>If denied hosts exist, they always have access denied to the NAS server through FTP or SFTP.</li>
   <li>If the list is empty, there is no restriction to NAS server access through FTP or SFTP based on the host IP.</li>
   </ul>"
              type: array
              items:
                type: string
            usersList:
              description: "Allowed or denied users, depending on the value of the isAllowUser attribute. 
   <ul>
   <li>If allowed users exist, only those users and no others can connect to the NAS server through FTP or SFTP.</li>
   <li>If denied users exist, they have always access denied to the NAS server through FTP or SFTP.</li>
   <li>If the list is empty, there is no restriction to the NAS server access through FTP or SFTP based on the user name.</li>
   </ul>"
              type: array
              items:
                type: string
            groupsList:
              description: "Allowed or denied user groups, depending on the value of the isAllowGroup attribute.
   <ul>
   <li>If allowed groups exist, only users who are members of these groups and no others can connect to the NAS server through FTP or SFTP.</li>
   <li>If denied groups exist, all users who are members of those groups have always access denied to the NAS server through FTP or SFTP.</li>
   <li>If the list is empty, there is no restriction to the NAS server access through FTP or SFTP based on the user group.</li>
   </ul>"
              type: array
              items:
                type: string
            isAllowHost:
              description: "Indicates whether the hostList attribute contains allowed or denied hosts."
              type: boolean
            isAllowUser:
              description: "Indicates whether the usersList attribute contains allowed or denied users."
              type: boolean
            isAllowGroup:
              description: "Indicates whether the groupsList attribute contains allowed or denied user groups."
              type: boolean
      tags:
      - ftpServer
      description: "Create an ftpServer instance."
      operationId: ftpServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new ftpServer instance."
                    type: string
      summary: 3. Create ftpServer
  /api/instances/ftpServer/{id}:
    get:
      tags:
      - ftpServer
      description: 'Instance query'
      operationId: ftpServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the ftpServer instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ftpServer'
      summary: 2. Get ftpServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the ftpServer instance."
        required: true
        type: string
      tags:
      - ftpServer
      description: "Delete an ftpServer instance."
      operationId: ftpServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete ftpServer by id
  /api/instances/ftpServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the ftpServer instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            isFtpEnabled:
              description: "Indicates whether the FTP server is enabled. Values are:
   <ul>
   <li> true - FTP server is enabled.</li>
   <li> false - FTP server is disabled.</li>
   </ul>"
              type: boolean
            isSftpEnabled:
              description: "Indicates whether the SFTP server is enabled. Values are:
   <ul>
   <li> true - SFTP server is enabled.</li>
   <li> false - SFTP server is disabled.</li>
   </ul>"
              type: boolean
            isCifsUserEnabled:
              description: "Indicates whether FTP and SFTP clients can be authenticated using a CIFS user name.
   These user names are defined in a Windows domain controller and their formats are user@domain or domain\\user. 
   Values are:
   <ul>
   <li> true - CIFS user names are accepted for authentication.</li>
   <li> false - CIFS user names are not accepted for authentication.</li>
   </ul>"
              type: boolean
            isUnixUserEnabled:
              description: "Indicates whether FTP and SFTP clients can be authenticated using a Unix user name.
   Unix user names are defined in LDAP or NIS servers. Values are:
   <ul>
   <li> true - Unix user names are accepted for authentication.</li>
   <li> false - Unix user names are not accepted for authentication.</li>
   </ul>"
              type: boolean
            isAnonymousUserEnabled:
              description: "Indicates whether FTP clients can be authenticated anonymously.
   Values are:
   <ul>
   <li> true - Anonymous user name is accepted.</li>
   <li> false - Anonymous user name is not accepted.</li>
   </ul>"
              type: boolean
            isHomedirLimitEnabled:
              description: "Indicates whether an FTP or SFTP user's area is limited to his or her home directory.
   Values are:
   <ul>
   <li> true - An FTP or SFTP user can access his or her own home directory only.</li>
   <li> false - FTP and SFTP users can access any NAS server directory, according to NAS server permissions.</li>
   </ul>"
              type: boolean
            defaultHomedir:
              description: "(Applies when the value of isHomedirLimitEnabled is false.) Default directory of FTP and SFTP 
   clients who have a home directory that is not defined or accessible."
              type: string
            welcomeMsg:
              description: "Welcome message displayed on the console of FTP and SFTP clients before their authentication."
              type: string
            motd:
              description: "Message of the day displayed on the console of FTP clients after their authentication."
              type: string
            isAuditEnabled:
              description: "Indicates whether the activity of FTP and SFTP clients is tracked in audit files.
   Values are:
   <ul>
   <li> true - FTP/SFTP activity is tracked.</li>
   <li> false - FTP/SFTP activity is not tracked.</li>
   </ul>"
              type: boolean
            auditDir:
              description: "(Applies when the value of isAuditEnabled is true.) Directory of FTP/SFTP audit files.
   This parameter is an absolute path relative to the root of the NAS server."
              type: string
            auditMaxSize:
              description: "(Applies when the value of isAuditEnabled is true.) Maximum size of 
   FTP/SFTP audit files."
              type: integer
            hostsList:
              description: "Allowed or denied hosts, depending on the value of the isAllowHost attribute. 
 A host is defined using its IP address. Subnets using CIDR notation are also supported.
 <ul>
 <li>If allowed hosts exist, only those hosts and no others can connect to the NAS server through FTP or SFTP.</li>
 <li>If denied hosts exist, they always have access denied to the NAS server through FTP or SFTP.</li>
 <li>If the list is empty, there is no restriction to NAS server access through FTP or SFTP based on the host IP.</li>
 </ul>"
              type: array
              items:
                type: string
            usersList:
              description: "Allowed or denied users, depending on the value of the isAllowUser attribute. 
 <ul>
 <li>If allowed users exist, only those users and no others can connect to the NAS server through FTP or SFTP.</li>
 <li>If denied users exist, they have always access denied to the NAS server through FTP or SFTP.</li>
 <li>If the list is empty, there is no restriction to the NAS server access through FTP or SFTP based on the user name.</li>
 </ul>"
              type: array
              items:
                type: string
            groupsList:
              description: "Allowed or denied user groups, depending on the value of the isAllowGroup attribute.
 <ul>
 <li>If allowed groups exist, only users who are members of these groups and no others can connect to the NAS server through FTP or SFTP.</li>
 <li>If denied groups exist, all users who are members of those groups have always access denied to the NAS server through FTP or SFTP.</li>
 <li>If the list is empty, there is no restriction to the NAS server access through FTP or SFTP based on the user group.</li>
 </ul>"
              type: array
              items:
                type: string
            isAllowHost:
              description: "Indicates whether the hostList attribute contains allowed or denied hosts."
              type: boolean
            isAllowUser:
              description: "Indicates whether the usersList attribute contains allowed or denied users."
              type: boolean
            isAllowGroup:
              description: "Indicates whether the groupsList attribute contains allowed or denied user groups."
              type: boolean
            force:
              description: "Ignore warnings related to the modify process.
   Values are:
   <ul>
   <li> true - Ignore warnings. </li>
   <li> false(Default) - Warnings will interrupt the modify process. </li>
   </ul>"
              type: boolean
      tags:
      - ftpServer
      description: "Modify an ftpServer instance."
      operationId: ftpServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify ftpServer by id
  /api/types/host/instances:
    get:
      tags:
      - host
      description: 'Collection query'
      operationId: host_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/host'
      summary: 01. Get all host
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [type,name]
          properties:
            type:
              description: "Type of host configuration."
              $ref: '#/definitions/HostTypeEnum'
            name:
              description: "Host name."
              type: string
            description:
              description: "Host description."
              type: string
            osType:
              description: "Operating system running on the host."
              type: string
            tenant:
              description: "Tenant with which the host is to be associated."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the tenant instance."
      tags:
      - host
      description: "Create a host configuration."
      operationId: host_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new host instance."
                    type: string
      summary: 04. Create host
  /api/instances/host/{id}:
    get:
      tags:
      - host
      description: 'Instance query'
      operationId: host_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the host instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/host'
      summary: 02. Get host by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the host instance."
        required: true
        type: string
      tags:
      - host
      description: "Delete a host configuration."
      operationId: host_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 11. Delete host by id
  /api/instances/host/name:{name}:
    get:
      tags:
      - host
      description: 'Instance query'
      operationId: host_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Host name:
  <ul>
  <li>For an automatically-managed ESXi server through vCenter, this is the
  display name in the vCenter GUI.</li>
  <li>For a manually-created host, this is the host name entered by the
  user.</li>
  </ul>"
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/host'
      summary: 03. Get host by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Host name:
  <ul>
  <li>For an automatically-managed ESXi server through vCenter, this is the
  display name in the vCenter GUI.</li>
  <li>For a manually-created host, this is the host name entered by the
  user.</li>
  </ul>"
        required: true
        type: string
      tags:
      - host
      description: "Delete a host configuration."
      operationId: host_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 12. Delete host by name
  /api/instances/host/{id}/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the host instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [doRescan]
          properties:
            doRescan:
              description: "Indicates whether to scan the associated hardware when refreshing the ESXi host configuration information. Values are: <ul> <li>true - Rescan associated hardware. This option adds time to the refresh process.</li> <li>false - Do not rescan associated hardware.</li> </ul>"
              type: boolean
      tags:
      - host
      description: "(Applies to ESXi host configurations only.) Refresh the retrieval of host
  configuration information from the ESXi server."
      operationId: host_refresh
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 05. Refresh host by id
  /api/instances/host/name:{name}/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Host name:
  <ul>
  <li>For an automatically-managed ESXi server through vCenter, this is the
  display name in the vCenter GUI.</li>
  <li>For a manually-created host, this is the host name entered by the
  user.</li>
  </ul>"
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [doRescan]
          properties:
            doRescan:
              description: "Indicates whether to scan the associated hardware when refreshing the ESXi host configuration information. Values are: <ul> <li>true - Rescan associated hardware. This option adds time to the refresh process.</li> <li>false - Do not rescan associated hardware.</li> </ul>"
              type: boolean
      tags:
      - host
      description: "(Applies to ESXi host configurations only.) Refresh the retrieval of host
  configuration information from the ESXi server."
      operationId: host_refresh_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 06. Refresh host by name
  /api/instances/host/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the host instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "(Applies to manually-created hosts only.) Host name."
              type: string
            description:
              description: "Host description."
              type: string
            osType:
              description: "(Applies to manually-created hosts only.) Operating system running on the host."
              type: string
      tags:
      - host
      description: "Modify a host configuration."
      operationId: host_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 07. Modify host by id
  /api/instances/host/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Host name:
  <ul>
  <li>For an automatically-managed ESXi server through vCenter, this is the
  display name in the vCenter GUI.</li>
  <li>For a manually-created host, this is the host name entered by the
  user.</li>
  </ul>"
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "(Applies to manually-created hosts only.) Host name."
              type: string
            description:
              description: "Host description."
              type: string
            osType:
              description: "(Applies to manually-created hosts only.) Operating system running on the host."
              type: string
      tags:
      - host
      description: "Modify a host configuration."
      operationId: host_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 08. Modify host by name
  /api/instances/host/{id}/action/modifyHostLUNs:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the host instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [hostLunModifyList]
          properties:
            hostLunModifyList:
              description: "List of embedded hostLunModify objects. The embedded object has the required hostLUN details to
  be updated."
              type: array
              items:
                description: "Parameters used for modifying the HLU of a Host LUN.
  <br/>
  <br/>
  This embedded class type is passed to the ModifyHostLUNs method of the host object."
                type: object
                properties:
                  hostLUN:
                    description: "Reference to the hostLUN to be modified."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the hostLUN instance."
                  hlu:
                    description: "New host LUN ID (HLU) to be assigned to the LUN."
                    type: integer
      tags:
      - host
      description: "Modify the Host LUN Identifier (HLU) of one or more LUNs accessible by the host. The method takes a list of hostLUNs, so that the HLUs of one or more LUNs can 
  be changed at once, even if the old and new HLUs overlap."
      operationId: host_modifyHostLUNs
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 09. ModifyHostLUNs host by id
  /api/instances/host/name:{name}/action/modifyHostLUNs:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Host name:
  <ul>
  <li>For an automatically-managed ESXi server through vCenter, this is the
  display name in the vCenter GUI.</li>
  <li>For a manually-created host, this is the host name entered by the
  user.</li>
  </ul>"
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [hostLunModifyList]
          properties:
            hostLunModifyList:
              description: "List of embedded hostLunModify objects. The embedded object has the required hostLUN details to
  be updated."
              type: array
              items:
                description: "Parameters used for modifying the HLU of a Host LUN.
  <br/>
  <br/>
  This embedded class type is passed to the ModifyHostLUNs method of the host object."
                type: object
                properties:
                  hostLUN:
                    description: "Reference to the hostLUN to be modified."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the hostLUN instance."
                  hlu:
                    description: "New host LUN ID (HLU) to be assigned to the LUN."
                    type: integer
      tags:
      - host
      description: "Modify the Host LUN Identifier (HLU) of one or more LUNs accessible by the host. The method takes a list of hostLUNs, so that the HLUs of one or more LUNs can 
  be changed at once, even if the old and new HLUs overlap."
      operationId: host_modifyHostLUNs_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 10. ModifyHostLUNs host by name
  /api/types/hostContainer/instances:
    get:
      tags:
      - hostContainer
      description: 'Collection query'
      operationId: hostContainer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/hostContainer'
      summary: 01. Get all hostContainer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [serviceType,targetName,targetAddress,username,password]
          properties:
            serviceType:
              description: "The type of the host container."
              $ref: '#/definitions/HostContainerTypeEnum'
            targetName:
              description: "Unique name of target returned from discovery."
              type: string
            targetAddress:
              description: "ipv4, ipv6 or host name of the vCenter or standalone ESXi server."
              type: string
            username:
              description: "Username to connect to the host container."
              type: string
            password:
              description: "Pwd to connect to the host container."
              type: string
            description:
              description: "Brief description."
              type: string
            vasaProviderParameters:
              description: "VASA provider parameters. If specified, storage system's VASA provider will be registered on vSphere."
              $ref: '#/definitions/vasaProviderParameters'
            potentialHosts:
              description: "A list of embedded potential host objects to be imported with the host container creation."
              type: array
              items:
                description: "This class is used to hold discovered hosts of a vCenter or ESXi Host."
                type: object
                properties:
                  name:
                    description: "Display name of the discovered ESXi server"
                    type: string
                  serverName:
                    description: "DNS name of ESXi server"
                    type: string
                  description:
                    description: "Description of ESXi server"
                    type: string
                  osName:
                    description: "OS name of ESXi server"
                    type: string
                  osVersion:
                    description: "OS version of ESXi server"
                    type: string
                  uuid:
                    description: "Vendor unique identifier of ESXi server"
                    type: string
                  kernelIPs:
                    description: "Kernel IPs of ESXi server"
                    type: string
                  mgmtIPs:
                    description: "Management IPs of ESXi server"
                    type: string
                  fcInitiators:
                    description: "Fibre channel initiators of ESXi server"
                    type: string
                  iscsiInitiators:
                    description: "Iscsi initiators of ESXi server"
                    type: string
                  matchedConditions:
                    description: "How the discovered ESXi hosts match the existing hosts already known to the
  array"
                    $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
                  matchedHosts:
                    description: "Existing hosts that match the discovered vCenter/ESXi Host"
                    type: array
                    items:
                      description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the host instance."
                  matchedPotentialHostsConditions:
                    description: "How the potential ESXi hosts conflict among themseleves"
                    $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
                  matchedPotentialHosts:
                    description: "The names of the other potential hosts that match this potential host in any way"
                    type: string
                  importOption:
                    description: "How ESXi server can be imported"
                    $ref: '#/definitions/HostContainerPotentialHostImportOptionEnum'
      tags:
      - hostContainer
      description: "Create host container."
      operationId: hostContainer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Uis host container reference."
                    type: string
      summary: 04. Create hostContainer
  /api/instances/hostContainer/{id}:
    get:
      tags:
      - hostContainer
      description: 'Instance query'
      operationId: hostContainer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostContainer'
      summary: 02. Get hostContainer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      tags:
      - hostContainer
      description: "Delete a host container."
      operationId: hostContainer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 13. Delete hostContainer by id
  /api/instances/hostContainer/name:{name}:
    get:
      tags:
      - hostContainer
      description: 'Instance query'
      operationId: hostContainer_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Alias."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostContainer'
      summary: 03. Get hostContainer by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Alias."
        required: true
        type: string
      tags:
      - hostContainer
      description: "Delete a host container."
      operationId: hostContainer_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 14. Delete hostContainer by name
  /api/instances/hostContainer/{id}/action/discover:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      tags:
      - hostContainer
      description: "Discover the esx servers that can be managed by vc to present to the user as
  candidates for importing."
      operationId: hostContainer_discover
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  potentialHosts:
                    description: "A list of host candidates that can be imported."
                    type: array
                    items:
                      description: "This class is used to hold discovered hosts of a vCenter or ESXi Host."
                      type: object
                      properties:
                        name:
                          description: "Display name of the discovered ESXi server"
                          type: string
                        serverName:
                          description: "DNS name of ESXi server"
                          type: string
                        description:
                          description: "Description of ESXi server"
                          type: string
                        osName:
                          description: "OS name of ESXi server"
                          type: string
                        osVersion:
                          description: "OS version of ESXi server"
                          type: string
                        uuid:
                          description: "Vendor unique identifier of ESXi server"
                          type: string
                        kernelIPs:
                          description: "Kernel IPs of ESXi server"
                          type: string
                        mgmtIPs:
                          description: "Management IPs of ESXi server"
                          type: string
                        fcInitiators:
                          description: "Fibre channel initiators of ESXi server"
                          type: string
                        iscsiInitiators:
                          description: "Iscsi initiators of ESXi server"
                          type: string
                        matchedConditions:
                          description: "How the discovered ESXi hosts match the existing hosts already known to the
  array"
                          $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
                        matchedHosts:
                          description: "Existing hosts that match the discovered vCenter/ESXi Host"
                          type: array
                          items:
                            description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                            type: object
                            properties:
                              id:
                                type: string
                                description: "Unique identifier of the host instance."
                        matchedPotentialHostsConditions:
                          description: "How the potential ESXi hosts conflict among themseleves"
                          $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
                        matchedPotentialHosts:
                          description: "The names of the other potential hosts that match this potential host in any way"
                          type: string
                        importOption:
                          description: "How ESXi server can be imported"
                          $ref: '#/definitions/HostContainerPotentialHostImportOptionEnum'
      summary: 05. Discover hostContainer by id
  /api/instances/hostContainer/name:{name}/action/discover:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: name
        in: path
        description: "Alias."
        required: true
        type: string
      tags:
      - hostContainer
      description: "Discover the esx servers that can be managed by vc to present to the user as
  candidates for importing."
      operationId: hostContainer_discover_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  potentialHosts:
                    description: "A list of host candidates that can be imported."
                    type: array
                    items:
                      description: "This class is used to hold discovered hosts of a vCenter or ESXi Host."
                      type: object
                      properties:
                        name:
                          description: "Display name of the discovered ESXi server"
                          type: string
                        serverName:
                          description: "DNS name of ESXi server"
                          type: string
                        description:
                          description: "Description of ESXi server"
                          type: string
                        osName:
                          description: "OS name of ESXi server"
                          type: string
                        osVersion:
                          description: "OS version of ESXi server"
                          type: string
                        uuid:
                          description: "Vendor unique identifier of ESXi server"
                          type: string
                        kernelIPs:
                          description: "Kernel IPs of ESXi server"
                          type: string
                        mgmtIPs:
                          description: "Management IPs of ESXi server"
                          type: string
                        fcInitiators:
                          description: "Fibre channel initiators of ESXi server"
                          type: string
                        iscsiInitiators:
                          description: "Iscsi initiators of ESXi server"
                          type: string
                        matchedConditions:
                          description: "How the discovered ESXi hosts match the existing hosts already known to the
  array"
                          $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
                        matchedHosts:
                          description: "Existing hosts that match the discovered vCenter/ESXi Host"
                          type: array
                          items:
                            description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                            type: object
                            properties:
                              id:
                                type: string
                                description: "Unique identifier of the host instance."
                        matchedPotentialHostsConditions:
                          description: "How the potential ESXi hosts conflict among themseleves"
                          $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
                        matchedPotentialHosts:
                          description: "The names of the other potential hosts that match this potential host in any way"
                          type: string
                        importOption:
                          description: "How ESXi server can be imported"
                          $ref: '#/definitions/HostContainerPotentialHostImportOptionEnum'
      summary: 06. Discover hostContainer by name
  /api/types/hostContainer/action/recommend:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [address,username,password]
          properties:
            address:
              description: "The IP address of the VC or ESXi server."
              type: string
            username:
              description: "The user name to access VC/ESXi server."
              type: string
            password:
              description: "The password to connect to VC or ESXi server."
              type: string
      tags:
      - hostContainer
      description: "Get a list of candidate hosts that can be imported for a VC or an ESXi server."
      operationId: hostContainer_recommend
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  type:
                    description: "The type of the VC/ESXi server."
                    $ref: '#/definitions/HostContainerTypeEnum'
                  containerName:
                    description: "The name of VC or ESXi server."
                    type: string
                  containerVersion:
                    description: "The software version of VC or ESXi server."
                    type: string
                  vasaProviderState:
                    description: "Indicates storage system’s VASA vendor provider state on the vCenter."
                    $ref: '#/definitions/VasaProviderStateEnum'
                  potentialHosts:
                    description: "The list of candidate hosts that can be imported."
                    type: array
                    items:
                      description: "This class is used to hold discovered hosts of a vCenter or ESXi Host."
                      type: object
                      properties:
                        name:
                          description: "Display name of the discovered ESXi server"
                          type: string
                        serverName:
                          description: "DNS name of ESXi server"
                          type: string
                        description:
                          description: "Description of ESXi server"
                          type: string
                        osName:
                          description: "OS name of ESXi server"
                          type: string
                        osVersion:
                          description: "OS version of ESXi server"
                          type: string
                        uuid:
                          description: "Vendor unique identifier of ESXi server"
                          type: string
                        kernelIPs:
                          description: "Kernel IPs of ESXi server"
                          type: string
                        mgmtIPs:
                          description: "Management IPs of ESXi server"
                          type: string
                        fcInitiators:
                          description: "Fibre channel initiators of ESXi server"
                          type: string
                        iscsiInitiators:
                          description: "Iscsi initiators of ESXi server"
                          type: string
                        matchedConditions:
                          description: "How the discovered ESXi hosts match the existing hosts already known to the
  array"
                          $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
                        matchedHosts:
                          description: "Existing hosts that match the discovered vCenter/ESXi Host"
                          type: array
                          items:
                            description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                            type: object
                            properties:
                              id:
                                type: string
                                description: "Unique identifier of the host instance."
                        matchedPotentialHostsConditions:
                          description: "How the potential ESXi hosts conflict among themseleves"
                          $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
                        matchedPotentialHosts:
                          description: "The names of the other potential hosts that match this potential host in any way"
                          type: string
                        importOption:
                          description: "How ESXi server can be imported"
                          $ref: '#/definitions/HostContainerPotentialHostImportOptionEnum'
      summary: 07. Recommend hostContainer
  /api/instances/hostContainer/{id}/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [doRescan]
          properties:
            doRescan:
              description: "Whether a full rescan is requested."
              type: boolean
      tags:
      - hostContainer
      description: "Refresh all the hosts managed by the host container."
      operationId: hostContainer_refresh
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 08. Refresh hostContainer by id
  /api/instances/hostContainer/name:{name}/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Alias."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [doRescan]
          properties:
            doRescan:
              description: "Whether a full rescan is requested."
              type: boolean
      tags:
      - hostContainer
      description: "Refresh all the hosts managed by the host container."
      operationId: hostContainer_refresh_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 09. Refresh hostContainer by name
  /api/types/hostContainer/action/refreshAll:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [doRescan]
          properties:
            doRescan:
              description: "Whether a full rescan is requested."
              type: boolean
      tags:
      - hostContainer
      description: "Refresh all known vCenters and ESXi servers."
      operationId: hostContainer_refreshAll
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 10. RefreshAll hostContainer
  /api/instances/hostContainer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            targetAddress:
              description: "The new address of the host container."
              type: string
            description:
              description: "The new description of the host container."
              type: string
            username:
              description: "The new user name to access the host container."
              type: string
            password:
              description: "The new password to access the host container."
              type: string
            vasaProviderParameters:
              description: "VASA provider parameters. If specified, storage system's VASA provider will be registered on vSphere."
              $ref: '#/definitions/vasaProviderParameters'
            potentialHosts:
              description: "A list of new candidate hosts that will be associated with this host container."
              type: array
              items:
                description: "This class is used to hold discovered hosts of a vCenter or ESXi Host."
                type: object
                properties:
                  name:
                    description: "Display name of the discovered ESXi server"
                    type: string
                  serverName:
                    description: "DNS name of ESXi server"
                    type: string
                  description:
                    description: "Description of ESXi server"
                    type: string
                  osName:
                    description: "OS name of ESXi server"
                    type: string
                  osVersion:
                    description: "OS version of ESXi server"
                    type: string
                  uuid:
                    description: "Vendor unique identifier of ESXi server"
                    type: string
                  kernelIPs:
                    description: "Kernel IPs of ESXi server"
                    type: string
                  mgmtIPs:
                    description: "Management IPs of ESXi server"
                    type: string
                  fcInitiators:
                    description: "Fibre channel initiators of ESXi server"
                    type: string
                  iscsiInitiators:
                    description: "Iscsi initiators of ESXi server"
                    type: string
                  matchedConditions:
                    description: "How the discovered ESXi hosts match the existing hosts already known to the
  array"
                    $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
                  matchedHosts:
                    description: "Existing hosts that match the discovered vCenter/ESXi Host"
                    type: array
                    items:
                      description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the host instance."
                  matchedPotentialHostsConditions:
                    description: "How the potential ESXi hosts conflict among themseleves"
                    $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
                  matchedPotentialHosts:
                    description: "The names of the other potential hosts that match this potential host in any way"
                    type: string
                  importOption:
                    description: "How ESXi server can be imported"
                    $ref: '#/definitions/HostContainerPotentialHostImportOptionEnum'
      tags:
      - hostContainer
      description: "Modify an existing host container."
      operationId: hostContainer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  newHosts:
                    description: "A list of newly imported hosts."
                    type: array
                    items:
                      description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the host instance."
      summary: 11. Modify hostContainer by id
  /api/instances/hostContainer/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Alias."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            targetAddress:
              description: "The new address of the host container."
              type: string
            description:
              description: "The new description of the host container."
              type: string
            username:
              description: "The new user name to access the host container."
              type: string
            password:
              description: "The new password to access the host container."
              type: string
            vasaProviderParameters:
              description: "VASA provider parameters. If specified, storage system's VASA provider will be registered on vSphere."
              $ref: '#/definitions/vasaProviderParameters'
            potentialHosts:
              description: "A list of new candidate hosts that will be associated with this host container."
              type: array
              items:
                description: "This class is used to hold discovered hosts of a vCenter or ESXi Host."
                type: object
                properties:
                  name:
                    description: "Display name of the discovered ESXi server"
                    type: string
                  serverName:
                    description: "DNS name of ESXi server"
                    type: string
                  description:
                    description: "Description of ESXi server"
                    type: string
                  osName:
                    description: "OS name of ESXi server"
                    type: string
                  osVersion:
                    description: "OS version of ESXi server"
                    type: string
                  uuid:
                    description: "Vendor unique identifier of ESXi server"
                    type: string
                  kernelIPs:
                    description: "Kernel IPs of ESXi server"
                    type: string
                  mgmtIPs:
                    description: "Management IPs of ESXi server"
                    type: string
                  fcInitiators:
                    description: "Fibre channel initiators of ESXi server"
                    type: string
                  iscsiInitiators:
                    description: "Iscsi initiators of ESXi server"
                    type: string
                  matchedConditions:
                    description: "How the discovered ESXi hosts match the existing hosts already known to the
  array"
                    $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
                  matchedHosts:
                    description: "Existing hosts that match the discovered vCenter/ESXi Host"
                    type: array
                    items:
                      description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the host instance."
                  matchedPotentialHostsConditions:
                    description: "How the potential ESXi hosts conflict among themseleves"
                    $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
                  matchedPotentialHosts:
                    description: "The names of the other potential hosts that match this potential host in any way"
                    type: string
                  importOption:
                    description: "How ESXi server can be imported"
                    $ref: '#/definitions/HostContainerPotentialHostImportOptionEnum'
      tags:
      - hostContainer
      description: "Modify an existing host container."
      operationId: hostContainer_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  newHosts:
                    description: "A list of newly imported hosts."
                    type: array
                    items:
                      description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the host instance."
      summary: 12. Modify hostContainer by name
  /api/types/hostGroup/instances:
    get:
      tags:
      - hostGroup
      description: 'Collection query'
      operationId: hostGroup_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/hostGroup'
      summary: 01. Get all hostGroup
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name,hosts]
          properties:
            name:
              description: "Host group name."
              type: string
            description:
              description: "Host group description."
              type: string
            type:
              description: "Host gorup type. Default value is General."
              $ref: '#/definitions/HostGroupTypeEnum'
            hosts:
              description: "List of hosts to be added to the host group."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                required: [id]
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            hostGroupLunParams:
              description: "List of embedded hostGroupLunParam objects. The embedded object specifies the LUN to be added to the host group and optional host LUN ID."
              type: array
              items:
                description: "Information about the hosts access the lun.
 <br/>
 <br/>
 This embedded object is passed to the create and modifyLuns method of hostGroup.
 <ul>
   <li>It is not allowed to specify host that is not in the host group in hostGroupHostModifys property.</li>
   <li>If the hlu property is not specified and this embedded object is used in addHostGroupLunParams parameter of hostGroup.modifyLuns, or hostGroupLunParams parameter of hostGroup.create:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the LUN specified by lun property will be modified to be accessible by all hosts in the host group.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the LUN will be modified to be accessible by these hosts.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the LUN will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
   <li>If the hlu property is not specified and this embedded object is used in modifyHostGroupLunParams parameter of hostGroup.modifyLuns:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the LUN specified by lun property will keep unchanged.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the host access to the LUN will keep unchanged.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the LUN will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
 </ul>"
                type: object
                properties:
                  lun:
                    description: "Reference to the lun to be added to the host group or the lun that the host access for it to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
                  hlu:
                    description: "An optional host LUN ID to be set to all hosts in the host group.
  If specified, then all hosts in the host group will grant production access for this LUN with this host LUN ID, and the hostGroupHostModifys property will be ignored."
                    type: integer
                  hostGroupHostModifys:
                    description: "An optional list of embedded hostGroupHostModify object to customize host LUN ID for each host.
  It is not allowed to specify host that is not in the host group."
                    type: array
                    items:
                      description: "The mapping relationship between lun/VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupLunParam/hostGroupVmwareLunParam embedded type."
                      type: object
                      properties:
                        host:
                          description: "Reference to the host to grant production access to the LUN."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN/VMware VMFS datastore, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
            hostGroupVmwareLunParams:
              description: "List of embedded hostGroupVmwareLunParam objects. The embedded object specifies the VMware VMFS datastore to be added to the host group and optional host LUN ID."
              type: array
              items:
                description: "Information about the hosts access the VMware VMFS datastore.
 <br/>
 <br/>
 This embedded object is passed to the create and modifyVmwareLuns method of hostGroup.
 <ul>
   <li>It is not allowed to specify host that is not in the host group in hostGroupHostModifys property.</li>
   <li>If the hlu property is not specified and this embedded object is used in addHostGroupVmwareLunParams parameter of hostGroup.modifyVmwareLuns, or hostGroupVmwareLunParams parameter of hostGroup.create:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the VMware VMFS datastore specified by storageResource property will be modified to be accessible by all hosts in the host group.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the VMware VMFS datastore will be modified to be accessible by these hosts.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the VMware VMFS datastore will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
   <li>If the hlu property is not specified and this embedded object is used in modifyHostGroupVmwareLunParams parameter of hostGroup.modifyVmwareLuns:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the VMware VMFS datastore specified by storageResource property will keep unchanged.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the host access to the VMware VMFS datastore will keep unchanged.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the VMware VMFS datastore will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
 </ul>"
                type: object
                properties:
                  storageResource:
                    description: "Reference to the VMware VMFS datastore to be added to the host group or the VMware VMFS datastore that the host access for it to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
                  hlu:
                    description: "An optional host LUN ID to be set to all hosts in the host group.
  If specified, then all hosts in the host group will grant production access for this VMware VMFS datastore with this host LUN ID, and the hostGroupHostModifys property will be ignored."
                    type: integer
                  hostGroupHostModifys:
                    description: "An optional list of embedded hostGroupHostModify object to customize host LUN ID for each host.
  It is not allowed to specify host that is not in the host group."
                    type: array
                    items:
                      description: "The mapping relationship between lun/VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupLunParam/hostGroupVmwareLunParam embedded type."
                      type: object
                      properties:
                        host:
                          description: "Reference to the host to grant production access to the LUN."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN/VMware VMFS datastore, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
      tags:
      - hostGroup
      description: "Create a host group."
      operationId: hostGroup_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new host group instance."
                    type: string
      summary: 04. Create hostGroup
  /api/instances/hostGroup/{id}:
    get:
      tags:
      - hostGroup
      description: 'Instance query'
      operationId: hostGroup_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the host group instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostGroup'
      summary: 02. Get hostGroup by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the host group instance."
        required: true
        type: string
      tags:
      - hostGroup
      description: "Delete a host group.
  All hosts in this host group will be removed from this host group, but these hosts will not be deleted and they will keep their current access to LUNs."
      operationId: hostGroup_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 11. Delete hostGroup by id
  /api/instances/hostGroup/name:{name}:
    get:
      tags:
      - hostGroup
      description: 'Instance query'
      operationId: hostGroup_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Name of the host group."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostGroup'
      summary: 03. Get hostGroup by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the host group."
        required: true
        type: string
      tags:
      - hostGroup
      description: "Delete a host group.
  All hosts in this host group will be removed from this host group, but these hosts will not be deleted and they will keep their current access to LUNs."
      operationId: hostGroup_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 12. Delete hostGroup by name
  /api/instances/hostGroup/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the host group instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Host group name."
              type: string
            description:
              description: "Host group description."
              type: string
            addHostGroupHostParams:
              description: "List of embedded hostGroupHostParam objects. The embedded object specifies host to be added to the host group and its access to LUNs and optional host LUN IDs for these LUNs."
              type: array
              items:
                description: "Information about the luns/VMware VMFS datastore accessed by the host.
 <br/>
 <br/>
 This embedded object is passed to the modify method of hostGroup."
                type: object
                properties:
                  host:
                    description: "Reference to the host to be added to host group or the host in host group to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  accessMergeType:
                    description: "An optional HostGroupAccessMergeTypeEnum to specify how the host access is going to be updated when the host is added/modified in host group.
  If not specified, it is by default MergeFromHostGroup when used in addHostGroupHostParams in hostGroup.modify method, and by default Customized when used in modifyHostGroupHostParams in hostGroup.modify method."
                    $ref: '#/definitions/HostGroupAccessMergeTypeEnum'
                  hostGroupLunModifys:
                    description: "An optional list of embedded hostGroupLunModify object, only valid when accessMergeType property is Customized.
  The embedded object specifies the LUN for the host to grant production access, and host LUN IDs to be updated for the host.
  The host access to the LUNs that not in this list will keep unchanged."
                    type: array
                    items:
                      description: "The mapping relationship between lun and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupHostParam embedded type."
                      type: object
                      properties:
                        lun:
                          description: "Reference to the lun that the host will grant production access to it."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the LUN."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
                  hostGroupVmwareLunModifys:
                    description: "An optional list of embedded hostGroupVmwareLunModify object, only valid when accessMergeType property is Customized.
  The embedded object specifies the VMware VMFS datastore for the host to grant production access, and host LUN IDs to be updated for the host."
                    type: array
                    items:
                      description: "The mapping relationship between VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupHostParam embedded type."
                      type: object
                      properties:
                        storageResource:
                          description: "Reference to the VMware VMFS datastore that the host will grant production access to it."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the storage resource."
                        hlu:
                          description: "Optional host lun Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the VMware VMFS datastore, and corresponding hostGroupVmwareLun has no defaultHlu, then system will generate a host lun ID for it."
                          type: integer
            modifyHostGroupHostParams:
              description: "List of embedded hostGroupHostParam objects. The embedded object specifies host to be modified with its access to LUNs and optional host LUN IDs for these LUNs."
              type: array
              items:
                description: "Information about the luns/VMware VMFS datastore accessed by the host.
 <br/>
 <br/>
 This embedded object is passed to the modify method of hostGroup."
                type: object
                properties:
                  host:
                    description: "Reference to the host to be added to host group or the host in host group to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  accessMergeType:
                    description: "An optional HostGroupAccessMergeTypeEnum to specify how the host access is going to be updated when the host is added/modified in host group.
  If not specified, it is by default MergeFromHostGroup when used in addHostGroupHostParams in hostGroup.modify method, and by default Customized when used in modifyHostGroupHostParams in hostGroup.modify method."
                    $ref: '#/definitions/HostGroupAccessMergeTypeEnum'
                  hostGroupLunModifys:
                    description: "An optional list of embedded hostGroupLunModify object, only valid when accessMergeType property is Customized.
  The embedded object specifies the LUN for the host to grant production access, and host LUN IDs to be updated for the host.
  The host access to the LUNs that not in this list will keep unchanged."
                    type: array
                    items:
                      description: "The mapping relationship between lun and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupHostParam embedded type."
                      type: object
                      properties:
                        lun:
                          description: "Reference to the lun that the host will grant production access to it."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the LUN."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
                  hostGroupVmwareLunModifys:
                    description: "An optional list of embedded hostGroupVmwareLunModify object, only valid when accessMergeType property is Customized.
  The embedded object specifies the VMware VMFS datastore for the host to grant production access, and host LUN IDs to be updated for the host."
                    type: array
                    items:
                      description: "The mapping relationship between VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupHostParam embedded type."
                      type: object
                      properties:
                        storageResource:
                          description: "Reference to the VMware VMFS datastore that the host will grant production access to it."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the storage resource."
                        hlu:
                          description: "Optional host lun Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the VMware VMFS datastore, and corresponding hostGroupVmwareLun has no defaultHlu, then system will generate a host lun ID for it."
                          type: integer
            removeHosts:
              description: "Hosts to be removed from this host group. After removed the hosts from host group, the hosts will keep their current access to LUNs."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
      tags:
      - hostGroup
      description: "Modify a host group."
      operationId: hostGroup_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 05. Modify hostGroup by id
  /api/instances/hostGroup/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the host group."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Host group name."
              type: string
            description:
              description: "Host group description."
              type: string
            addHostGroupHostParams:
              description: "List of embedded hostGroupHostParam objects. The embedded object specifies host to be added to the host group and its access to LUNs and optional host LUN IDs for these LUNs."
              type: array
              items:
                description: "Information about the luns/VMware VMFS datastore accessed by the host.
 <br/>
 <br/>
 This embedded object is passed to the modify method of hostGroup."
                type: object
                properties:
                  host:
                    description: "Reference to the host to be added to host group or the host in host group to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  accessMergeType:
                    description: "An optional HostGroupAccessMergeTypeEnum to specify how the host access is going to be updated when the host is added/modified in host group.
  If not specified, it is by default MergeFromHostGroup when used in addHostGroupHostParams in hostGroup.modify method, and by default Customized when used in modifyHostGroupHostParams in hostGroup.modify method."
                    $ref: '#/definitions/HostGroupAccessMergeTypeEnum'
                  hostGroupLunModifys:
                    description: "An optional list of embedded hostGroupLunModify object, only valid when accessMergeType property is Customized.
  The embedded object specifies the LUN for the host to grant production access, and host LUN IDs to be updated for the host.
  The host access to the LUNs that not in this list will keep unchanged."
                    type: array
                    items:
                      description: "The mapping relationship between lun and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupHostParam embedded type."
                      type: object
                      properties:
                        lun:
                          description: "Reference to the lun that the host will grant production access to it."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the LUN."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
                  hostGroupVmwareLunModifys:
                    description: "An optional list of embedded hostGroupVmwareLunModify object, only valid when accessMergeType property is Customized.
  The embedded object specifies the VMware VMFS datastore for the host to grant production access, and host LUN IDs to be updated for the host."
                    type: array
                    items:
                      description: "The mapping relationship between VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupHostParam embedded type."
                      type: object
                      properties:
                        storageResource:
                          description: "Reference to the VMware VMFS datastore that the host will grant production access to it."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the storage resource."
                        hlu:
                          description: "Optional host lun Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the VMware VMFS datastore, and corresponding hostGroupVmwareLun has no defaultHlu, then system will generate a host lun ID for it."
                          type: integer
            modifyHostGroupHostParams:
              description: "List of embedded hostGroupHostParam objects. The embedded object specifies host to be modified with its access to LUNs and optional host LUN IDs for these LUNs."
              type: array
              items:
                description: "Information about the luns/VMware VMFS datastore accessed by the host.
 <br/>
 <br/>
 This embedded object is passed to the modify method of hostGroup."
                type: object
                properties:
                  host:
                    description: "Reference to the host to be added to host group or the host in host group to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  accessMergeType:
                    description: "An optional HostGroupAccessMergeTypeEnum to specify how the host access is going to be updated when the host is added/modified in host group.
  If not specified, it is by default MergeFromHostGroup when used in addHostGroupHostParams in hostGroup.modify method, and by default Customized when used in modifyHostGroupHostParams in hostGroup.modify method."
                    $ref: '#/definitions/HostGroupAccessMergeTypeEnum'
                  hostGroupLunModifys:
                    description: "An optional list of embedded hostGroupLunModify object, only valid when accessMergeType property is Customized.
  The embedded object specifies the LUN for the host to grant production access, and host LUN IDs to be updated for the host.
  The host access to the LUNs that not in this list will keep unchanged."
                    type: array
                    items:
                      description: "The mapping relationship between lun and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupHostParam embedded type."
                      type: object
                      properties:
                        lun:
                          description: "Reference to the lun that the host will grant production access to it."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the LUN."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
                  hostGroupVmwareLunModifys:
                    description: "An optional list of embedded hostGroupVmwareLunModify object, only valid when accessMergeType property is Customized.
  The embedded object specifies the VMware VMFS datastore for the host to grant production access, and host LUN IDs to be updated for the host."
                    type: array
                    items:
                      description: "The mapping relationship between VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupHostParam embedded type."
                      type: object
                      properties:
                        storageResource:
                          description: "Reference to the VMware VMFS datastore that the host will grant production access to it."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the storage resource."
                        hlu:
                          description: "Optional host lun Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the VMware VMFS datastore, and corresponding hostGroupVmwareLun has no defaultHlu, then system will generate a host lun ID for it."
                          type: integer
            removeHosts:
              description: "Hosts to be removed from this host group. After removed the hosts from host group, the hosts will keep their current access to LUNs."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
      tags:
      - hostGroup
      description: "Modify a host group."
      operationId: hostGroup_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 06. Modify hostGroup by name
  /api/instances/hostGroup/{id}/action/modifyLuns:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the host group instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            addHostGroupLunParams:
              description: "List of embedded hostGroupLunParam objects. The embedded object specifies the LUN to be added to the host group and and optional host LUN ID."
              type: array
              items:
                description: "Information about the hosts access the lun.
 <br/>
 <br/>
 This embedded object is passed to the create and modifyLuns method of hostGroup.
 <ul>
   <li>It is not allowed to specify host that is not in the host group in hostGroupHostModifys property.</li>
   <li>If the hlu property is not specified and this embedded object is used in addHostGroupLunParams parameter of hostGroup.modifyLuns, or hostGroupLunParams parameter of hostGroup.create:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the LUN specified by lun property will be modified to be accessible by all hosts in the host group.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the LUN will be modified to be accessible by these hosts.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the LUN will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
   <li>If the hlu property is not specified and this embedded object is used in modifyHostGroupLunParams parameter of hostGroup.modifyLuns:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the LUN specified by lun property will keep unchanged.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the host access to the LUN will keep unchanged.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the LUN will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
 </ul>"
                type: object
                properties:
                  lun:
                    description: "Reference to the lun to be added to the host group or the lun that the host access for it to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
                  hlu:
                    description: "An optional host LUN ID to be set to all hosts in the host group.
  If specified, then all hosts in the host group will grant production access for this LUN with this host LUN ID, and the hostGroupHostModifys property will be ignored."
                    type: integer
                  hostGroupHostModifys:
                    description: "An optional list of embedded hostGroupHostModify object to customize host LUN ID for each host.
  It is not allowed to specify host that is not in the host group."
                    type: array
                    items:
                      description: "The mapping relationship between lun/VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupLunParam/hostGroupVmwareLunParam embedded type."
                      type: object
                      properties:
                        host:
                          description: "Reference to the host to grant production access to the LUN."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN/VMware VMFS datastore, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
            modifyHostGroupLunParams:
              description: "List of embedded hostGroupLunParam objects. The embedded object specifies the LUN to be modified in the host group and optional host LUN ID."
              type: array
              items:
                description: "Information about the hosts access the lun.
 <br/>
 <br/>
 This embedded object is passed to the create and modifyLuns method of hostGroup.
 <ul>
   <li>It is not allowed to specify host that is not in the host group in hostGroupHostModifys property.</li>
   <li>If the hlu property is not specified and this embedded object is used in addHostGroupLunParams parameter of hostGroup.modifyLuns, or hostGroupLunParams parameter of hostGroup.create:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the LUN specified by lun property will be modified to be accessible by all hosts in the host group.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the LUN will be modified to be accessible by these hosts.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the LUN will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
   <li>If the hlu property is not specified and this embedded object is used in modifyHostGroupLunParams parameter of hostGroup.modifyLuns:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the LUN specified by lun property will keep unchanged.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the host access to the LUN will keep unchanged.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the LUN will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
 </ul>"
                type: object
                properties:
                  lun:
                    description: "Reference to the lun to be added to the host group or the lun that the host access for it to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
                  hlu:
                    description: "An optional host LUN ID to be set to all hosts in the host group.
  If specified, then all hosts in the host group will grant production access for this LUN with this host LUN ID, and the hostGroupHostModifys property will be ignored."
                    type: integer
                  hostGroupHostModifys:
                    description: "An optional list of embedded hostGroupHostModify object to customize host LUN ID for each host.
  It is not allowed to specify host that is not in the host group."
                    type: array
                    items:
                      description: "The mapping relationship between lun/VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupLunParam/hostGroupVmwareLunParam embedded type."
                      type: object
                      properties:
                        host:
                          description: "Reference to the host to grant production access to the LUN."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN/VMware VMFS datastore, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
            removeLuns:
              description: "Luns to be removed from this host group. After removed the LUNs from host group, all hosts in this host group will have no production access to the removed LUNs. The LUNs are not deleted from the storage system when it is removed from host group."
              type: array
              items:
                description: "A LUN (block storage) type storage resource,
  which may be a LUN in a consistency group, 
  a standalone LUN, or a VMWare VMFS LUN.
  Management of LUNs is performed via the storageResource object."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the LUN."
      tags:
      - hostGroup
      description: "Modify the luns in the host group."
      operationId: hostGroup_modifyLuns
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 07. ModifyLuns hostGroup by id
  /api/instances/hostGroup/name:{name}/action/modifyLuns:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the host group."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            addHostGroupLunParams:
              description: "List of embedded hostGroupLunParam objects. The embedded object specifies the LUN to be added to the host group and and optional host LUN ID."
              type: array
              items:
                description: "Information about the hosts access the lun.
 <br/>
 <br/>
 This embedded object is passed to the create and modifyLuns method of hostGroup.
 <ul>
   <li>It is not allowed to specify host that is not in the host group in hostGroupHostModifys property.</li>
   <li>If the hlu property is not specified and this embedded object is used in addHostGroupLunParams parameter of hostGroup.modifyLuns, or hostGroupLunParams parameter of hostGroup.create:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the LUN specified by lun property will be modified to be accessible by all hosts in the host group.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the LUN will be modified to be accessible by these hosts.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the LUN will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
   <li>If the hlu property is not specified and this embedded object is used in modifyHostGroupLunParams parameter of hostGroup.modifyLuns:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the LUN specified by lun property will keep unchanged.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the host access to the LUN will keep unchanged.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the LUN will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
 </ul>"
                type: object
                properties:
                  lun:
                    description: "Reference to the lun to be added to the host group or the lun that the host access for it to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
                  hlu:
                    description: "An optional host LUN ID to be set to all hosts in the host group.
  If specified, then all hosts in the host group will grant production access for this LUN with this host LUN ID, and the hostGroupHostModifys property will be ignored."
                    type: integer
                  hostGroupHostModifys:
                    description: "An optional list of embedded hostGroupHostModify object to customize host LUN ID for each host.
  It is not allowed to specify host that is not in the host group."
                    type: array
                    items:
                      description: "The mapping relationship between lun/VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupLunParam/hostGroupVmwareLunParam embedded type."
                      type: object
                      properties:
                        host:
                          description: "Reference to the host to grant production access to the LUN."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN/VMware VMFS datastore, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
            modifyHostGroupLunParams:
              description: "List of embedded hostGroupLunParam objects. The embedded object specifies the LUN to be modified in the host group and optional host LUN ID."
              type: array
              items:
                description: "Information about the hosts access the lun.
 <br/>
 <br/>
 This embedded object is passed to the create and modifyLuns method of hostGroup.
 <ul>
   <li>It is not allowed to specify host that is not in the host group in hostGroupHostModifys property.</li>
   <li>If the hlu property is not specified and this embedded object is used in addHostGroupLunParams parameter of hostGroup.modifyLuns, or hostGroupLunParams parameter of hostGroup.create:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the LUN specified by lun property will be modified to be accessible by all hosts in the host group.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the LUN will be modified to be accessible by these hosts.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the LUN will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
   <li>If the hlu property is not specified and this embedded object is used in modifyHostGroupLunParams parameter of hostGroup.modifyLuns:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the LUN specified by lun property will keep unchanged.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the host access to the LUN will keep unchanged.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the LUN will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
 </ul>"
                type: object
                properties:
                  lun:
                    description: "Reference to the lun to be added to the host group or the lun that the host access for it to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
                  hlu:
                    description: "An optional host LUN ID to be set to all hosts in the host group.
  If specified, then all hosts in the host group will grant production access for this LUN with this host LUN ID, and the hostGroupHostModifys property will be ignored."
                    type: integer
                  hostGroupHostModifys:
                    description: "An optional list of embedded hostGroupHostModify object to customize host LUN ID for each host.
  It is not allowed to specify host that is not in the host group."
                    type: array
                    items:
                      description: "The mapping relationship between lun/VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupLunParam/hostGroupVmwareLunParam embedded type."
                      type: object
                      properties:
                        host:
                          description: "Reference to the host to grant production access to the LUN."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN/VMware VMFS datastore, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
            removeLuns:
              description: "Luns to be removed from this host group. After removed the LUNs from host group, all hosts in this host group will have no production access to the removed LUNs. The LUNs are not deleted from the storage system when it is removed from host group."
              type: array
              items:
                description: "A LUN (block storage) type storage resource,
  which may be a LUN in a consistency group, 
  a standalone LUN, or a VMWare VMFS LUN.
  Management of LUNs is performed via the storageResource object."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the LUN."
      tags:
      - hostGroup
      description: "Modify the luns in the host group."
      operationId: hostGroup_modifyLuns_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 08. ModifyLuns hostGroup by name
  /api/instances/hostGroup/{id}/action/modifyVmwareLuns:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the host group instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            addHostGroupVmwareLunParams:
              description: "List of embedded hostGroupVmwareLunParam objects. The embedded object specifies the VMware VMFS datastore to be added to the host group and and optional host LUN ID."
              type: array
              items:
                description: "Information about the hosts access the VMware VMFS datastore.
 <br/>
 <br/>
 This embedded object is passed to the create and modifyVmwareLuns method of hostGroup.
 <ul>
   <li>It is not allowed to specify host that is not in the host group in hostGroupHostModifys property.</li>
   <li>If the hlu property is not specified and this embedded object is used in addHostGroupVmwareLunParams parameter of hostGroup.modifyVmwareLuns, or hostGroupVmwareLunParams parameter of hostGroup.create:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the VMware VMFS datastore specified by storageResource property will be modified to be accessible by all hosts in the host group.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the VMware VMFS datastore will be modified to be accessible by these hosts.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the VMware VMFS datastore will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
   <li>If the hlu property is not specified and this embedded object is used in modifyHostGroupVmwareLunParams parameter of hostGroup.modifyVmwareLuns:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the VMware VMFS datastore specified by storageResource property will keep unchanged.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the host access to the VMware VMFS datastore will keep unchanged.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the VMware VMFS datastore will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
 </ul>"
                type: object
                properties:
                  storageResource:
                    description: "Reference to the VMware VMFS datastore to be added to the host group or the VMware VMFS datastore that the host access for it to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
                  hlu:
                    description: "An optional host LUN ID to be set to all hosts in the host group.
  If specified, then all hosts in the host group will grant production access for this VMware VMFS datastore with this host LUN ID, and the hostGroupHostModifys property will be ignored."
                    type: integer
                  hostGroupHostModifys:
                    description: "An optional list of embedded hostGroupHostModify object to customize host LUN ID for each host.
  It is not allowed to specify host that is not in the host group."
                    type: array
                    items:
                      description: "The mapping relationship between lun/VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupLunParam/hostGroupVmwareLunParam embedded type."
                      type: object
                      properties:
                        host:
                          description: "Reference to the host to grant production access to the LUN."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN/VMware VMFS datastore, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
            modifyHostGroupVmwareLunParams:
              description: "List of embedded hostGroupVmwareLunParam objects. The embedded object specifies the VMware VMFS datastore to be modified in the host group and optional host LUN ID."
              type: array
              items:
                description: "Information about the hosts access the VMware VMFS datastore.
 <br/>
 <br/>
 This embedded object is passed to the create and modifyVmwareLuns method of hostGroup.
 <ul>
   <li>It is not allowed to specify host that is not in the host group in hostGroupHostModifys property.</li>
   <li>If the hlu property is not specified and this embedded object is used in addHostGroupVmwareLunParams parameter of hostGroup.modifyVmwareLuns, or hostGroupVmwareLunParams parameter of hostGroup.create:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the VMware VMFS datastore specified by storageResource property will be modified to be accessible by all hosts in the host group.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the VMware VMFS datastore will be modified to be accessible by these hosts.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the VMware VMFS datastore will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
   <li>If the hlu property is not specified and this embedded object is used in modifyHostGroupVmwareLunParams parameter of hostGroup.modifyVmwareLuns:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the VMware VMFS datastore specified by storageResource property will keep unchanged.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the host access to the VMware VMFS datastore will keep unchanged.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the VMware VMFS datastore will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
 </ul>"
                type: object
                properties:
                  storageResource:
                    description: "Reference to the VMware VMFS datastore to be added to the host group or the VMware VMFS datastore that the host access for it to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
                  hlu:
                    description: "An optional host LUN ID to be set to all hosts in the host group.
  If specified, then all hosts in the host group will grant production access for this VMware VMFS datastore with this host LUN ID, and the hostGroupHostModifys property will be ignored."
                    type: integer
                  hostGroupHostModifys:
                    description: "An optional list of embedded hostGroupHostModify object to customize host LUN ID for each host.
  It is not allowed to specify host that is not in the host group."
                    type: array
                    items:
                      description: "The mapping relationship between lun/VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupLunParam/hostGroupVmwareLunParam embedded type."
                      type: object
                      properties:
                        host:
                          description: "Reference to the host to grant production access to the LUN."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN/VMware VMFS datastore, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
            removeVmwareLuns:
              description: "VMware VMFS datastores to be removed from this host group. After removed the VMware VMFS datastores from host group, all hosts in this host group will have no production access to the removed VMware VMFS datastores. The VMware VMFS datastores are not deleted from the storage system when it is removed from host group."
              type: array
              items:
                description: "Information about storage resources in the storage system.
  <br/>
  <br/>
  A storage resource<b><i> </i></b>is a specific type of storage entity
  allocated in the storage system for a particular kind of host or application.
  The storage system provides the following types of storage resources:
  <ul>
  <li>LUNs</li>
  <li>Consistency groups</li>
  <li>File systems accessed via NFS and/or CIFS shares.</li>
  <li>VMware NFS datastores</li>
  <li>VMware VMFS datastores</li>
  <li>VVol (file)</li>
  <li>VVol (block)</li>
  </ul>
  All types of storage resource types can be divided into two major groups:
  <ul>
  <li>Block (or LUN based) storage resources: LUNs, consistency groups, VMware VMFS datastores, VVol (block).</li>
  <li>File system based storage resources: File systems, VMware NFS datastores, VVol (file).</li>
  </ul>
  In order to create a storage resource, there must be at least one pool
  configured on the system. For information about configuring pools, see the help
  topic for the pool. To provision file system based storage resource
  there must be at least one nasServer configured on the system."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the storage resource."
      tags:
      - hostGroup
      description: "Modify the VMware VMFS datastores in the host group."
      operationId: hostGroup_modifyVmwareLuns
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 09. ModifyVmwareLuns hostGroup by id
  /api/instances/hostGroup/name:{name}/action/modifyVmwareLuns:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the host group."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            addHostGroupVmwareLunParams:
              description: "List of embedded hostGroupVmwareLunParam objects. The embedded object specifies the VMware VMFS datastore to be added to the host group and and optional host LUN ID."
              type: array
              items:
                description: "Information about the hosts access the VMware VMFS datastore.
 <br/>
 <br/>
 This embedded object is passed to the create and modifyVmwareLuns method of hostGroup.
 <ul>
   <li>It is not allowed to specify host that is not in the host group in hostGroupHostModifys property.</li>
   <li>If the hlu property is not specified and this embedded object is used in addHostGroupVmwareLunParams parameter of hostGroup.modifyVmwareLuns, or hostGroupVmwareLunParams parameter of hostGroup.create:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the VMware VMFS datastore specified by storageResource property will be modified to be accessible by all hosts in the host group.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the VMware VMFS datastore will be modified to be accessible by these hosts.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the VMware VMFS datastore will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
   <li>If the hlu property is not specified and this embedded object is used in modifyHostGroupVmwareLunParams parameter of hostGroup.modifyVmwareLuns:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the VMware VMFS datastore specified by storageResource property will keep unchanged.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the host access to the VMware VMFS datastore will keep unchanged.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the VMware VMFS datastore will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
 </ul>"
                type: object
                properties:
                  storageResource:
                    description: "Reference to the VMware VMFS datastore to be added to the host group or the VMware VMFS datastore that the host access for it to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
                  hlu:
                    description: "An optional host LUN ID to be set to all hosts in the host group.
  If specified, then all hosts in the host group will grant production access for this VMware VMFS datastore with this host LUN ID, and the hostGroupHostModifys property will be ignored."
                    type: integer
                  hostGroupHostModifys:
                    description: "An optional list of embedded hostGroupHostModify object to customize host LUN ID for each host.
  It is not allowed to specify host that is not in the host group."
                    type: array
                    items:
                      description: "The mapping relationship between lun/VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupLunParam/hostGroupVmwareLunParam embedded type."
                      type: object
                      properties:
                        host:
                          description: "Reference to the host to grant production access to the LUN."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN/VMware VMFS datastore, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
            modifyHostGroupVmwareLunParams:
              description: "List of embedded hostGroupVmwareLunParam objects. The embedded object specifies the VMware VMFS datastore to be modified in the host group and optional host LUN ID."
              type: array
              items:
                description: "Information about the hosts access the VMware VMFS datastore.
 <br/>
 <br/>
 This embedded object is passed to the create and modifyVmwareLuns method of hostGroup.
 <ul>
   <li>It is not allowed to specify host that is not in the host group in hostGroupHostModifys property.</li>
   <li>If the hlu property is not specified and this embedded object is used in addHostGroupVmwareLunParams parameter of hostGroup.modifyVmwareLuns, or hostGroupVmwareLunParams parameter of hostGroup.create:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the VMware VMFS datastore specified by storageResource property will be modified to be accessible by all hosts in the host group.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the VMware VMFS datastore will be modified to be accessible by these hosts.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the VMware VMFS datastore will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
   <li>If the hlu property is not specified and this embedded object is used in modifyHostGroupVmwareLunParams parameter of hostGroup.modifyVmwareLuns:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the VMware VMFS datastore specified by storageResource property will keep unchanged.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the host access to the VMware VMFS datastore will keep unchanged.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the VMware VMFS datastore will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
 </ul>"
                type: object
                properties:
                  storageResource:
                    description: "Reference to the VMware VMFS datastore to be added to the host group or the VMware VMFS datastore that the host access for it to be updated."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
                  hlu:
                    description: "An optional host LUN ID to be set to all hosts in the host group.
  If specified, then all hosts in the host group will grant production access for this VMware VMFS datastore with this host LUN ID, and the hostGroupHostModifys property will be ignored."
                    type: integer
                  hostGroupHostModifys:
                    description: "An optional list of embedded hostGroupHostModify object to customize host LUN ID for each host.
  It is not allowed to specify host that is not in the host group."
                    type: array
                    items:
                      description: "The mapping relationship between lun/VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupLunParam/hostGroupVmwareLunParam embedded type."
                      type: object
                      properties:
                        host:
                          description: "Reference to the host to grant production access to the LUN."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                        hlu:
                          description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN/VMware VMFS datastore, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
                          type: integer
            removeVmwareLuns:
              description: "VMware VMFS datastores to be removed from this host group. After removed the VMware VMFS datastores from host group, all hosts in this host group will have no production access to the removed VMware VMFS datastores. The VMware VMFS datastores are not deleted from the storage system when it is removed from host group."
              type: array
              items:
                description: "Information about storage resources in the storage system.
  <br/>
  <br/>
  A storage resource<b><i> </i></b>is a specific type of storage entity
  allocated in the storage system for a particular kind of host or application.
  The storage system provides the following types of storage resources:
  <ul>
  <li>LUNs</li>
  <li>Consistency groups</li>
  <li>File systems accessed via NFS and/or CIFS shares.</li>
  <li>VMware NFS datastores</li>
  <li>VMware VMFS datastores</li>
  <li>VVol (file)</li>
  <li>VVol (block)</li>
  </ul>
  All types of storage resource types can be divided into two major groups:
  <ul>
  <li>Block (or LUN based) storage resources: LUNs, consistency groups, VMware VMFS datastores, VVol (block).</li>
  <li>File system based storage resources: File systems, VMware NFS datastores, VVol (file).</li>
  </ul>
  In order to create a storage resource, there must be at least one pool
  configured on the system. For information about configuring pools, see the help
  topic for the pool. To provision file system based storage resource
  there must be at least one nasServer configured on the system."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the storage resource."
      tags:
      - hostGroup
      description: "Modify the VMware VMFS datastores in the host group."
      operationId: hostGroup_modifyVmwareLuns_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 10. ModifyVmwareLuns hostGroup by name
  /api/types/hostGroupLUN/instances:
    get:
      tags:
      - hostGroupLUN
      description: 'Collection query'
      operationId: hostGroupLUN_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/hostGroupLUN'
      summary: 1. Get all hostGroupLUN
  /api/instances/hostGroupLUN/{id}:
    get:
      tags:
      - hostGroupLUN
      description: 'Instance query'
      operationId: hostGroupLUN_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the hostGroupLUN instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostGroupLUN'
      summary: 2. Get hostGroupLUN by id
  /api/types/hostGroupVmwareLUN/instances:
    get:
      tags:
      - hostGroupVmwareLUN
      description: 'Collection query'
      operationId: hostGroupVmwareLUN_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/hostGroupVmwareLUN'
      summary: 1. Get all hostGroupVmwareLUN
  /api/instances/hostGroupVmwareLUN/{id}:
    get:
      tags:
      - hostGroupVmwareLUN
      description: 'Instance query'
      operationId: hostGroupVmwareLUN_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the hostGroupVmwareLUN instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostGroupVmwareLUN'
      summary: 2. Get hostGroupVmwareLUN by id
  /api/types/hostIPPort/instances:
    get:
      tags:
      - hostIPPort
      description: 'Collection query'
      operationId: hostIPPort_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/hostIPPort'
      summary: 1. Get all hostIPPort
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [host,address]
          properties:
            host:
              description: "Identifier of the associated host."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the host instance."
            address:
              description: "IP address, network name, or netgroup name of the port."
              type: string
            netmask:
              description: "Subnet mask for the IP address, if any."
              type: string
            v6PrefixLength:
              description: "Prefix length for the IP (IPv6) address, if any. Not applicable to IPv4."
              type: integer
            isIgnored:
              description: "Indicates whether the port should be ignored when storage access is granted to the host. Values are: <ul> <li>true - Ignore the port when granting storage access to the host.</li> <li>false - Include the port when granting storage access to the host.</li> </ul>"
              type: boolean
      tags:
      - hostIPPort
      description: "Create a host IP port."
      operationId: hostIPPort_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "New IP port instance, as defined by the hostIPPort resource type."
                    type: string
      summary: 4. Create hostIPPort
  /api/instances/hostIPPort/{id}:
    get:
      tags:
      - hostIPPort
      description: 'Instance query'
      operationId: hostIPPort_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the hostIPPort instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostIPPort'
      summary: 2. Get hostIPPort by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the hostIPPort instance."
        required: true
        type: string
      tags:
      - hostIPPort
      description: "Delete a host IP port."
      operationId: hostIPPort_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete hostIPPort by id
  /api/instances/hostIPPort/name:{name}:
    get:
      tags:
      - hostIPPort
      description: 'Instance query'
      operationId: hostIPPort_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Port name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostIPPort'
      summary: 3. Get hostIPPort by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Port name."
        required: true
        type: string
      tags:
      - hostIPPort
      description: "Delete a host IP port."
      operationId: hostIPPort_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete hostIPPort by name
  /api/instances/hostIPPort/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the hostIPPort instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            address:
              description: "IP address, network name, or netgroup name of the port."
              type: string
            netmask:
              description: "Subnet mask for the IP address, if any."
              type: string
            v6PrefixLength:
              description: "Prefix length for the IP (IPv6) address, if any. Not applicable to IPv4."
              type: integer
            isIgnored:
              description: "Indicates whether the port should be ignored when storage access is granted to the host. Values are: <ul> <li>true - Ignore the port when granting storage access to the host.</li> <li>false - Include the port when granting storage access to the host.</li> </ul>"
              type: boolean
      tags:
      - hostIPPort
      description: "Modify a host IP port."
      operationId: hostIPPort_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify hostIPPort by id
  /api/instances/hostIPPort/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Port name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            address:
              description: "IP address, network name, or netgroup name of the port."
              type: string
            netmask:
              description: "Subnet mask for the IP address, if any."
              type: string
            v6PrefixLength:
              description: "Prefix length for the IP (IPv6) address, if any. Not applicable to IPv4."
              type: integer
            isIgnored:
              description: "Indicates whether the port should be ignored when storage access is granted to the host. Values are: <ul> <li>true - Ignore the port when granting storage access to the host.</li> <li>false - Include the port when granting storage access to the host.</li> </ul>"
              type: boolean
      tags:
      - hostIPPort
      description: "Modify a host IP port."
      operationId: hostIPPort_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify hostIPPort by name
  /api/types/hostInitiator/instances:
    get:
      tags:
      - hostInitiator
      description: 'Collection query'
      operationId: hostInitiator_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/hostInitiator'
      summary: 1. Get all hostInitiator
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [host,initiatorType,initiatorWWNorIqn]
          properties:
            host:
              description: "Host to which to assign the host initiator, as defined by the host resource type."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the host instance."
            initiatorType:
              description: "Host initiator type. FC initiators can be created only if the FC protocol is supported on the system and the corresponding license is installed."
              $ref: '#/definitions/HostInitiatorTypeEnum'
            initiatorWWNorIqn:
              description: "One of the following: <ul> <li>For an iSCSI initiator, the iSCSi Qualified Name (IQN).</li> <li>For a FC initiator, the Worldwide Name (WWN).</li> </ul>"
              type: string
            chapUser:
              description: "(Applies to iSCSI initiators only.) CHAP user name. By default, this is the initiator's iSCSI Qualified Name (IQN)."
              type: string
            chapSecret:
              description: "(Applies to iSCSI initiators only.) CHAP secret to use to authenticate iSCSI sessions."
              type: string
            chapSecretType:
              description: "(Applies to iSCSI initiators only.) CHAP secret encoding type."
              $ref: '#/definitions/CHAPSecretTypeEnum'
            isIgnored:
              description: "Specifies whether to include the host initiator when storage access is granted to the host. Values are: <ul> <li>true - Include the host initiator when storage is granted to the associated host.</li> <li>false -Do not include the host initiator when storage is granted to the associated host.</li> </ul> By default, it is false."
              type: boolean
            initiatorSourceType:
              description: "Initiator source type. By default, it is Open_Native."
              $ref: '#/definitions/HostInitiatorSourceTypeEnum'
            failoverMode:
              description: "Initiator failover mode. By default, it is ALUA_Mode."
              $ref: '#/definitions/HostInitiatorFailoverModeEnum'
            isLunZEnabled:
              description: "Specifies if LunZ is enabled. Values are: <ul> <li>true - LunZ is enabled.</li> <li>false -LunZ is not enabled.</li> </ul> By default, it is true."
              type: boolean
            isArraySerialNumber:
              description: "Specifies if the Unit Serial Number is Array or LUN. Values are: <ul> <li>Array - The Unit Serial Number is Array.</li> <li>LUN - The Unit Serial Number is LUN.</li> </ul> By default, it is Array."
              type: boolean
      tags:
      - hostInitiator
      description: "Create a host initiator."
      operationId: hostInitiator_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier for the new hostInitiator instance."
                    type: string
      summary: 4. Create hostInitiator
  /api/instances/hostInitiator/{id}:
    get:
      tags:
      - hostInitiator
      description: 'Instance query'
      operationId: hostInitiator_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the hostInitiator instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostInitiator'
      summary: 2. Get hostInitiator by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the hostInitiator instance."
        required: true
        type: string
      tags:
      - hostInitiator
      description: "Delete a host initiator and all of its paths from the host. This removes
  host access from the initiator to the system. To reuse the initiator, you must use
  modify method to associate it a host."
      operationId: hostInitiator_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete hostInitiator by id
  /api/instances/hostInitiator/name:{name}:
    get:
      tags:
      - hostInitiator
      description: 'Instance query'
      operationId: hostInitiator_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Alias of the host to which the host initiator belongs."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostInitiator'
      summary: 3. Get hostInitiator by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Alias of the host to which the host initiator belongs."
        required: true
        type: string
      tags:
      - hostInitiator
      description: "Delete a host initiator and all of its paths from the host. This removes
  host access from the initiator to the system. To reuse the initiator, you must use
  modify method to associate it a host."
      operationId: hostInitiator_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete hostInitiator by name
  /api/instances/hostInitiator/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the hostInitiator instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            isIgnored:
              description: "Indicates whether the initiator should be included when storage access is granted to the host. Values are: <ul> <li>true - Include the initiator when storage is granted to the associated host.</li> <li>false -Do not include the initiator when storage is granted to the associated host.</li> </ul>"
              type: boolean
            chapUser:
              description: "(Applies to SCSI initiators only.) CHAP user name. By default, this is the initiator's iSCSI Qualified Name (IQN)."
              type: string
            chapSecret:
              description: "(Applies to iSCSI initiators only.) Chap secret used to authenticate iSCSI sessions."
              type: string
            chapSecretType:
              description: "(Applies to iSCSI initiators only.) Chap secret encoding type."
              $ref: '#/definitions/CHAPSecretTypeEnum'
            initiatorSourceType:
              description: "Initiator source type."
              $ref: '#/definitions/HostInitiatorSourceTypeEnum'
            failoverMode:
              description: "Initiator failover mode."
              $ref: '#/definitions/HostInitiatorFailoverModeEnum'
            isLunZEnabled:
              description: "Specifies if LunZ is enabled. Values are: <ul> <li>true - LunZ is enabled.</li> <li>false -LunZ is not enabled.</li> </ul>"
              type: boolean
            isArraySerialNumber:
              description: "Specifies if the Unit Serial Number is Array or LUN. Values are: <ul> <li>Array - The Unit Serial Number is Array.</li> <li>LUN - The Unit Serial Number is LUN.</li> </ul>"
              type: boolean
            host:
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the host instance."
            addToWhiteList:
              type: boolean
      tags:
      - hostInitiator
      description: "Modify host initiator settings.
  Once an initiator is associated to a host, access to storage devices can be granted to 
  that host through the paths defined on the initiator."
      operationId: hostInitiator_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify hostInitiator by id
  /api/instances/hostInitiator/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Alias of the host to which the host initiator belongs."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            isIgnored:
              description: "Indicates whether the initiator should be included when storage access is granted to the host. Values are: <ul> <li>true - Include the initiator when storage is granted to the associated host.</li> <li>false -Do not include the initiator when storage is granted to the associated host.</li> </ul>"
              type: boolean
            chapUser:
              description: "(Applies to SCSI initiators only.) CHAP user name. By default, this is the initiator's iSCSI Qualified Name (IQN)."
              type: string
            chapSecret:
              description: "(Applies to iSCSI initiators only.) Chap secret used to authenticate iSCSI sessions."
              type: string
            chapSecretType:
              description: "(Applies to iSCSI initiators only.) Chap secret encoding type."
              $ref: '#/definitions/CHAPSecretTypeEnum'
            initiatorSourceType:
              description: "Initiator source type."
              $ref: '#/definitions/HostInitiatorSourceTypeEnum'
            failoverMode:
              description: "Initiator failover mode."
              $ref: '#/definitions/HostInitiatorFailoverModeEnum'
            isLunZEnabled:
              description: "Specifies if LunZ is enabled. Values are: <ul> <li>true - LunZ is enabled.</li> <li>false -LunZ is not enabled.</li> </ul>"
              type: boolean
            isArraySerialNumber:
              description: "Specifies if the Unit Serial Number is Array or LUN. Values are: <ul> <li>Array - The Unit Serial Number is Array.</li> <li>LUN - The Unit Serial Number is LUN.</li> </ul>"
              type: boolean
            host:
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the host instance."
            addToWhiteList:
              type: boolean
      tags:
      - hostInitiator
      description: "Modify host initiator settings.
  Once an initiator is associated to a host, access to storage devices can be granted to 
  that host through the paths defined on the initiator."
      operationId: hostInitiator_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify hostInitiator by name
  /api/types/hostInitiatorPath/instances:
    get:
      tags:
      - hostInitiatorPath
      description: 'Collection query'
      operationId: hostInitiatorPath_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/hostInitiatorPath'
      summary: 1. Get all hostInitiatorPath
  /api/instances/hostInitiatorPath/{id}:
    get:
      tags:
      - hostInitiatorPath
      description: 'Instance query'
      operationId: hostInitiatorPath_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the hostInitiatorPath instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostInitiatorPath'
      summary: 2. Get hostInitiatorPath by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the hostInitiatorPath instance."
        required: true
        type: string
      tags:
      - hostInitiatorPath
      description: "Delete a host initiator path. 
  This interface works for stale initiator path only. Normally,
  a host initiator path will disappear automatically if it is logged out from the host 
  or cable disconnected. But in some cases such as an FC host which is auto created,
  the initiator path may stay in logged out state when cable disconnected."
      operationId: hostInitiatorPath_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Delete hostInitiatorPath by id
  /api/types/hostLUN/instances:
    get:
      tags:
      - hostLUN
      description: 'Collection query'
      operationId: hostLUN_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/hostLUN'
      summary: 1. Get all hostLUN
  /api/instances/hostLUN/{id}:
    get:
      tags:
      - hostLUN
      description: 'Instance query'
      operationId: hostLUN_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the hostLUN instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostLUN'
      summary: 2. Get hostLUN by id
  /api/types/hostVVolDatastore/instances:
    get:
      tags:
      - hostVVolDatastore
      description: 'Collection query'
      operationId: hostVVolDatastore_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/hostVVolDatastore'
      summary: 1. Get all hostVVolDatastore
  /api/instances/hostVVolDatastore/{id}:
    get:
      tags:
      - hostVVolDatastore
      description: 'Instance query'
      operationId: hostVVolDatastore_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the hostVVolDatastore instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/hostVVolDatastore'
      summary: 2. Get hostVVolDatastore by id
  /api/types/importSession/instances:
    get:
      tags:
      - importSession
      description: 'Collection query'
      operationId: importSession_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/importSession'
      summary: 01. Get all importSession
  /api/instances/importSession/{id}:
    get:
      tags:
      - importSession
      description: 'Instance query'
      operationId: importSession_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the importSession instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/importSession'
      summary: 02. Get importSession by id
  /api/instances/importSession/name:{name}:
    get:
      tags:
      - importSession
      description: 'Instance query'
      operationId: importSession_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "User-specified import session name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/importSession'
      summary: 03. Get importSession by name
  /api/types/importSession/action/createBlockImport:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [remoteSystem,srcResource,dstResourceConfig]
          properties:
            remoteSystem:
              description: "Source system from which the import is being configured."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the remoteSystem instance."
            srcResource:
              description: "Unique identifier of the source resource."
              type: object
              properties:
                resId:
                  description: "Identifier of the resource."
                  type: string
                name:
                  description: "Name of the resource."
                  type: string
                system:
                  description: "System on which the resource exists."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the remoteSystem instance."
            dstResourceConfig:
              description: "This the user chosen config for destination resource provisioning."
              $ref: '#/definitions/resourceConfig'
            dstResourceElementConfigs:
              description: "This is the user chosen config for each of the member element of the destination resource."
              type: array
              items:
                description: "Embedded type to describe a resource configuration."
                $ref: '#/definitions/resourceConfig'
            importAsVMwareDatastore:
              description: "Specify if the target resource should be VMware Datastore. Default is 'false' and not application to 
                                 consistency groups, only standalone luns"
              type: boolean
            throttle:
              description: "Throttle for session. 'True' (Default): Session throttled. 'False': Session not throttled."
              type: boolean
            hosts:
              description: "List of hosts that will be granted access to import session destination resources."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            cutoverThreshold:
              description: "Cutover threshold. Default value: 5"
              type: integer
            name:
              description: "Name of the import session."
              type: string
      tags:
      - importSession
      description: "Create a block import session."
      operationId: importSession_createBlockImport
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the import session."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the importSession instance."
      summary: 04. CreateBlockImport importSession
  /api/types/importSession/action/createVDMImport:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [remoteSystem,srcResource,targetResPool,defaultProductionPort]
          properties:
            remoteSystem:
              description: "Source system from which the import is being configured."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the remoteSystem instance."
            srcResource:
              description: "Source resource for which the import is being configured."
              type: object
              properties:
                resId:
                  description: "Identifier of the resource."
                  type: string
                name:
                  description: "Name of the resource."
                  type: string
                system:
                  description: "System on which the resource exists."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the remoteSystem instance."
            targetResPool:
              description: "Target pool on which the target resources will be created."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the pool instance."
            targetImportIf:
              description: "Target replication interface for import data transfer between source system and target system."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the replicationInterface instance."
            defaultProductionPort:
              description: "Target port on which the target client interfaces will be created by default."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the ipPort instance."
            fsImportParams:
              description: "List of filesystem import parameters."
              type: array
              items:
                description: "Settings to import a file system."
                type: object
                properties:
                  sourceFilesystemId:
                    description: "Source file system id."
                    type: string
                  targetPool:
                    description: "Target pool."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the pool instance."
                  importAsVMwareDatastore:
                    description: "Indicates whether to import this file system as VMware datastore.
  Values are:
  <ul>
  <li>true - Import this file system as VMware datastore, which results in vmwarefs storage resource type.</li>
  <li>false - Do not import this file system as VMware datastore, which results in filesystem storage resource type.</li>
  </ul>"
                    type: boolean
                  isDataReductionEnabled:
                    description: "Indicates whether to enable data reduction on the target file system. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                    type: boolean
                  isAdvancedDedupEnabled:
                    description: "Indicates whether advanced dedup should be enabled on the target file system.
  Values are:
  <ul>
  <li>true - Enable advanced dedup on the target file system.</li>
  <li>false - Do not enable advanced dedup on the target file system.</li>
  </ul>"
                    type: boolean
                  targetAccessPolicy:
                    description: "Target access policy."
                    $ref: '#/definitions/AccessPolicyEnum'
            productionIfPortPairs:
              description: "List of source system interface and target system port pairs."
              type: array
              items:
                description: "List of source system client interface and target system port pairs used to create a VDM import."
                type: object
                properties:
                  sourceInterfaceName:
                    description: "Source interface name of the interface port pair."
                    type: string
                  targetPort:
                    description: "Target port of the interface port pair."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the ipPort instance."
                  targetVlanId:
                    description: "Target VLAN ID of the interface port pair."
                    type: integer
            name:
              description: "Name of the import Session."
              type: string
            cifsUsername:
              description: "User name for authentication to CIFS server on the source VDM."
              type: string
            cifsPassword:
              description: "Password for authentication to CIFS server on the source VDM."
              type: string
            unixDirectoryService:
              description: "Target unix directory service."
              $ref: '#/definitions/ImportUnixDirectoryServiceEnum'
            dhsmUsername:
              description: "User name for authentication to DHSM server on the source Data Mover."
              type: string
            dhsmPassword:
              description: "Password for authentication to DHSM server on the source Data Mover."
              type: string
            skipServerParamCheck:
              description: "Whether to skip server parameters check. Import session creation compares server parameters between VNX and Unity. When import session creation fails with a 'Server parameter error', this option allows the creation to proceed. The default value is false. Values are:  <ul> <li>true - Skip server parameter check.</li> <li>false - Do not skip server parameter check.</li> </ul>"
              type: boolean
      tags:
      - importSession
      description: "Create a NAS server import."
      operationId: importSession_createVDMImport
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the import Session."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the importSession instance."
                  errorMsgParams:
                    description: "Error message parameter value if returned error message needs parameter filled in it."
                    type: array
                    items:
                      type: string
      summary: 05. CreateVDMImport importSession
  /api/instances/importSession/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the importSession instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            throttle:
              description: "Throttle for session. 'True': Session throttled. 'False': Session not throttled."
              type: boolean
            name:
              description: "Name of the import session."
              type: string
            cutoverThreshold:
              description: "Cutover threshold"
              type: integer
            srcLocalCifsAdminUsername:
              description: "User name for authentication to CIFS server on the source VDM."
              type: string
            srcLocalCifsAdminPasswd:
              description: "Password for authentication to CIFS server on the source VDM."
              type: string
      tags:
      - importSession
      description: "Modify an import session."
      operationId: importSession_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 06. Modify importSession by id
  /api/instances/importSession/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified import session name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            throttle:
              description: "Throttle for session. 'True': Session throttled. 'False': Session not throttled."
              type: boolean
            name:
              description: "Name of the import session."
              type: string
            cutoverThreshold:
              description: "Cutover threshold"
              type: integer
            srcLocalCifsAdminUsername:
              description: "User name for authentication to CIFS server on the source VDM."
              type: string
            srcLocalCifsAdminPasswd:
              description: "Password for authentication to CIFS server on the source VDM."
              type: string
      tags:
      - importSession
      description: "Modify an import session."
      operationId: importSession_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 07. Modify importSession by name
  /api/instances/importSession/{id}/action/pause:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the importSession instance."
        required: true
        type: string
      tags:
      - importSession
      description: "Pause an import session."
      operationId: importSession_pause
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 08. Pause importSession by id
  /api/instances/importSession/name:{name}/action/pause:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified import session name."
        required: true
        type: string
      tags:
      - importSession
      description: "Pause an import session."
      operationId: importSession_pause_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 09. Pause importSession by name
  /api/instances/importSession/{id}/action/resume:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the importSession instance."
        required: true
        type: string
      tags:
      - importSession
      description: "Resume an import session."
      operationId: importSession_resume
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 10. Resume importSession by id
  /api/instances/importSession/name:{name}/action/resume:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified import session name."
        required: true
        type: string
      tags:
      - importSession
      description: "Resume an import session."
      operationId: importSession_resume_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 11. Resume importSession by name
  /api/instances/importSession/{id}/action/cutover:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the importSession instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            cifsServerInfo:
              description: "New CIFS server object to be created at the source VDM."
              $ref: '#/definitions/cifsServerInfo'
            domainUsername:
              description: "Active Directory domain user name."
              type: string
            domainPassword:
              description: "Active Directory domain password."
              type: string
            organizationalUnit:
              description: "Active Directory OU tree. If there are more than 1 OU,then they have to be given as ou=firstOU:ou=secondOU:ou=yythirdOU and so on."
              type: string
      tags:
      - importSession
      description: "Cutover an import session. For block import this switches the production over
  as well as commit the session. For file import this just switches the production
  over to destination site."
      operationId: importSession_cutover
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 12. Cutover importSession by id
  /api/instances/importSession/name:{name}/action/cutover:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified import session name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            cifsServerInfo:
              description: "New CIFS server object to be created at the source VDM."
              $ref: '#/definitions/cifsServerInfo'
            domainUsername:
              description: "Active Directory domain user name."
              type: string
            domainPassword:
              description: "Active Directory domain password."
              type: string
            organizationalUnit:
              description: "Active Directory OU tree. If there are more than 1 OU,then they have to be given as ou=firstOU:ou=secondOU:ou=yythirdOU and so on."
              type: string
      tags:
      - importSession
      description: "Cutover an import session. For block import this switches the production over
  as well as commit the session. For file import this just switches the production
  over to destination site."
      operationId: importSession_cutover_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 13. Cutover importSession by name
  /api/instances/importSession/{id}/action/commit:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the importSession instance."
        required: true
        type: string
      tags:
      - importSession
      description: "Commit an import session."
      operationId: importSession_commit
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 14. Commit importSession by id
  /api/instances/importSession/name:{name}/action/commit:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified import session name."
        required: true
        type: string
      tags:
      - importSession
      description: "Commit an import session."
      operationId: importSession_commit_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 15. Commit importSession by name
  /api/instances/importSession/{id}/action/cancel:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the importSession instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            domainUsername:
              description: "Active Directory domain user name."
              type: string
            domainPassword:
              description: "Active Directory domain password."
              type: string
            organizationalUnit:
              description: "Active Directory OU tree. If there are more than 1 OU,then they have to be given as ou=firstOU:ou=secondOU:ou=yythirdOU and so on."
              type: string
      tags:
      - importSession
      description: "Cancel an import session."
      operationId: importSession_cancel
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 16. Cancel importSession by id
  /api/instances/importSession/name:{name}/action/cancel:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified import session name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            domainUsername:
              description: "Active Directory domain user name."
              type: string
            domainPassword:
              description: "Active Directory domain password."
              type: string
            organizationalUnit:
              description: "Active Directory OU tree. If there are more than 1 OU,then they have to be given as ou=firstOU:ou=secondOU:ou=yythirdOU and so on."
              type: string
      tags:
      - importSession
      description: "Cancel an import session."
      operationId: importSession_cancel_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 17. Cancel importSession by name
  /api/types/installedSoftwareVersion/instances:
    get:
      tags:
      - installedSoftwareVersion
      description: 'Collection query'
      operationId: installedSoftwareVersion_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/installedSoftwareVersion'
      summary: 1. Get all installedSoftwareVersion
  /api/instances/installedSoftwareVersion/{id}:
    get:
      tags:
      - installedSoftwareVersion
      description: 'Instance query'
      operationId: installedSoftwareVersion_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the installedSoftwareVersion instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/installedSoftwareVersion'
      summary: 2. Get installedSoftwareVersion by id
  /api/types/ioLimitPolicy/instances:
    get:
      tags:
      - ioLimitPolicy
      description: 'Collection query'
      operationId: ioLimitPolicy_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/ioLimitPolicy'
      summary: 1. Get all ioLimitPolicy
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name,ioLimitRules]
          properties:
            name:
              description: "I/O limit policy name."
              type: string
            description:
              description: "I/O limit policy description."
              type: string
            isShared:
              description: "Indicates whether the I/O limits defined in the I/O limit policy are shared among all assigned storage resources. Default to false"
              type: boolean
            type:
              description: "Indicates whether the I/O limit policy is absolute or density-based. Default to Absolute"
              $ref: '#/definitions/IOLimitPolicyTypeEnum'
            ioLimitRules:
              description: "I/O limit rules associated with the I/O limit policy, as defined by the ioLimitRuleSetting resource type. Only one ioLimitRule is supported at this time per policy."
              type: array
              items:
                description: "Set of Quality of Service (QoS) rules included in the Qos policy."
                $ref: '#/definitions/ioLimitRuleSetting'
            luns:
              description: "LUNs to which the I/O limit policy applies, as defined by the lun resource type."
              type: array
              items:
                description: "A LUN (block storage) type storage resource,
  which may be a LUN in a consistency group, 
  a standalone LUN, or a VMWare VMFS LUN.
  Management of LUNs is performed via the storageResource object."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the LUN."
            snaps:
              description: "Snaps to which the I/O limit policy applies, as defined by the snap resource type."
              type: array
              items:
                description: "Information about storage resource snapshots in the storage system."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the snap instance."
      tags:
      - ioLimitPolicy
      description: "Create a I/O limit policy."
      operationId: ioLimitPolicy_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new ioLimitPolicy instance."
                    type: string
      summary: 4. Create ioLimitPolicy
  /api/instances/ioLimitPolicy/{id}:
    get:
      tags:
      - ioLimitPolicy
      description: 'Instance query'
      operationId: ioLimitPolicy_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the ioLimitPolicy instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ioLimitPolicy'
      summary: 2. Get ioLimitPolicy by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the ioLimitPolicy instance."
        required: true
        type: string
      tags:
      - ioLimitPolicy
      description: "Delete a I/O limit policy. This will also delete the rules associated with the policy."
      operationId: ioLimitPolicy_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete ioLimitPolicy by id
  /api/instances/ioLimitPolicy/name:{name}:
    get:
      tags:
      - ioLimitPolicy
      description: 'Instance query'
      operationId: ioLimitPolicy_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "I/O limit policy name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ioLimitPolicy'
      summary: 3. Get ioLimitPolicy by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "I/O limit policy name."
        required: true
        type: string
      tags:
      - ioLimitPolicy
      description: "Delete a I/O limit policy. This will also delete the rules associated with the policy."
      operationId: ioLimitPolicy_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete ioLimitPolicy by name
  /api/instances/ioLimitPolicy/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the ioLimitPolicy instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "I/O limit policy name."
              type: string
            description:
              description: "I/O limit policy description."
              type: string
            type:
              description: "Indicates whether the I/O limit policy is absolute or density-based."
              $ref: '#/definitions/IOLimitPolicyTypeEnum'
            isPaused:
              description: "Indicates whether the I/O limit policy is paused."
              type: boolean
            ioLimitRulesToModify:
              type: array
              items:
                description: "Set of Quality of Service (QoS) rules included in the Qos policy."
                $ref: '#/definitions/ioLimitRuleSetting'
      tags:
      - ioLimitPolicy
      description: "Modify a I/O limit policy."
      operationId: ioLimitPolicy_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify ioLimitPolicy by id
  /api/instances/ioLimitPolicy/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "I/O limit policy name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "I/O limit policy name."
              type: string
            description:
              description: "I/O limit policy description."
              type: string
            type:
              description: "Indicates whether the I/O limit policy is absolute or density-based."
              $ref: '#/definitions/IOLimitPolicyTypeEnum'
            isPaused:
              description: "Indicates whether the I/O limit policy is paused."
              type: boolean
            ioLimitRulesToModify:
              type: array
              items:
                description: "Set of Quality of Service (QoS) rules included in the Qos policy."
                $ref: '#/definitions/ioLimitRuleSetting'
      tags:
      - ioLimitPolicy
      description: "Modify a I/O limit policy."
      operationId: ioLimitPolicy_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify ioLimitPolicy by name
  /api/types/ioLimitRule/instances:
    get:
      tags:
      - ioLimitRule
      description: 'Collection query'
      operationId: ioLimitRule_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/ioLimitRule'
      summary: 1. Get all ioLimitRule
  /api/instances/ioLimitRule/{id}:
    get:
      tags:
      - ioLimitRule
      description: 'Instance query'
      operationId: ioLimitRule_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the ioLimitRule instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ioLimitRule'
      summary: 2. Get ioLimitRule by id
  /api/instances/ioLimitRule/name:{name}:
    get:
      tags:
      - ioLimitRule
      description: 'Instance query'
      operationId: ioLimitRule_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "I/O limit rule name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ioLimitRule'
      summary: 3. Get ioLimitRule by name
  /api/instances/ioLimitRule/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the ioLimitRule instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "I/O limit rule name."
              type: string
            description:
              description: "I/O limit rule description."
              type: string
            maxIOPS:
              description: "Absolute IOPS limit."
              type: integer
            maxKBPS:
              description: "Absolute KB/s limit."
              type: integer
      tags:
      - ioLimitRule
      description: "Modify an I/O limit rule."
      operationId: ioLimitRule_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify ioLimitRule by id
  /api/instances/ioLimitRule/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "I/O limit rule name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "I/O limit rule name."
              type: string
            description:
              description: "I/O limit rule description."
              type: string
            maxIOPS:
              description: "Absolute IOPS limit."
              type: integer
            maxKBPS:
              description: "Absolute KB/s limit."
              type: integer
      tags:
      - ioLimitRule
      description: "Modify an I/O limit rule."
      operationId: ioLimitRule_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify ioLimitRule by name
  /api/types/ioLimitSetting/instances:
    get:
      tags:
      - ioLimitSetting
      description: 'Collection query'
      operationId: ioLimitSetting_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/ioLimitSetting'
      summary: 1. Get all ioLimitSetting
  /api/instances/ioLimitSetting/{id}:
    get:
      tags:
      - ioLimitSetting
      description: 'Instance query'
      operationId: ioLimitSetting_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the ioLimitSetting instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ioLimitSetting'
      summary: 2. Get ioLimitSetting by id
  /api/instances/ioLimitSetting/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the ioLimitSetting instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [isPaused]
          properties:
            isPaused:
              description: "Indicates whether I/O limits are paused for all storage resources. Values are:
  <ul>
  <li>True - I/O limits paused for all storage resources and attached snapshots.</li>
  <li>False - I/O limits resumed for all storage resources and attached snapshots.</li>
  </ul>"
              type: boolean
      tags:
      - ioLimitSetting
      description: "Modify I/O limit settings"
      operationId: ioLimitSetting_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify ioLimitSetting by id
  /api/types/ioModule/instances:
    get:
      tags:
      - ioModule
      description: 'Collection query'
      operationId: ioModule_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/ioModule'
      summary: 1. Get all ioModule
  /api/instances/ioModule/{id}:
    get:
      tags:
      - ioModule
      description: 'Instance query'
      operationId: ioModule_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the I/O module instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ioModule'
      summary: 2. Get ioModule by id
  /api/instances/ioModule/name:{name}:
    get:
      tags:
      - ioModule
      description: 'Instance query'
      operationId: ioModule_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "I/O module name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ioModule'
      summary: 3. Get ioModule by name
  /api/types/ioModule/action/commitIOPorts:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      tags:
      - ioModule
      description: "Commit IO Ports"
      operationId: ioModule_commitIOPorts
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. CommitIOPorts ioModule
  /api/types/ipInterface/instances:
    get:
      tags:
      - ipInterface
      description: 'Collection query'
      operationId: ipInterface_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/ipInterface'
      summary: 1. Get all ipInterface
  /api/instances/ipInterface/{id}:
    get:
      tags:
      - ipInterface
      description: 'Instance query'
      operationId: ipInterface_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the ipInterface instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ipInterface'
      summary: 2. Get ipInterface by id
  /api/instances/ipInterface/{id}/action/ping:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the ipInterface instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [destination]
          properties:
            destination:
              description: "IP address or Domain Name of the destination."
              type: string
      tags:
      - ipInterface
      description: "Ping Destination from IP Interface."
      operationId: ipInterface_ping
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  result:
                    description: "Result of ping command."
                    $ref: '#/definitions/pingResult'
      summary: 3. Ping ipInterface by id
  /api/instances/ipInterface/{id}/action/traceroute:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the ipInterface instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [destination]
          properties:
            destination:
              description: "IP address or Domain Name of the destination."
              type: string
      tags:
      - ipInterface
      description: "Traceroute Destination from IP Interface."
      operationId: ipInterface_traceroute
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  result:
                    description: "Result of traceroute command."
                    type: array
                    items:
                      description: "Information about traceroute command result."
                      $ref: '#/definitions/tracerouteResult'
      summary: 4. Traceroute ipInterface by id
  /api/types/ipPort/instances:
    get:
      tags:
      - ipPort
      description: 'Collection query'
      operationId: ipPort_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/ipPort'
      summary: 1. Get all ipPort
  /api/instances/ipPort/{id}:
    get:
      tags:
      - ipPort
      description: 'Instance query'
      operationId: ipPort_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the ipPort instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ipPort'
      summary: 2. Get ipPort by id
  /api/instances/ipPort/name:{name}:
    get:
      tags:
      - ipPort
      description: 'Instance query'
      operationId: ipPort_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "IP Port name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ipPort'
      summary: 3. Get ipPort by name
  /api/types/ipPort/action/recommendForInterface:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [storageProcessor]
          properties:
            storageProcessor:
              description: "Storage processor for which to recommend ipPorts."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the storageProcessor instance."
            usage:
              description: "ISCSI for iscsiPortals, File for fileIntefaces and replicationInterfaces. If not specified, only ipPorts that represent the non-aggregated Ethernet ports are returned."
              $ref: '#/definitions/IPRecommendUsageEnum'
      tags:
      - ipPort
      description: "Recommend ipPorts on the specified SP to create the network interfaces on.
  <p/>
  This is a static method which applies to the ipPort
  resource type instead of specific ipPort resource instances.
  <p/>
  The most suitable ipPort is placed on top of the returned list.
  <br/>
  It is chosen according to its I/O Module number, link status, aggregation state, and the amount of interfaces on it.
  <br/>
  The rest of ports is sorted sequentially by I/O Module number, aggregation state and name."
      operationId: ipPort_recommendForInterface
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  recommendedPorts:
                    description: "List of recommended ports."
                    type: array
                    items:
                      description: "IP Port information.
  <br/>
  ipPort is a base class for linkAggregation, ethernetPort and fsnPort."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the ipPort instance."
      summary: 4. RecommendForInterface ipPort
  /api/types/iscsiNode/instances:
    get:
      tags:
      - iscsiNode
      description: 'Collection query'
      operationId: iscsiNode_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/iscsiNode'
      summary: 1. Get all iscsiNode
  /api/instances/iscsiNode/{id}:
    get:
      tags:
      - iscsiNode
      description: 'Instance query'
      operationId: iscsiNode_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the iscsiNode instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/iscsiNode'
      summary: 2. Get iscsiNode by id
  /api/instances/iscsiNode/name:{name}:
    get:
      tags:
      - iscsiNode
      description: 'Instance query'
      operationId: iscsiNode_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "iSCSI node name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/iscsiNode'
      summary: 3. Get iscsiNode by name
  /api/instances/iscsiNode/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the iscsiNode instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            alias:
              description: "Descriptive name of the iSCSI node. This name does not have to be unique."
              type: string
      tags:
      - iscsiNode
      description: "Modify iSCSI node settings."
      operationId: iscsiNode_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify iscsiNode by id
  /api/instances/iscsiNode/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "iSCSI node name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            alias:
              description: "Descriptive name of the iSCSI node. This name does not have to be unique."
              type: string
      tags:
      - iscsiNode
      description: "Modify iSCSI node settings."
      operationId: iscsiNode_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify iscsiNode by name
  /api/types/iscsiPortal/instances:
    get:
      tags:
      - iscsiPortal
      description: 'Collection query'
      operationId: iscsiPortal_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/iscsiPortal'
      summary: 1. Get all iscsiPortal
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [ethernetPort,ipAddress]
          properties:
            ethernetPort:
              description: "Ethernet port used by the iSCSI portal."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the Ethernet port instance."
            ipAddress:
              description: "IP address of the iSCSI portal."
              type: string
            netmask:
              description: "IPv4 netmask for the network interface, if it uses an IPv4 address."
              type: string
            v6PrefixLength:
              description: "IPv6 prefix length for the iSCSI portal, if it uses an IPv6 address."
              type: integer
            vlanId:
              description: "Ethernet virtual LAN identifier used for tagging iSCSI portal outgoing packets and for filtering iSCSI portal incoming packets. <p/> Values are 1 - 4094."
              type: integer
            gateway:
              description: "Gateway of the iSCSI portal."
              type: string
      tags:
      - iscsiPortal
      description: "Create an iSCSI network portal."
      operationId: iscsiPortal_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "New iscsiPortal instance."
                    type: string
      summary: 3. Create iscsiPortal
  /api/instances/iscsiPortal/{id}:
    get:
      tags:
      - iscsiPortal
      description: 'Instance query'
      operationId: iscsiPortal_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the iscsiPortal instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/iscsiPortal'
      summary: 2. Get iscsiPortal by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the iscsiPortal instance."
        required: true
        type: string
      tags:
      - iscsiPortal
      description: "Delete an iSCSI network portal.
  <p/>
  iSCSI network portal can not be deleted if there are active iSCSI sessions over it."
      operationId: iscsiPortal_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete iscsiPortal by id
  /api/instances/iscsiPortal/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the iscsiPortal instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            ipAddress:
              description: "IP address of the iSCSI portal."
              type: string
            netmask:
              description: "IPv4 netmask for the network interface, if it uses an IPv4 address."
              type: string
            v6PrefixLength:
              description: "IPv6 prefix length for the interface, if it uses an IPv6 address."
              type: integer
            vlanId:
              description: "Ethernet virtual LAN identifier used for tagging iSCSI portal outgoing packets and for filtering iSCSI portal incoming packets. <p/> Values are 1 - 4094. Empty string or null to unset."
              type: integer
            gateway:
              description: "Gateway of the iSCSI portal. Empty string to unset."
              type: string
      tags:
      - iscsiPortal
      description: "Modify an iSCSI network portal."
      operationId: iscsiPortal_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify iscsiPortal by id
  /api/types/iscsiSettings/instances:
    get:
      tags:
      - iscsiSettings
      description: 'Collection query'
      operationId: iscsiSettings_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/iscsiSettings'
      summary: 1. Get all iscsiSettings
  /api/instances/iscsiSettings/{id}:
    get:
      tags:
      - iscsiSettings
      description: 'Instance query'
      operationId: iscsiSettings_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique instance identifier.
  This is a singleton resource, so the id is always 0."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/iscsiSettings'
      summary: 2. Get iscsiSettings by id
  /api/instances/iscsiSettings/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique instance identifier.
  This is a singleton resource, so the id is always 0."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            reverseCHAPUsername:
              description: "Reverse CHAP user name. Put empty string to disable reverse CHAP."
              type: string
            reverseCHAPSecret:
              description: "Reverse CHAP secret. Ignored if reverseCHAPUsername is empty."
              type: string
            reverseCHAPSecretType:
              description: "Reverse CHAP secret type."
              $ref: '#/definitions/CHAPSecretTypeEnum'
            isForwardCHAPRequired:
              description: "True if CHAP auth is required for initiators."
              type: boolean
            forwardGlobalCHAPUsername:
              description: "Global CHAP user name. Put empty string to disable global CHAP."
              type: string
            forwardGlobalCHAPSecret:
              description: "Global CHAP secret. Ignored if forwardGlobalCHAPUsername is empty."
              type: string
            forwardGlobalCHAPSecretType:
              description: "Global CHAP secret type."
              $ref: '#/definitions/CHAPSecretTypeEnum'
            iSNSServer:
              description: "iSNS server IP address. Empty string to unset."
              type: string
      tags:
      - iscsiSettings
      description: "Modify ISCSI settings.
  <p/>
  For ASCII secret type, the secret must be 12 to 16 characters long and accepts any ASCII character.
  <br/>
  For Binary secret type, the secret is 24 to 32 characters long and accepts all hexadecimal characters.
  <br/>
  Username must be alphanumeric."
      operationId: iscsiSettings_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify iscsiSettings by id
  /api/types/job/instances:
    get:
      tags:
      - job
      description: 'Collection query'
      operationId: job_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/job'
      summary: 1. Get all job
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [description,tasks]
          properties:
            description:
              description: "Description of the created job."
              type: string
            tasks:
              description: "A list of jobTaskRequest instances, each of which maps to a primitive REST API POST request action."
              type: array
              items:
                description: "The batch job consists of a group of primitive REST API POST requests. Each is considered to be a task of the job.
  This object is to represent such primitive request.
  <br/>
  <br/>
  For information about jobs, see the Help topic for the job resource type."
                type: object
                properties:
                  name:
                    description: "Name of the task. Should be unique within a batch request job."
                    type: string
                  description:
                    description: "Description of the task. UTF-8 character message is acceptable."
                    type: string
                  submitTime:
                    description: "Date and time when the jobTask was submitted."
                    type: string
                    format: date-time
                  startTime:
                    description: "Date and time when the jobTask started."
                    type: string
                    format: date-time
                  object:
                    description: "Object name of corresponding primitive REST API request."
                    type: string
                  action:
                    description: "Name of associated request action."
                    type: string
                  parametersIn:
                    description: "Request body of associated request action. This is nearly the same as a primitive REST API POST request body except that
 it could use '@<step name>.<out parameter name>' notation, which implies using the output value of a previous
 step as input value."
                    $ref: '#/definitions/baseRequest'
                  dependencies:
                    description: "jobTaskRequest name list. Current REST request will not be posted until the requests in the list are finished."
                    type: string
            isSerialized:
              description: "Indicate that serializes the tasks in specified order."
              type: boolean
            majorStepIndex:
              description: "Index of a step which is the major task force of a batch job. Affected resource of this step will be promoted to the batch job instance. Index starts from 1."
              type: integer
      tags:
      - job
      description: "Create a job that consists of one or more tasks, each maps to a primitive REST API POST request action.
 The task will map to jobTaskRequest which contains all needed elements for a single REST API action.
  
 This job creation action serves as a batch request that supports grouping, executing and tracking one or more
 REST API actions in a single request."
      operationId: job_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Create job
  /api/instances/job/{id}:
    get:
      tags:
      - job
      description: 'Instance query'
      operationId: job_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the job instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/job'
      summary: 2. Get job by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the job instance."
        required: true
        type: string
      tags:
      - job
      description: "Delete a completed or failed job. Deleting a job does not revert the action
  that was completed."
      operationId: job_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete job by id
  /api/instances/job/{id}/action/cancel:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the job instance."
        required: true
        type: string
      tags:
      - job
      description: "Cancel a job."
      operationId: job_cancel
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Cancel job by id
  /api/types/kmipServer/instances:
    get:
      tags:
      - kmipServer
      description: 'Collection query'
      operationId: kmipServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/kmipServer'
      summary: 1. Get all kmipServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [addresses,port,timeout,username,password]
          properties:
            addresses:
              description: "List of KMIP server IP addresses or FQDN hostnames. <br> <br> If FQDN is specified, the address will be obtained using DNS lookup (requires DNS to be configured)."
              type: array
              items:
                type: string
            port:
              description: "KMIP server port number. Default value is 5696."
              type: integer
            timeout:
              description: "Timeout for establishing a connection to a KMIP server, in seconds. Maximum value is 30 seconds."
              type: integer
            username:
              description: "Username for accessing the KMIP server."
              type: string
            password:
              description: "Password for accessing the KMIP server."
              type: string
      tags:
      - kmipServer
      description: "Add a KMIP server cluster."
      operationId: kmipServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    type: string
      summary: 3. Create kmipServer
  /api/instances/kmipServer/{id}:
    get:
      tags:
      - kmipServer
      description: 'Instance query'
      operationId: kmipServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the KMIP server instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/kmipServer'
      summary: 2. Get kmipServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the KMIP server instance."
        required: true
        type: string
      tags:
      - kmipServer
      description: "Delete a KMIP server cluster."
      operationId: kmipServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Delete kmipServer by id
  /api/instances/kmipServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the KMIP server instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            addresses:
              description: "List of KMIP server IP addresses or FQDN hostnames. <br> <br> If FQDN is specified, the address will be obtained using DNS lookup (requires DNS to be configured)."
              type: array
              items:
                type: string
            port:
              description: "KMIP server port number."
              type: integer
            timeout:
              description: "Timeout for establishing a connection to a KMIP server, in seconds. Maximum value is 30 seconds."
              type: integer
            username:
              description: "Username for accessing the KMIP server."
              type: string
            password:
              description: "Password for accessing the KMIP server."
              type: string
      tags:
      - kmipServer
      description: "Modify the KMIP server configuration."
      operationId: kmipServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify kmipServer by id
  /api/instances/kmipServer/{id}/action/verify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the KMIP server instance."
        required: true
        type: string
      tags:
      - kmipServer
      description: "Verify the connection to KMIP server and update the status of individual servers. 
  The overall status of the KMIP server configuration is also updated by verify.
  Note that the method simply updates the status property of the kmip server and returns 
  success or failure based on the status."
      operationId: kmipServer_verify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Verify kmipServer by id
  /api/types/lcc/instances:
    get:
      tags:
      - lcc
      description: 'Collection query'
      operationId: lcc_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/lcc'
      summary: 1. Get all lcc
  /api/instances/lcc/{id}:
    get:
      tags:
      - lcc
      description: 'Instance query'
      operationId: lcc_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the LCC instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/lcc'
      summary: 2. Get lcc by id
  /api/instances/lcc/name:{name}:
    get:
      tags:
      - lcc
      description: 'Instance query'
      operationId: lcc_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "LCC name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/lcc'
      summary: 3. Get lcc by name
  /api/types/ldapServer/instances:
    get:
      tags:
      - ldapServer
      description: 'Collection query'
      operationId: ldapServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/ldapServer'
      summary: 1. Get all ldapServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [authority,bindDN,bindPassword,userSearchPath,groupSearchPath]
          properties:
            authority:
              description: "Name of the LDAP authority to construct the LDAP server configuration."
              type: string
            protocol:
              description: "Protocol used to connect to the LDAP server."
              $ref: '#/definitions/LDAPProtocolEnum'
            autoDiscover:
              description: "Default is true if no server addresses are specified. When set as true, the LDAP server addresses are obtained using DNS lookup on the LDAP authority (requires DNS to be configured)."
              type: boolean
            serverAddresses:
              description: "List of IP addresses or FQDN hostnames of the LDAP server. <br> <br> If not specified, the address will be obtained using DNS lookup on the LDAP authority (requires DNS to be configured)."
              type: array
              items:
                type: string
            port:
              description: "Port number to connect to the LDAP server. Cannot be used when specifying a port via (deprecated) serverAddress."
              type: integer
            bindDN:
              description: "Distinguished Name (DN) of the user to be used when binding; that is, authenticating and setting up the connection to the LDAP Server. For example:  <br> <br> Administrator@mycompany.com <br> <br> or cn=Administrator,cn=Users,dc=mycompany,dc=com"
              type: string
            bindPassword:
              description: "Password to use when binding a new LDAP session."
              type: string
            userSearchPath:
              description: "Path used to search for users on the directory server. For example:  <br> <br> ou=People,dc=lss,dc=emc,dc=com"
              type: string
            groupSearchPath:
              description: "Path used to search for groups on the directory server. For example: <br> <br> uid=name,ou=people,dc=domaincomponent <br> <br>  or  <br> <br> dc=domain component"
              type: string
            userIdAttribute:
              description: "Name of the LDAP attribute whose value indicates the user ID. <br> <br> Default value is sAmAccountName."
              type: string
            groupNameAttribute:
              description: "Name of the LDAP attribute whose value indicates the group name. <br> <br> Default value is cn."
              type: string
            userObjectClass:
              description: "LDAP object class for users.  <br> <br> Default value is user. <br> <br> In Active Directory, groups and users are stored in the same directory path, and are in a class called group."
              type: string
            groupObjectClass:
              description: "LDAP object class for groups. Default value is group.  <br> <br> In Active Directory, groups and users are stored in the same directory path, and are in a class called group."
              type: string
            groupMemberAttribute:
              description: "Name of the LDAP attribute whose value contains the names of group members within a group.  <br> <br> Default value is member."
              type: string
            certificateFilePath:
              description: "Path to the server certificate file on the system. This is required for one way server authentication. <br> <br> This argument is required if the value of the protocol argument is ldaps."
              type: string
            timeout:
              description: "Timeout for establishing a connection to an LDAP server.  If the system does not receive a reply from the LDAP server after the specified timeout, it stops sending requests. <br> <br> Default value 30000 (30 seconds)."
              type: integer
      tags:
      - ldapServer
      description: "Create an LDAP server configuration. The operation will fail if an LDAP server
  configuration already exists."
      operationId: ldapServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new LDAP server configuration."
                    type: string
      summary: 3. Create ldapServer
  /api/instances/ldapServer/{id}:
    get:
      tags:
      - ldapServer
      description: 'Instance query'
      operationId: ldapServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the ldapServer instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ldapServer'
      summary: 2. Get ldapServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the ldapServer instance."
        required: true
        type: string
      tags:
      - ldapServer
      description: "Delete an LDAP server configuration."
      operationId: ldapServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete ldapServer by id
  /api/instances/ldapServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the ldapServer instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            protocol:
              description: "Protocol used to connect to the LDAP server."
              $ref: '#/definitions/LDAPProtocolEnum'
            autoDiscover:
              description: "When true, the LDAP server addresses are obtained using DNS lookup on the LDAP authority (requires DNS to be configured)."
              type: boolean
            serverAddresses:
              description: "List of IP addresses or FQDN hostnames of the LDAP server."
              type: array
              items:
                type: string
            port:
              description: "Port number to connect to the LDAP server. Cannot be used when specifying a port via (deprecated) serverAddress."
              type: integer
            bindDN:
              description: "Distinguished Name (DN) of the user to be used when binding; that is, authenticating and setting up the connection to the LDAP Server. For example:  <br> <br> Administrator@mycompany.com <br> <br> or cn=Administrator,cn=Users,dc=mycompany,dc=com"
              type: string
            bindPassword:
              description: "Password to use when binding a new LDAP session."
              type: string
            userSearchPath:
              description: "Path used to search for users on the directory server. For example: <br> <br> ou=People,dc=lss,dc=emc,dc=com"
              type: string
            groupSearchPath:
              description: "Path used to search for groups on the directory server. For example: <br> <br> uid=name,ou=people,dc=domaincomponent <br> <br>  or  <br> <br> dc=domain component"
              type: string
            userIdAttribute:
              description: "Name of the LDAP attribute whose value indicates the user ID. <br> <br> Default value is uid."
              type: string
            groupNameAttribute:
              description: "Name of the LDAP attribute whose value indicates the group name. <br> <br> Default value is cn."
              type: string
            userObjectClass:
              description: "LDAP object class for users.  <br> <br> Default value is user. <br> <br> In Active Directory, groups and users are stored in the same directory path, and are in a class called group."
              type: string
            groupObjectClass:
              description: "LDAP object class for groups. Default value is group. <br> <br> In Active Directory, groups and users are stored in the same directory path, and are in a class called group."
              type: string
            groupMemberAttribute:
              description: "Name of the LDAP attribute whose value contains the names of group members within a group.  <br> <br> Default value is member."
              type: string
            certificateFilePath:
              description: "Path to the server certificate file on the system.This is required for one way server authentication."
              type: string
            timeout:
              description: "Timeout for establishing a connection to an LDAP server.  If the system does not receive a reply from the LDAP server after the specified timeout, it stops sending requests. <br> <br> Default value is 30000 (30 seconds)."
              type: integer
      tags:
      - ldapServer
      description: "Modify an LDAP server configuration."
      operationId: ldapServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify ldapServer by id
  /api/instances/ldapServer/{id}/action/verify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the ldapServer instance."
        required: true
        type: string
      tags:
      - ldapServer
      description: "Verify connectivity to the LDAP server."
      operationId: ldapServer_verify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Verify ldapServer by id
  /api/instances/ldapServer/{id}/action/refreshAddressesFromDNS:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the ldapServer instance."
        required: true
        type: string
      tags:
      - ldapServer
      description: "If auto discover is enabled, refresh the list of server addresses using DNS for the specified LDAP configuration."
      operationId: ldapServer_refreshAddressesFromDNS
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. RefreshAddressesFromDNS ldapServer by id
  /api/types/license/instances:
    get:
      tags:
      - license
      description: 'Collection query'
      operationId: license_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/license'
      summary: 1. Get all license
  /api/instances/license/{id}:
    get:
      tags:
      - license
      description: 'Instance query'
      operationId: license_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the license instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/license'
      summary: 2. Get license by id
  /api/instances/license/name:{name}:
    get:
      tags:
      - license
      description: 'Instance query'
      operationId: license_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "License name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/license'
      summary: 3. Get license by name
  /api/types/linkAggregation/instances:
    get:
      tags:
      - linkAggregation
      description: 'Collection query'
      operationId: linkAggregation_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/linkAggregation'
      summary: 01. Get all linkAggregation
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [ports]
          properties:
            ports:
              description: "List of Ethernet ports to be aggregated. The first port in the list becomes the master port."
              type: array
              items:
                description: "Information about Ethernet ports in the storage system."
                type: object
                required: [id]
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the Ethernet port instance."
            mtuSize:
              description: "MTU size value for the link aggregation. If you want to support jumbo frames, use 9000 as the MTU size value. <b/> If not specified, MTU size of the master port is used."
              type: integer
      tags:
      - linkAggregation
      description: "Create a link aggregation."
      operationId: linkAggregation_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "New linkAggregation instance."
                    type: string
                  peerId:
                    description: "Peer linkAggregation instance."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the linkAggregation instance."
      summary: 04. Create linkAggregation
  /api/instances/linkAggregation/{id}:
    get:
      tags:
      - linkAggregation
      description: 'Instance query'
      operationId: linkAggregation_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the linkAggregation instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/linkAggregation'
      summary: 02. Get linkAggregation by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the linkAggregation instance."
        required: true
        type: string
      tags:
      - linkAggregation
      description: "Delete a link aggregation."
      operationId: linkAggregation_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 09. Delete linkAggregation by id
  /api/instances/linkAggregation/name:{name}:
    get:
      tags:
      - linkAggregation
      description: 'Instance query'
      operationId: linkAggregation_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Link aggregation name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/linkAggregation'
      summary: 03. Get linkAggregation by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Link aggregation name."
        required: true
        type: string
      tags:
      - linkAggregation
      description: "Delete a link aggregation."
      operationId: linkAggregation_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 10. Delete linkAggregation by name
  /api/instances/linkAggregation/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the linkAggregation instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            mtuSize:
              description: "New MTU size value for the link aggregation. If you want to support jumbo frames, use 9000 as the MTU size value."
              type: integer
            addPorts:
              description: "List of Ethernet ports to add to the link aggregation."
              type: array
              items:
                description: "Information about Ethernet ports in the storage system."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the Ethernet port instance."
            removePorts:
              description: "List of Ethernet ports to remove from the link aggregation. Master port can not be removed."
              type: array
              items:
                description: "Information about Ethernet ports in the storage system."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the Ethernet port instance."
      tags:
      - linkAggregation
      description: "Modify a link aggregation."
      operationId: linkAggregation_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 05. Modify linkAggregation by id
  /api/instances/linkAggregation/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Link aggregation name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            mtuSize:
              description: "New MTU size value for the link aggregation. If you want to support jumbo frames, use 9000 as the MTU size value."
              type: integer
            addPorts:
              description: "List of Ethernet ports to add to the link aggregation."
              type: array
              items:
                description: "Information about Ethernet ports in the storage system."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the Ethernet port instance."
            removePorts:
              description: "List of Ethernet ports to remove from the link aggregation. Master port can not be removed."
              type: array
              items:
                description: "Information about Ethernet ports in the storage system."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the Ethernet port instance."
      tags:
      - linkAggregation
      description: "Modify a link aggregation."
      operationId: linkAggregation_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 06. Modify linkAggregation by name
  /api/types/linkAggregation/action/recommendForAggregation:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [ethernetPort]
          properties:
            ethernetPort:
              description: "Ethernet port on which to recommend link aggregations."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the Ethernet port instance."
      tags:
      - linkAggregation
      description: "Recommend appropriate link aggregations for an Ethernet port."
      operationId: linkAggregation_recommendForAggregation
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  recommendedPorts:
                    description: "List of identifiers for the recommended link aggregations."
                    type: array
                    items:
                      description: "(Applies if link aggregation is supported.) Ethernet port link aggregation settings.
  <p/>
  Link aggregation lets you link Ethernet ports (for example, port 0 and port 1)
  on a Storage Processor (SP) to a single logical port, and therefore lets you
  use up to four Ethernet ports on the SP. If your system has two SPs, and you
  link two physical ports, the same ports on both SPs are linked for redundancy.
  For example, if you link port 0 to port 1, the system creates one link
  aggregation for these ports on SPA and another link aggregation on SPB.
  <p/>
  <b>Note: </b>You can aggregate only Ethernet ports belonging to the same I/O module
  or on-board Ethernet ports. Aggregation of ports from different I/O modules is not allowed.
  <p/>
  <b>Note: </b>You can aggregate only Ethernet ports with the same MTU size.
  <p/>
  <b>Note: </b>You can not add an Ethernet port to aggregation if there are iSCSI portals on it.
  <p/>
  Link aggregation provides the following advantages:
  <ul>
  <li>Increases overall throughput, since two physical ports are linked into one
  logical port.</li>
  <li>Provides basic load balancing across linked ports, since the network
  traffic is distributed across multiple physical ports.</li>
  <li>Provides redundant ports so that if one port in a linked pair fails, the
  system does not lose connectivity.</li>
  </ul>
  <b>Note: </b>With link aggregation, both linked ports must be connected to the
  same switch, and the switch must be configured to use the link aggregation that
  uses the Link Aggregation Control Protocol (LACP). The documentation that came
  with your switch should provide more information about using LACP.
  <p/>
  The Unisphere online Help provides more details on cabling the SPs to the
  Disk-Array Enclosures (DAEs)."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the linkAggregation instance."
      summary: 07. RecommendForAggregation linkAggregation
  /api/types/linkAggregation/action/recommendForInterface:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [storageProcessor]
          properties:
            storageProcessor:
              description: "SP on which to recommend link aggregations."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the storageProcessor instance."
      tags:
      - linkAggregation
      description: "Recommend appropriate link aggregations for creation of network interface."
      operationId: linkAggregation_recommendForInterface
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  recommendations:
                    description: "List of identifiers for the recommended link aggregations."
                    type: array
                    items:
                      description: "(Applies if link aggregation is supported.) Ethernet port link aggregation settings.
  <p/>
  Link aggregation lets you link Ethernet ports (for example, port 0 and port 1)
  on a Storage Processor (SP) to a single logical port, and therefore lets you
  use up to four Ethernet ports on the SP. If your system has two SPs, and you
  link two physical ports, the same ports on both SPs are linked for redundancy.
  For example, if you link port 0 to port 1, the system creates one link
  aggregation for these ports on SPA and another link aggregation on SPB.
  <p/>
  <b>Note: </b>You can aggregate only Ethernet ports belonging to the same I/O module
  or on-board Ethernet ports. Aggregation of ports from different I/O modules is not allowed.
  <p/>
  <b>Note: </b>You can aggregate only Ethernet ports with the same MTU size.
  <p/>
  <b>Note: </b>You can not add an Ethernet port to aggregation if there are iSCSI portals on it.
  <p/>
  Link aggregation provides the following advantages:
  <ul>
  <li>Increases overall throughput, since two physical ports are linked into one
  logical port.</li>
  <li>Provides basic load balancing across linked ports, since the network
  traffic is distributed across multiple physical ports.</li>
  <li>Provides redundant ports so that if one port in a linked pair fails, the
  system does not lose connectivity.</li>
  </ul>
  <b>Note: </b>With link aggregation, both linked ports must be connected to the
  same switch, and the switch must be configured to use the link aggregation that
  uses the Link Aggregation Control Protocol (LACP). The documentation that came
  with your switch should provide more information about using LACP.
  <p/>
  The Unisphere online Help provides more details on cabling the SPs to the
  Disk-Array Enclosures (DAEs)."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the linkAggregation instance."
      summary: 08. RecommendForInterface linkAggregation
  /api/types/loginSessionInfo/instances:
    get:
      tags:
      - loginSessionInfo
      description: 'Collection query'
      operationId: loginSessionInfo_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/loginSessionInfo'
      summary: 1. Get all loginSessionInfo
  /api/instances/loginSessionInfo/{id}:
    get:
      tags:
      - loginSessionInfo
      description: 'Instance query'
      operationId: loginSessionInfo_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the loginSessionInfo instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/loginSessionInfo'
      summary: 2. Get loginSessionInfo by id
  /api/types/loginSessionInfo/action/logout:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            localCleanupOnly:
              description: "Indicates whether to log out of all REST API sessions authenticated by the Ticket Granting Token (TGT) with which this session was established. <br> <br>  Values are: <ul> <li>true - Log out of this session only. </li> <li>false - Log out of all sessions. </li> </ul>"
              type: boolean
      tags:
      - loginSessionInfo
      description: "Log out of the session."
      operationId: loginSessionInfo_logout
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  logoutOK:
                    description: "Indicates successful logout"
                    type: string
      summary: 3. Logout loginSessionInfo
  /api/types/lun/instances:
    get:
      tags:
      - lun
      description: 'Collection query'
      operationId: lun_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/lun'
      summary: 1. Get all lun
  /api/instances/lun/{id}:
    get:
      tags:
      - lun
      description: 'Instance query'
      operationId: lun_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the LUN."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/lun'
      summary: 2. Get lun by id
  /api/instances/lun/name:{name}:
    get:
      tags:
      - lun
      description: 'Instance query'
      operationId: lun_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Name of the LUN."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/lun'
      summary: 3. Get lun by name
  /api/types/memoryModule/instances:
    get:
      tags:
      - memoryModule
      description: 'Collection query'
      operationId: memoryModule_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/memoryModule'
      summary: 1. Get all memoryModule
  /api/instances/memoryModule/{id}:
    get:
      tags:
      - memoryModule
      description: 'Instance query'
      operationId: memoryModule_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the memory module instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/memoryModule'
      summary: 2. Get memoryModule by id
  /api/instances/memoryModule/name:{name}:
    get:
      tags:
      - memoryModule
      description: 'Instance query'
      operationId: memoryModule_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Memory module name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/memoryModule'
      summary: 3. Get memoryModule by name
  /api/types/metric/instances:
    get:
      tags:
      - metric
      description: 'Collection query'
      operationId: metric_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/metric'
      summary: 1. Get all metric
  /api/instances/metric/{id}:
    get:
      tags:
      - metric
      description: 'Instance query'
      operationId: metric_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier for the metric instance."
        required: true
        type: integer
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/metric'
      summary: 2. Get metric by id
  /api/types/metricCollection/instances:
    get:
      tags:
      - metricCollection
      description: 'Collection query'
      operationId: metricCollection_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/metricCollection'
      summary: 1. Get all metricCollection
  /api/instances/metricCollection/{id}:
    get:
      tags:
      - metricCollection
      description: 'Instance query'
      operationId: metricCollection_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the metricCollection resource type."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/metricCollection'
      summary: 2. Get metricCollection by id
  /api/types/metricQueryResult/instances:
    get:
      tags:
      - metricQueryResult
      description: 'Collection query'
      operationId: metricQueryResult_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/metricQueryResult'
      summary: 1. Get all metricQueryResult
  /api/types/metricRealTimeQuery/instances:
    get:
      tags:
      - metricRealTimeQuery
      description: 'Collection query'
      operationId: metricRealTimeQuery_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/metricRealTimeQuery'
      summary: 1. Get all metricRealTimeQuery
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [paths,interval]
          properties:
            paths:
              description: "Metric stat paths associated with the query. To learn how to obtain metric stat paths, see the description for the path attribute for the metric resource type."
              type: array
              items:
                type: string
            interval:
              description: "Sampling frequency for the query."
              type: integer
      tags:
      - metricRealTimeQuery
      description: "Create a new metrics real-time query."
      operationId: metricRealTimeQuery_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "New metricRealTimeQuery instance."
                    type: string
      summary: 3. Create metricRealTimeQuery
  /api/instances/metricRealTimeQuery/{id}:
    get:
      tags:
      - metricRealTimeQuery
      description: 'Instance query'
      operationId: metricRealTimeQuery_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the metricRealTimeQuery instance."
        required: true
        type: integer
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/metricRealTimeQuery'
      summary: 2. Get metricRealTimeQuery by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the metricRealTimeQuery instance."
        required: true
        type: integer
      tags:
      - metricRealTimeQuery
      description: "Delete the specified metricRealTimeQuery instance. All associated
  metricQueryResult resources will also be deleted."
      operationId: metricRealTimeQuery_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Delete metricRealTimeQuery by id
  /api/types/metricService/instances:
    get:
      tags:
      - metricService
      description: 'Collection query'
      operationId: metricService_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/metricService'
      summary: 1. Get all metricService
  /api/instances/metricService/{id}:
    get:
      tags:
      - metricService
      description: 'Instance query'
      operationId: metricService_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the metricService instance to modify. The value of this
  attribute is always 0, since it is a singleton resource type."
        required: true
        type: integer
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/metricService'
      summary: 2. Get metricService by id
  /api/instances/metricService/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the metricService instance to modify. The value of this
  attribute is always 0, since it is a singleton resource type."
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [isHistoricalEnabled]
          properties:
            isHistoricalEnabled:
              description: "Indicates whether historical metrics collection should be enabled: <ul> <li>true - Enable historical metrics collection. <li>false - Disable historical metrics collection. </ul>"
              type: boolean
      tags:
      - metricService
      description: "Enable or disable historical collection for metrics."
      operationId: metricService_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify metricService by id
  /api/types/metricValue/instances:
    get:
      tags:
      - metricValue
      description: 'Collection query'
      operationId: metricValue_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/metricValue'
      summary: 1. Get all metricValue
  /api/types/mgmtInterface/instances:
    get:
      tags:
      - mgmtInterface
      description: 'Collection query'
      operationId: mgmtInterface_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/mgmtInterface'
      summary: 1. Get all mgmtInterface
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [ipAddress,gateway]
          properties:
            ipAddress:
              description: "IPv4 or IPv6 address for the interface."
              type: string
            netmask:
              description: "IPv4 netmask for the interface, if the interface uses an IPv4 address."
              type: string
            v6PrefixLength:
              description: "Prefix length in bits for IPv6 address."
              type: integer
            gateway:
              description: "IPv4 or IPv6 gateway address for the interface."
              type: string
      tags:
      - mgmtInterface
      description: "Create a new network interface."
      operationId: mgmtInterface_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new interface instance."
                    type: string
      summary: 3. Create mgmtInterface
  /api/instances/mgmtInterface/{id}:
    get:
      tags:
      - mgmtInterface
      description: 'Instance query'
      operationId: mgmtInterface_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the mgmtInterface instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/mgmtInterface'
      summary: 2. Get mgmtInterface by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the mgmtInterface instance."
        required: true
        type: string
      tags:
      - mgmtInterface
      description: "Delete an interface."
      operationId: mgmtInterface_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete mgmtInterface by id
  /api/instances/mgmtInterface/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the mgmtInterface instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            ipAddress:
              description: "IPv4 or IPv6 gateway address for the interface."
              type: string
            netmask:
              description: "IPv4 netmask for the interface, if the interface uses an IPv4 IP address."
              type: string
            v6PrefixLength:
              description: "Prefix length in bits for v6 addresses."
              type: integer
            gateway:
              description: "IPv4 or IPv6 gateway address for the interface."
              type: string
      tags:
      - mgmtInterface
      description: "Modify settings for an interface."
      operationId: mgmtInterface_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify mgmtInterface by id
  /api/types/mgmtInterfaceSettings/instances:
    get:
      tags:
      - mgmtInterfaceSettings
      description: 'Collection query'
      operationId: mgmtInterfaceSettings_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/mgmtInterfaceSettings'
      summary: 1. Get all mgmtInterfaceSettings
  /api/instances/mgmtInterfaceSettings/{id}:
    get:
      tags:
      - mgmtInterfaceSettings
      description: 'Instance query'
      operationId: mgmtInterfaceSettings_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique instance identifier.
  This is a singleton resource, so the id is always 0."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/mgmtInterfaceSettings'
      summary: 2. Get mgmtInterfaceSettings by id
  /api/instances/mgmtInterfaceSettings/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique instance identifier.
  This is a singleton resource, so the id is always 0."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            v4ConfigMode:
              description: "New v4 config mode."
              $ref: '#/definitions/InterfaceConfigModeEnum'
            v6ConfigMode:
              description: "New v6 config mode."
              $ref: '#/definitions/InterfaceConfigModeEnum'
      tags:
      - mgmtInterfaceSettings
      description: "Modify mgmt interface settings.
  <p/>
  It is not allowed to set both IPv4 and IPv6 to Disabled at the same time, in any sequence.
  <br/>
  It is not allowed to set both IPv4 and IPv6 to Auto in one request.
  <br/>
  IPv4 or IPv6 may be set to Auto only if the other class IP address already exists, either set as a static IP address or obtained in Auto mode.
  <br/>
  The Static can be set only implicitly by creating the mgmtInterface object."
      operationId: mgmtInterfaceSettings_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify mgmtInterfaceSettings by id
  /api/types/moveSession/instances:
    get:
      tags:
      - moveSession
      description: 'Collection query'
      operationId: moveSession_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/moveSession'
      summary: 1. Get all moveSession
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [sourceStorageResource,destinationPool]
          properties:
            sourceStorageResource:
              description: "A reference to the source storage resource for the operation."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the storage resource."
            sourceMemberLun:
              description: "A reference to the specific lun to move if the storageResource isn't specific enough, i.e. CG member LUN or LUN VMFS Datastore."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the LUN."
            destinationPool:
              description: "A reference to the pool that is the target of the operation."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the pool instance."
            isDestThin:
              description: "Whether or not the destination will be created on sparse storage."
              type: boolean
            isDataReductionApplied:
              description: "Whether or not the destination will be created with data Reduction enabled."
              type: boolean
            isAdvancedDedupApplied:
              description: "Whether or not the destination will be created with advance deduplication enabled."
              type: boolean
            priority:
              description: "The initial priority value for the session."
              $ref: '#/definitions/MoveSessionPriorityEnum'
      tags:
      - moveSession
      description: "Create a session to move a storageResource to a new location."
      operationId: moveSession_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "The unique id for the session."
                    type: string
      summary: 3. Create moveSession
  /api/instances/moveSession/{id}:
    get:
      tags:
      - moveSession
      description: 'Instance query'
      operationId: moveSession_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the session."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/moveSession'
      summary: 2. Get moveSession by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the session."
        required: true
        type: string
      tags:
      - moveSession
      description: "Delete a previously created moveSession."
      operationId: moveSession_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Delete moveSession by id
  /api/instances/moveSession/{id}/action/cancel:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the session."
        required: true
        type: string
      tags:
      - moveSession
      description: "Cancel a queued or running moveSession."
      operationId: moveSession_cancel
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Cancel moveSession by id
  /api/instances/moveSession/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the session."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            priority:
              description: "The storageResource move priority."
              $ref: '#/definitions/MoveSessionPriorityEnum'
      tags:
      - moveSession
      description: "Alter options of a currently running moveSession."
      operationId: moveSession_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify moveSession by id
  /api/types/nasServer/instances:
    get:
      tags:
      - nasServer
      description: 'Collection query'
      operationId: nasServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/nasServer'
      summary: 01. Get all nasServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name,homeSP,pool]
          properties:
            name:
              description: "Name for the NAS server."
              type: string
            homeSP:
              description: "Storage processor on which the NAS server will run."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the storageProcessor instance."
            pool:
              description: "A Storage pool that stores NAS server configuration information."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the pool instance."
            tenant:
              description: "A Tenant to which the NAS server will belong."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the tenant instance."
            isReplicationDestination:
              description: "Indicates whether the NAS server is a replication destination.
  Values are:
  <ul>
  <li>true - Replication destination NAS server. </li>
  <li>false - Normal NAS server. </li>
  </ul>"
              type: boolean
            isBackupOnly:
              description: "Indicates whether the NAS server is used as backup only.
  Values are:
  <ul>
  <li>true - NAS server acts as backup only. </li>
  <li>false - Normal NAS server. </li>
  </ul>"
              type: boolean
            currentUnixDirectoryService:
              description: "Directory Service used for quering identity information for Unix (such as UIDs, GIDs, net groups)."
              $ref: '#/definitions/NasServerUnixDirectoryServiceEnum'
            isMultiProtocolEnabled:
              description: "Indicates whether multiprotocol sharing mode is enabled.
  Values are:
  <ul>
  <li> true - Enable multiprotocol sharing. </li>
  <li> false - Disable multiprotocol sharing. </li>
  </ul>"
              type: boolean
            allowUnmappedUser:
              description: "Use this flag to mandatorily disable access in case of any user mapping failure.
  Values are:
  <ul>
  <li> true - Enable access in case of any user mapping failure. </li>
  <li> false - Disable access in case of any user mapping failure. </li>
  </ul>"
              type: boolean
            defaultUnixUser:
              description: "Default Unix user name used for granting access in case of Windows to Unix user mapping failure. When empty, access in such case is denied."
              type: string
            defaultWindowsUser:
              description: "Default Windows user name used for granting access in case of Unix to Windows user mapping failure. When empty, access in such case is denied."
              type: string
            isPacketReflectEnabled:
              type: boolean
      tags:
      - nasServer
      description: "Create a NAS server."
      operationId: nasServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new nasServer instance."
                    type: string
      summary: 04. Create nasServer
  /api/instances/nasServer/{id}:
    get:
      tags:
      - nasServer
      description: 'Instance query'
      operationId: nasServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the nasServer instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/nasServer'
      summary: 02. Get nasServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the nasServer instance."
        required: true
        type: string
      tags:
      - nasServer
      description: "Delete a nasServer instance. This deletes the nasServer and its associated resources.

  Pre-requirements: Before deleting a NAS server, ensure that there are no file systems or VMware datastores associated with it.
                    Otherwise an error will be returned."
      operationId: nasServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 17. Delete nasServer by id
  /api/instances/nasServer/name:{name}:
    get:
      tags:
      - nasServer
      description: 'Instance query'
      operationId: nasServer_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "User-specified name of the NAS server."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/nasServer'
      summary: 03. Get nasServer by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified name of the NAS server."
        required: true
        type: string
      tags:
      - nasServer
      description: "Delete a nasServer instance. This deletes the nasServer and its associated resources.

  Pre-requirements: Before deleting a NAS server, ensure that there are no file systems or VMware datastores associated with it.
                    Otherwise an error will be returned."
      operationId: nasServer_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 18. Delete nasServer by name
  /api/instances/nasServer/{id}/action/generateUserMappingsReport:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the nasServer instance."
        required: true
        type: string
      tags:
      - nasServer
      description: "Generate a user mapping report. This report lists unmapped users and users whose Windows to/from Unix mappings have changed."
      operationId: nasServer_generateUserMappingsReport
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 05. GenerateUserMappingsReport nasServer by id
  /api/instances/nasServer/name:{name}/action/generateUserMappingsReport:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified name of the NAS server."
        required: true
        type: string
      tags:
      - nasServer
      description: "Generate a user mapping report. This report lists unmapped users and users whose Windows to/from Unix mappings have changed."
      operationId: nasServer_generateUserMappingsReport_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 06. GenerateUserMappingsReport nasServer by name
  /api/instances/nasServer/{id}/action/updateUserMappings:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the nasServer instance."
        required: true
        type: string
      tags:
      - nasServer
      description: "Fix the user mappings for all file systems associated with the NAS server.
  This process updates file ownership on the NAS server's file systems to reflect changes to users' SIDs."
      operationId: nasServer_updateUserMappings
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 07. UpdateUserMappings nasServer by id
  /api/instances/nasServer/name:{name}/action/updateUserMappings:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified name of the NAS server."
        required: true
        type: string
      tags:
      - nasServer
      description: "Fix the user mappings for all file systems associated with the NAS server.
  This process updates file ownership on the NAS server's file systems to reflect changes to users' SIDs."
      operationId: nasServer_updateUserMappings_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 08. UpdateUserMappings nasServer by name
  /api/instances/nasServer/{id}/action/refreshConfiguration:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the nasServer instance."
        required: true
        type: string
      tags:
      - nasServer
      description: "Refresh the configuration of the NAS server.
  This process refreshes the configuration of the NAS server when it is the destination of a synchronous replication session."
      operationId: nasServer_refreshConfiguration
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 09. RefreshConfiguration nasServer by id
  /api/instances/nasServer/name:{name}/action/refreshConfiguration:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified name of the NAS server."
        required: true
        type: string
      tags:
      - nasServer
      description: "Refresh the configuration of the NAS server.
  This process refreshes the configuration of the NAS server when it is the destination of a synchronous replication session."
      operationId: nasServer_refreshConfiguration_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 10. RefreshConfiguration nasServer by name
  /api/instances/nasServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the nasServer instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Specify a new NAS server name."
              type: string
            homeSP:
              description: "Specify the SP on which the VDM is to run."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the storageProcessor instance."
            isReplicationDestination:
              description: "Specify whether the NAS server is a replication destination.
  Values are:
  <ul>
  <li>true - Replication destination NAS server. </li>
  <li>false - Normal NAS server. </li>
  </ul>"
              type: boolean
            isBackupOnly:
              description: "Specify whether the NAS server is used as backup only.
  Values are:
  <ul>
  <li>true - NAS server acts as backup only. </li>
  <li>false - Normal NAS server. </li>
  </ul>"
              type: boolean
            currentUnixDirectoryService:
              description: "Directory Service used for quering identity information for UNIX (such as UIDs, GIDs, net groups)."
              $ref: '#/definitions/NasServerUnixDirectoryServiceEnum'
            isMultiProtocolEnabled:
              description: "Indicates whether multiprotocol sharing mode is enabled.
  Values are:
  <ul>
  <li> true - Enable multiprotocol sharing. </li>
  <li> false - Disable multiprotocol sharing. </li>
  </ul>"
              type: boolean
            allowUnmappedUser:
              description: "Use this flag to mandatory disable access in case of any user mapping failure.
  Values are:
  <ul>
  <li> true - Enable access in case of any user mapping failure. </li>
  <li> false - Disable access in case of any user mapping failure. </li>
  </ul>"
              type: boolean
            defaultUnixUser:
              description: "Default Unix user name used for granting access in case of Windows to Unix user mapping failure. When empty, access in such case is denied."
              type: string
            defaultWindowsUser:
              description: "Default Windows user name used for granting access in case of Unix to Windows user mapping failure. When empty, access in such case is denied."
              type: string
            enableWindowsToUnixUsernameMapping:
              description: "Indicates whether a Unix to/from Windows user name mapping is enabled.
  Values are:
  <ul>
  <li> true - Unix to/from Windows user name mapping is enabled. </li>
  <li> false - Unix to/from Windows user name mapping is disabled. </li>
  </ul>"
              type: boolean
            isPacketReflectEnabled:
              type: boolean
            isIgnoreWarnings:
              description: "Ignore warnings related to the operation.
  Values are:
  <ul>
  <li> true - Ignore warnings. </li>
  <li> false(Default) - Warnings will interrupt the operation. </li>
  </ul>"
              type: boolean
      tags:
      - nasServer
      description: "Modify NAS server settings."
      operationId: nasServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 11. Modify nasServer by id
  /api/instances/nasServer/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified name of the NAS server."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Specify a new NAS server name."
              type: string
            homeSP:
              description: "Specify the SP on which the VDM is to run."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the storageProcessor instance."
            isReplicationDestination:
              description: "Specify whether the NAS server is a replication destination.
  Values are:
  <ul>
  <li>true - Replication destination NAS server. </li>
  <li>false - Normal NAS server. </li>
  </ul>"
              type: boolean
            isBackupOnly:
              description: "Specify whether the NAS server is used as backup only.
  Values are:
  <ul>
  <li>true - NAS server acts as backup only. </li>
  <li>false - Normal NAS server. </li>
  </ul>"
              type: boolean
            currentUnixDirectoryService:
              description: "Directory Service used for quering identity information for UNIX (such as UIDs, GIDs, net groups)."
              $ref: '#/definitions/NasServerUnixDirectoryServiceEnum'
            isMultiProtocolEnabled:
              description: "Indicates whether multiprotocol sharing mode is enabled.
  Values are:
  <ul>
  <li> true - Enable multiprotocol sharing. </li>
  <li> false - Disable multiprotocol sharing. </li>
  </ul>"
              type: boolean
            allowUnmappedUser:
              description: "Use this flag to mandatory disable access in case of any user mapping failure.
  Values are:
  <ul>
  <li> true - Enable access in case of any user mapping failure. </li>
  <li> false - Disable access in case of any user mapping failure. </li>
  </ul>"
              type: boolean
            defaultUnixUser:
              description: "Default Unix user name used for granting access in case of Windows to Unix user mapping failure. When empty, access in such case is denied."
              type: string
            defaultWindowsUser:
              description: "Default Windows user name used for granting access in case of Unix to Windows user mapping failure. When empty, access in such case is denied."
              type: string
            enableWindowsToUnixUsernameMapping:
              description: "Indicates whether a Unix to/from Windows user name mapping is enabled.
  Values are:
  <ul>
  <li> true - Unix to/from Windows user name mapping is enabled. </li>
  <li> false - Unix to/from Windows user name mapping is disabled. </li>
  </ul>"
              type: boolean
            isPacketReflectEnabled:
              type: boolean
            isIgnoreWarnings:
              description: "Ignore warnings related to the operation.
  Values are:
  <ul>
  <li> true - Ignore warnings. </li>
  <li> false(Default) - Warnings will interrupt the operation. </li>
  </ul>"
              type: boolean
      tags:
      - nasServer
      description: "Modify NAS server settings."
      operationId: nasServer_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 12. Modify nasServer by name
  /api/instances/nasServer/{id}/action/ping:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the nasServer instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [destination]
          properties:
            destination:
              description: "IP address or Domain Name of the destination."
              type: string
      tags:
      - nasServer
      description: "Ping Destination from NAS server."
      operationId: nasServer_ping
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  result:
                    description: "Result of ping command."
                    $ref: '#/definitions/pingResult'
      summary: 13. Ping nasServer by id
  /api/instances/nasServer/name:{name}/action/ping:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: name
        in: path
        description: "User-specified name of the NAS server."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [destination]
          properties:
            destination:
              description: "IP address or Domain Name of the destination."
              type: string
      tags:
      - nasServer
      description: "Ping Destination from NAS server."
      operationId: nasServer_ping_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  result:
                    description: "Result of ping command."
                    $ref: '#/definitions/pingResult'
      summary: 14. Ping nasServer by name
  /api/instances/nasServer/{id}/action/traceroute:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the nasServer instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [destination]
          properties:
            destination:
              description: "IP address or Domain Name of the destination."
              type: string
      tags:
      - nasServer
      description: "Traceroute Destination from NAS server."
      operationId: nasServer_traceroute
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  result:
                    description: "Result of traceroute command."
                    type: array
                    items:
                      description: "Information about traceroute command result."
                      $ref: '#/definitions/tracerouteResult'
      summary: 15. Traceroute nasServer by id
  /api/instances/nasServer/name:{name}/action/traceroute:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: name
        in: path
        description: "User-specified name of the NAS server."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [destination]
          properties:
            destination:
              description: "IP address or Domain Name of the destination."
              type: string
      tags:
      - nasServer
      description: "Traceroute Destination from NAS server."
      operationId: nasServer_traceroute_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  result:
                    description: "Result of traceroute command."
                    type: array
                    items:
                      description: "Information about traceroute command result."
                      $ref: '#/definitions/tracerouteResult'
      summary: 16. Traceroute nasServer by name
  /api/types/nfsServer/instances:
    get:
      tags:
      - nfsServer
      description: 'Collection query'
      operationId: nfsServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/nfsServer'
      summary: 1. Get all nfsServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [nasServer]
          properties:
            nasServer:
              description: "NAS server associated with the NFS server."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the nasServer instance."
            hostName:
              description: "Host name of the NFS server.
  If host name is not specified then SMB server name or NAS server name will be used
  to auto generate the host name."
              type: string
            nfsv3Enabled:
              description: "Indicates whether the NFSv3 is enabled on the NAS server 
   specified in the nasServer attribute. 
   When enabled - NFS shares can be accessed with NFSv3 protocol. 
   When disabled - NFS shares cannot be accessed with NFSv3 protocol.
   Values are:
   <ul>
   <li> true(Default) - NFsv3 is enabled on the specified NAS server.</li>
   <li> false - NFSv3 is disabled on the specified NAS server.</li>
   </ul>"
              type: boolean
            nfsv4Enabled:
              description: "Indicates whether the NFSv4 is enabled on the NAS server 
   specified in the nasServer attribute. 
   When enabled - NFS shares can be accessed with NFSv4 protocol. 
   When disabled - NFS shares cannot be accessed with NFSv4 protocol.
   Values are:
   <ul>
   <li> true - NFsv4 is enabled on the specified NAS server.</li>
   <li> false(Default) - NFSv4 is disabled on the specified NAS server.</li>
   </ul>"
              type: boolean
            isSecureEnabled:
              description: "Indicates whether the secure NFS is enabled.
   Values are:
   <ul>
   <li> true - Secure NFS is enabled.</li>
   <li> false(Default) - Secure NFS is disabled.</li>
   </ul>"
              type: boolean
            kdcType:
              description: "Type of Kerberos Domain Controller used for secure NFS service."
              $ref: '#/definitions/KdcTypeEnum'
            kdcUsername:
              description: "Kerberos Domain Controller administrator's name."
              type: string
            kdcPassword:
              description: "Kerberos Domain Controller administrator's password."
              type: string
            isExtendedCredentialsEnabled:
              description: "Support for more than 16 Unix groups.
  Values are:
  <ul>
  <li> true - NFS server supports more than 16 unix groups in a Unix credential. </li>
  <li> false(Default) - NFS server doesn't support more than 16 unix groups in a Unix credential. </li>
  </ul>"
              type: boolean
            credentialsCacheTTL:
              description: "Credential cache refresh timeout. Resolution is in minutes. Default value is 15 minutes."
              type: string
              format: date-time
      tags:
      - nfsServer
      description: "Create an nfsServer instance."
      operationId: nfsServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new nfsServer instance."
                    type: string
      summary: 3. Create nfsServer
  /api/instances/nfsServer/{id}:
    get:
      tags:
      - nfsServer
      description: 'Instance query'
      operationId: nfsServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the nfsServer instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/nfsServer'
      summary: 2. Get nfsServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the nfsServer instance."
        required: true
        type: string
      tags:
      - nfsServer
      description: "Delete an nfsServer instance."
      operationId: nfsServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete nfsServer by id
  /api/instances/nfsServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the nfsServer instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            hostName:
              description: "Host name of the NFS server."
              type: string
            nfsv3Enabled:
              description: "Indicates whether the NFSv3 protocol is enabled on the NAS server 
   specified in the nasServer attribute.
   When enabled - NFS shares can be accessed with NFSv3 protocol. 
   When disabled - NFS shares cannot be accessed with NFSv3 protocol.
   Values are:
   <ul>
   <li> true - NFsv3 is enabled on the specified NAS server.</li>
   <li> false - NFSv3 is disabled on the specified NAS server.</li>
   </ul>"
              type: boolean
            nfsv4Enabled:
              description: "Indicates whether the NFSv4 protocol is enabled on the NAS server 
   specified in the nasServer attribute.
   When enabled - NFS shares can be accessed with NFSv4 protocol. 
   When disabled - NFS shares cannot be accessed with NFSv4 protocol.
   Values are:
   <ul>
   <li> true - NFsv4 is enabled on the specified NAS server.</li>
   <li> false - NFSv4 is disabled on the specified NAS server.</li>
   </ul>"
              type: boolean
            isSecureEnabled:
              description: "Indicates whether the secure NFS is enabled.
   Values are:
   <ul>
   <li> true - secure NFS is enabled.</li>
   <li> false - secure NFS is disabled. If kdcType was set to Windows and
                skipUnjoin is not set to true then kdcUsername/kdcPassword are required.</li>
   </ul>"
              type: boolean
            kdcType:
              description: "Type of Kerberos Domain Controller used for secure NFS service.
    When KDC type is changed to Windows then kdcUsername/kdcPassword are required.
    When KDC type is changed to Custom from Windows and skipUnjoin is not set to true then kdcUsername/kdcPassword are required."
              $ref: '#/definitions/KdcTypeEnum'
            skipUnjoin:
              description: "Keep Service Principal Name (SPN) in Kerberos Domain Controller.
  Values are:
  <ul>
  <li> true - Do not remove the SPN from Kerberos Domain Controller. kdcUsername/kdcPassword are ignored.</li>
  <li> false(Default) - Remove the SPN from Kerberos Domain Controller when it's needed.
                        When disabling secure NFS or changing KDC type to Custom then kdcUsername/kdcPassword must be specified.</li>
  </ul>"
              type: boolean
            kdcUsername:
              description: "Kerberos Domain Controller administrator's name to add/remove the SPN."
              type: string
            kdcPassword:
              description: "Kerberos Domain Controller administrator's password to add/remove the SPN."
              type: string
            isExtendedCredentialsEnabled:
              description: "Support for more than 16 Unix groups.
  Values are:
  <ul>
  <li> true - NFS server supports more than 16 unix groups in a Unix credential. </li>
  <li> false(Default) - NFS server doesn't support more than 16 unix groups in a Unix credential. </li>
  </ul>"
              type: boolean
            credentialsCacheTTL:
              description: "Credential cache refresh timeout. Resolution is in minutes. Default value is 15 minutes."
              type: string
              format: date-time
      tags:
      - nfsServer
      description: "Modify an nfsServer instance."
      operationId: nfsServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify nfsServer by id
  /api/types/nfsShare/instances:
    get:
      tags:
      - nfsShare
      description: 'Collection query'
      operationId: nfsShare_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/nfsShare'
      summary: 1. Get all nfsShare
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [snap,path,name]
          properties:
            snap:
              description: "Parent file system associated with the NFS share, as defined by the filesystemSnap resource type."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the snap instance."
            path:
              description: "Local path to a location within the file system.  <br> <br>  With NFS, each share must have a unique local path. By default, the system creates a share to the root of the file system (top-most directory) at file system creation time. This path specifies the unique location of the file system on the storage system.  <br> <br>  Before you can create additional shares within an NFS shared folder, you must create directories within it from a Linux/UNIX host that is connected to the file system. After a directory has been created from a mounted host, you can create a corresponding share and set access permissions accordingly."
              type: string
            name:
              description: "NFS share name."
              type: string
            description:
              description: "NFS share description."
              type: string
            isReadOnly:
              description: "Indicates whether the NFS share is read-only. 
  Values are:
  <ul>
  <li> true - NFS share is read-only.</li>
  <li> false - NFS share is read-write.</li>
  </ul>"
              type: boolean
            defaultAccess:
              description: "Default NFS share access-level permissions."
              $ref: '#/definitions/NFSShareDefaultAccessEnum'
            minSecurity:
              description: "Minimal security level that must be provided by a client to mount the NFS share."
              $ref: '#/definitions/NFSShareSecurityEnum'
            noAccessHosts:
              description: "Hosts with no access to the NFS share or its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            readOnlyHosts:
              description: "Hosts with read-only access to the NFS share and its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            readWriteHosts:
              description: "Hosts with read and write access to the NFS share and its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            readOnlyRootAccessHosts:
              description: "Hosts with read-only root access to the NFS share and its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            rootAccessHosts:
              description: "Hosts with read-write root access to the NFS share and its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            noAccessHostsString:
              description: "Hosts with no access to the NFS share or its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            readOnlyHostsString:
              description: "Hosts with read-only access to the NFS share and its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            readWriteHostsString:
              description: "Hosts with read-write access to the NFS share and its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            readOnlyRootHostsString:
              description: "Hosts with read-only root access to the NFS share and its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            readWriteRootHostsString:
              description: "Hosts with read-write root access to the NFS share and its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            anonymousUID:
              description: "user ID of the anonymous account."
              type: integer
            anonymousGID:
              description: "group ID of the anonymous account."
              type: integer
            exportOption:
              description: "Bitmask of various options of the NFS share. Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS share per host is defined according the hostsString lists. Otherwise, the access is defined according the hostID lists.</li>
  <li> 0x0002 - noSUID - if set, do not allow access to set SUID. Otherwise, allow access.</li>
  </ul>"
              type: integer
      tags:
      - nfsShare
      description: "Create an NFS share for a snapshot."
      operationId: nfsShare_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new NFS share."
                    type: string
      summary: 4. Create nfsShare
  /api/instances/nfsShare/{id}:
    get:
      tags:
      - nfsShare
      description: 'Instance query'
      operationId: nfsShare_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the nfsShare instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/nfsShare'
      summary: 2. Get nfsShare by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the nfsShare instance."
        required: true
        type: string
      tags:
      - nfsShare
      description: "Delete an NFS share for a snapshot."
      operationId: nfsShare_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete nfsShare by id
  /api/instances/nfsShare/name:{name}:
    get:
      tags:
      - nfsShare
      description: 'Instance query'
      operationId: nfsShare_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "NFS share name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/nfsShare'
      summary: 3. Get nfsShare by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "NFS share name."
        required: true
        type: string
      tags:
      - nfsShare
      description: "Delete an NFS share for a snapshot."
      operationId: nfsShare_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete nfsShare by name
  /api/instances/nfsShare/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the nfsShare instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            description:
              description: "NFS share description."
              type: string
            defaultAccess:
              description: "Default NFS share access-level permissions."
              $ref: '#/definitions/NFSShareDefaultAccessEnum'
            minSecurity:
              description: "Minimal security level that must be provided by a client to mount the NFS share."
              $ref: '#/definitions/NFSShareSecurityEnum'
            noAccessHosts:
              description: "Hosts with no access to the NFS share or its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            readOnlyHosts:
              description: "Hosts with read-only access to the NFS share and its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            readWriteHosts:
              description: "Hosts with read and write access to the NFS share and its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            readOnlyRootAccessHosts:
              description: "Hosts with read-only root access to the NFS share and its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            rootAccessHosts:
              description: "Hosts with read-write root access to the NFS share and its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            noAccessHostsString:
              description: "Hosts with no access to the NFS share or its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            readOnlyHostsString:
              description: "Hosts with read-only access to the NFS share and its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            readWriteHostsString:
              description: "Hosts with read-write access to the NFS share and its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            readOnlyRootHostsString:
              description: "Hosts with read-only root access to the NFS share and its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            readWriteRootHostsString:
              description: "Hosts with read-write root access to the NFS share and its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            anonymousUID:
              description: "user ID of the anonymous account."
              type: integer
            anonymousGID:
              description: "group ID of the anonymous account."
              type: integer
            exportOption:
              description: "Bitmask of various options of the NFS share. Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS share per host is defined according the hostsString lists. Otherwise, the access is defined according the hostID lists.</li>
  <li> 0x0002 - noSUID - if set, do not allow access to set SUID. Otherwise, allow access.</li>
  </ul>"
              type: integer
      tags:
      - nfsShare
      description: "Modify an NFS share for a snapshot."
      operationId: nfsShare_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify nfsShare by id
  /api/instances/nfsShare/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "NFS share name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            description:
              description: "NFS share description."
              type: string
            defaultAccess:
              description: "Default NFS share access-level permissions."
              $ref: '#/definitions/NFSShareDefaultAccessEnum'
            minSecurity:
              description: "Minimal security level that must be provided by a client to mount the NFS share."
              $ref: '#/definitions/NFSShareSecurityEnum'
            noAccessHosts:
              description: "Hosts with no access to the NFS share or its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            readOnlyHosts:
              description: "Hosts with read-only access to the NFS share and its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            readWriteHosts:
              description: "Hosts with read and write access to the NFS share and its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            readOnlyRootAccessHosts:
              description: "Hosts with read-only root access to the NFS share and its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            rootAccessHosts:
              description: "Hosts with read-write root access to the NFS share and its snapshots, as defined by the host resource type."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            noAccessHostsString:
              description: "Hosts with no access to the NFS share or its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            readOnlyHostsString:
              description: "Hosts with read-only access to the NFS share and its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            readWriteHostsString:
              description: "Hosts with read-write access to the NFS share and its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            readOnlyRootHostsString:
              description: "Hosts with read-only root access to the NFS share and its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            readWriteRootHostsString:
              description: "Hosts with read-write root access to the NFS share and its snapshots, defined as comma-separated list of hostnames, subnets, IPs, domains or netgroups."
              type: string
            anonymousUID:
              description: "user ID of the anonymous account."
              type: integer
            anonymousGID:
              description: "group ID of the anonymous account."
              type: integer
            exportOption:
              description: "Bitmask of various options of the NFS share. Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS share per host is defined according the hostsString lists. Otherwise, the access is defined according the hostID lists.</li>
  <li> 0x0002 - noSUID - if set, do not allow access to set SUID. Otherwise, allow access.</li>
  </ul>"
              type: integer
      tags:
      - nfsShare
      description: "Modify an NFS share for a snapshot."
      operationId: nfsShare_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify nfsShare by name
  /api/types/ntpServer/instances:
    get:
      tags:
      - ntpServer
      description: 'Collection query'
      operationId: ntpServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/ntpServer'
      summary: 1. Get all ntpServer
  /api/instances/ntpServer/{id}:
    get:
      tags:
      - ntpServer
      description: 'Instance query'
      operationId: ntpServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the ntpServer instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ntpServer'
      summary: 2. Get ntpServer by id
  /api/instances/ntpServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the ntpServer instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [rebootPrivilege]
          properties:
            addresses:
              description: "List of NTP server IP addresses."
              type: array
              items:
                type: string
            rebootPrivilege:
              description: "Indicates whether a system reboot of the NTP server is required for setting the system time."
              $ref: '#/definitions/RebootPrivilegeEnum'
      tags:
      - ntpServer
      description: "Modify an NTP server."
      operationId: ntpServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  timeShift:
                    description: "Time difference between the system time and the new NTP server time. This value appears only if it exceeds the defined limit of 1000 seconds. If you see this value, you cannot apply the new time settings without rebooting the system."
                    type: string
                    format: date-time
      summary: 3. Modify ntpServer by id
  /api/types/pool/instances:
    get:
      tags:
      - pool
      description: 'Collection query'
      operationId: pool_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/pool'
      summary: 01. Get all pool
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name]
          properties:
            name:
              description: "Pool name."
              type: string
            description:
              description: "Pool description."
              type: string
            addRaidGroupParameters:
              description: "Parameters to add RAID groups to the pool (disk group, number of drives, RAID level, stripe length: see object raidGroupParameters). To create a pool with drives of different type (NVMe, Flash, SAS, NL-SAS) FAST VP license is required."
              type: array
              items:
                description: "Parameters to create RAID group from the disks and add it to the pool."
                type: object
                properties:
                  dskGroup:
                    description: "Disk Group identifier."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the diskGroup instance."
                  numDisks:
                    description: "Number of disks."
                    type: integer
                  raidType:
                    description: "RAID type (or RAID level)."
                    $ref: '#/definitions/RaidTypeEnum'
                  stripeWidth:
                    description: "Stripe width (or RAID modulus)."
                    $ref: '#/definitions/RaidStripeWidthEnum'
                  spareDriveCount:
                    description: "Number of hot spare drives capacity."
                    type: integer
            addPoolUnitParameters:
              description: "Pool capacity units (now Virtual Disks only, see virtualDisk object) with associated parameters to add to the pool without RAID protection."
              type: array
              items:
                description: "Parameters for adding a pool unit to a pool, or modifying a pool unit.
  At this time, only virtual disk type pool units can be modified."
                type: object
                properties:
                  poolUnit:
                    description: "Pool unit for which these parameters are being specified.
  Indeed it is Virtual Disk identifier, but in the future 
  it can be the other pool unit object types allowed."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the pool unit instance."
                  name:
                    description: "Pool unit name.
  Can be used for Virtual Disk modification only."
                    type: string
                  tierType:
                    description: "Tier type. 
  If virtualDisk tier type is unknown
  it can be specified at the time of adding to pool."
                    $ref: '#/definitions/TierTypeEnum'
            alertThreshold:
              description: "Threshold at which the system will generate alerts about the free space in the pool, specified as a percentage.  <br> <br> This threshold is based on the percentage of allocated storage in the pool compared to the total pool size."
              type: integer
            poolSpaceHarvestHighThreshold:
              description: "(Applies when the automatic deletion of snapshots based on pool space usage is enabled for the system and pool.)  <br> <br> Pool used space high threshold at which the system will automatically starts to delete snapshots in the pool, specified as a percentage with .01% granularity.  <br> <br> This threshold is based on the percentage of space used in the pool by all types of objects compared to the total pool size. When the percentage of used space reaches this threshold, the system automatically starts to delete snapshots in the pool, until a low threshold is reached."
              type: number
              format: float
            poolSpaceHarvestLowThreshold:
              description: "(Applies when the automatic deletion of snapshots based on pool space usage is enabled for the system and pool.)  <br> <br> Pool used space low threshold under which the system will automatically stop deletion of snapshots in the pool, specified as a percentage with .01% granularity.  <br> <br> This threshold is based on the percentage of space in the pool used by all types of obejcts compared to the total pool size. When the percentage of used space in the pool falls below this threshold, the system stops the automatic deletion of snapshots in the pool, until a high threshold is reached again."
              type: number
              format: float
            snapSpaceHarvestHighThreshold:
              description: "(Applies when the automatic deletion of snapshots based on snapshot space usage is enabled for the system and pool.)  <br> <br> Snapshot used space high threshold at which the system automatically starts to delete snapshots in the pool, specified as a percentage with .01% granularity.  <br> <br> This threshold is based on the percentage of pool space used by snapshot objects only compared with the total pool size. When the percentage of space used by snapshots reaches this threshold, the system automatically starts to delete snapshots in the pool, until a low threshold is reached."
              type: number
              format: float
            snapSpaceHarvestLowThreshold:
              description: "(Applies when the automatic deletion of snapshots based on snapshot space usage is enabled for the system and the pool.)  <br> <br> Snapshot used space low threshold below which the system will stop automatically deleting snapshots in the pool, specified as a percentage with .01% granularity.  <br> <br> This threshold is based on the percentage of space used by snapshot objects only as compared to the total pool size. When the percentage of space used by snapshots falls below this threshold, the system stops automatically deleting snapshots in the pool, until a high threshold is reached again."
              type: number
              format: float
            isHarvestEnabled:
              description: "Indicates whether to enable pool space harvesting (the automatic deletion of snapshots based on pool space usage) for the pool. Values are:  <ul> <li>true - Enable pool harvesting for the pool.</li> <li>false - Disable pool harvesting for the pool.</li> </ul>"
              type: boolean
            isSnapHarvestEnabled:
              description: "Indicates whether to enable snapshot harvesting (the automatic deletion of snapshots based on snapshot space usage) for the pool. Values are:  <ul> <li>true - Enable snapshot harvesting for the pool.</li> <li>false - Disable snapshot harvesting for the pool.</li> </ul>"
              type: boolean
            isFASTCacheEnabled:
              description: "(Applies if a FAST Cache license is installed on the system.) Indicates whether to enable the FAST Cache for the pool. Values are:  <ul> <li>true -  FAST Cache will be enabled for this pool.</li>  <li>false - FAST Cache will be disabled for this pool.</li> </ul> Only RAID groups created of SAS and NL-SAS hard drives are eligible for FAST Cache. If the pool is populated by only Flash drives this option is not allowed."
              type: boolean
            isFASTVpScheduleEnabled:
              description: "(Applies when a FAST VP license is installed on the system.) Indicates whether to enable scheduled data relocations for the pool. Values are:  <ul> <li>true - Enable scheduled data relocations for the pool.</li> <li>false - Disable scheduled data relocations for the pool.</li>  </ul>"
              type: boolean
            type:
              description: "Indicates whether to create traditional pool or dynamic pool. <ul> <li>traditional - Create traditional pool.</li> <li>dynamic - Create dynamic pool. (default)</li>  </ul>"
              $ref: '#/definitions/StoragePoolTypeEnum'
      tags:
      - pool
      description: "Create a new pool."
      operationId: pool_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Output parameter for the created pool id. The pool object with this id may not exist at the moment of this method complete because this method only launches background process called Job which is actually creating the pool."
                    type: string
      summary: 04. Create pool
  /api/instances/pool/{id}:
    get:
      tags:
      - pool
      description: 'Instance query'
      operationId: pool_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the pool instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/pool'
      summary: 02. Get pool by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the pool instance."
        required: true
        type: string
      tags:
      - pool
      description: "Delete a pool."
      operationId: pool_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 14. Delete pool by id
  /api/instances/pool/name:{name}:
    get:
      tags:
      - pool
      description: 'Instance query'
      operationId: pool_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Pool name, unique in the storage system."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/pool'
      summary: 03. Get pool by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Pool name, unique in the storage system."
        required: true
        type: string
      tags:
      - pool
      description: "Delete a pool."
      operationId: pool_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 15. Delete pool by name
  /api/instances/pool/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the pool instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Pool new name."
              type: string
            description:
              description: "Pool new description."
              type: string
            addRaidGroupParameters:
              description: "Parameters to add RAID groups to the pool (disk group, number of drives, RAID level, stripe length). If the expansion of the single-tier pool makes it multi-tier pool then FAST VP license is required to be installed on the system."
              type: array
              items:
                description: "Parameters to create RAID group from the disks and add it to the pool."
                type: object
                properties:
                  dskGroup:
                    description: "Disk Group identifier."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the diskGroup instance."
                  numDisks:
                    description: "Number of disks."
                    type: integer
                  raidType:
                    description: "RAID type (or RAID level)."
                    $ref: '#/definitions/RaidTypeEnum'
                  stripeWidth:
                    description: "Stripe width (or RAID modulus)."
                    $ref: '#/definitions/RaidStripeWidthEnum'
                  spareDriveCount:
                    description: "Number of hot spare drives capacity."
                    type: integer
            addPoolUnitParameters:
              description: "Pool capacity units (now Virtual Disks only) with associated parameters to add to the pool without RAID protection."
              type: array
              items:
                description: "Parameters for adding a pool unit to a pool, or modifying a pool unit.
  At this time, only virtual disk type pool units can be modified."
                type: object
                properties:
                  poolUnit:
                    description: "Pool unit for which these parameters are being specified.
  Indeed it is Virtual Disk identifier, but in the future 
  it can be the other pool unit object types allowed."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the pool unit instance."
                  name:
                    description: "Pool unit name.
  Can be used for Virtual Disk modification only."
                    type: string
                  tierType:
                    description: "Tier type. 
  If virtualDisk tier type is unknown
  it can be specified at the time of adding to pool."
                    $ref: '#/definitions/TierTypeEnum'
            alertThreshold:
              type: integer
            poolSpaceHarvestHighThreshold:
              description: "(Applies when the automatic deletion of snapshots based on pool space usage is enabled for the system and pool.)  <br> <br> Pool used space high threshold at which the system will automatically starts to delete snapshots in the pool, specified as a percentage with .01% granularity.  <br> <br> This threshold is based on the percentage of space used in the pool by all types of objects compared to the total pool size. When the percentage of used space reaches this threshold, the system automatically starts to delete snapshots in the pool, until a low threshold is reached."
              type: number
              format: float
            poolSpaceHarvestLowThreshold:
              description: "(Applies when the automatic deletion of snapshots based on pool space usage is enabled for the system and pool.)  <br> <br> Pool used space low threshold under which the system will automatically stop deletion of snapshots in the pool, specified as a percentage with .01% granularity.  <br> <br> This threshold is based on the percentage of space in the pool used by all types of obejcts compared to the total pool size. When the percentage of used space in the pool falls below this threshold, the system stops the automatic deletion of snapshots in the pool, until a high threshold is reached again."
              type: number
              format: float
            snapSpaceHarvestHighThreshold:
              description: "(Applies when the automatic deletion of snapshots based on snapshot space usage is enabled for the system and pool.)  <br> <br> Snapshot used space high threshold at which the system automatically starts to delete snapshots in the pool, specified as a percentage with .01% granularity.  <br> <br> This threshold is based on the percentage of pool space used by snapshot objects only compared with the total pool size. When the percentage of space used by snapshots reaches this threshold, the system automatically starts to delete snapshots in the pool, until a low threshold is reached."
              type: number
              format: float
            snapSpaceHarvestLowThreshold:
              description: "(Applies when the automatic deletion of snapshots based on snapshot space usage is enabled for the system and the pool.)  <br> <br> Snapshot used space low threshold below which the system will stop automatically deleting snapshots in the pool, specified as a percentage with .01% granularity.  <br> <br> This threshold is based on the percentage of space used by snapshot objects only as compared to the total pool size. When the percentage of space used by snapshots falls below this threshold, the system stops automatically deleting snapshots in the pool, until a high threshold is reached again."
              type: number
              format: float
            isHarvestEnabled:
              description: "Indicates whether to enable pool space harvesting (the automatic deletion of snapshots based on pool space usage) for the pool. Values are:  <ul> <li>true - Enable pool harvesting for the pool.</li> <li>false - Disable pool harvesting for the pool.</li> </ul>"
              type: boolean
            isSnapHarvestEnabled:
              description: "Indicates whether to enable snapshot harvesting (the automatic deletion of snapshots based on snapshot space usage) for the pool. Values are:  <ul> <li>true - Enable snapshot harvesting for the pool.</li> <li>false - Disable snapshot harvesting for the pool.</li> </ul>"
              type: boolean
            isFASTCacheEnabled:
              description: "(Applies if a FAST Cache license is installed on the system.) Indicates whether to enable the FAST Cache for the pool. Values are:  <ul>"
              type: boolean
            isFASTVpScheduleEnabled:
              description: "(Applies when a FAST VP license is installed on the system.) Indicates whether to enable scheduled data relocations for the pool. Values are:  <ul> <li>true - Enable scheduled data relocations for the pool.</li> <li>false - Disable scheduled data relocations for the pool.</li>  </ul>"
              type: boolean
      tags:
      - pool
      description: "Modifies the existing pool: allows to expand pool capacity and/or modify different parameters of the pool."
      operationId: pool_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 05. Modify pool by id
  /api/instances/pool/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Pool name, unique in the storage system."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Pool new name."
              type: string
            description:
              description: "Pool new description."
              type: string
            addRaidGroupParameters:
              description: "Parameters to add RAID groups to the pool (disk group, number of drives, RAID level, stripe length). If the expansion of the single-tier pool makes it multi-tier pool then FAST VP license is required to be installed on the system."
              type: array
              items:
                description: "Parameters to create RAID group from the disks and add it to the pool."
                type: object
                properties:
                  dskGroup:
                    description: "Disk Group identifier."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the diskGroup instance."
                  numDisks:
                    description: "Number of disks."
                    type: integer
                  raidType:
                    description: "RAID type (or RAID level)."
                    $ref: '#/definitions/RaidTypeEnum'
                  stripeWidth:
                    description: "Stripe width (or RAID modulus)."
                    $ref: '#/definitions/RaidStripeWidthEnum'
                  spareDriveCount:
                    description: "Number of hot spare drives capacity."
                    type: integer
            addPoolUnitParameters:
              description: "Pool capacity units (now Virtual Disks only) with associated parameters to add to the pool without RAID protection."
              type: array
              items:
                description: "Parameters for adding a pool unit to a pool, or modifying a pool unit.
  At this time, only virtual disk type pool units can be modified."
                type: object
                properties:
                  poolUnit:
                    description: "Pool unit for which these parameters are being specified.
  Indeed it is Virtual Disk identifier, but in the future 
  it can be the other pool unit object types allowed."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the pool unit instance."
                  name:
                    description: "Pool unit name.
  Can be used for Virtual Disk modification only."
                    type: string
                  tierType:
                    description: "Tier type. 
  If virtualDisk tier type is unknown
  it can be specified at the time of adding to pool."
                    $ref: '#/definitions/TierTypeEnum'
            alertThreshold:
              type: integer
            poolSpaceHarvestHighThreshold:
              description: "(Applies when the automatic deletion of snapshots based on pool space usage is enabled for the system and pool.)  <br> <br> Pool used space high threshold at which the system will automatically starts to delete snapshots in the pool, specified as a percentage with .01% granularity.  <br> <br> This threshold is based on the percentage of space used in the pool by all types of objects compared to the total pool size. When the percentage of used space reaches this threshold, the system automatically starts to delete snapshots in the pool, until a low threshold is reached."
              type: number
              format: float
            poolSpaceHarvestLowThreshold:
              description: "(Applies when the automatic deletion of snapshots based on pool space usage is enabled for the system and pool.)  <br> <br> Pool used space low threshold under which the system will automatically stop deletion of snapshots in the pool, specified as a percentage with .01% granularity.  <br> <br> This threshold is based on the percentage of space in the pool used by all types of obejcts compared to the total pool size. When the percentage of used space in the pool falls below this threshold, the system stops the automatic deletion of snapshots in the pool, until a high threshold is reached again."
              type: number
              format: float
            snapSpaceHarvestHighThreshold:
              description: "(Applies when the automatic deletion of snapshots based on snapshot space usage is enabled for the system and pool.)  <br> <br> Snapshot used space high threshold at which the system automatically starts to delete snapshots in the pool, specified as a percentage with .01% granularity.  <br> <br> This threshold is based on the percentage of pool space used by snapshot objects only compared with the total pool size. When the percentage of space used by snapshots reaches this threshold, the system automatically starts to delete snapshots in the pool, until a low threshold is reached."
              type: number
              format: float
            snapSpaceHarvestLowThreshold:
              description: "(Applies when the automatic deletion of snapshots based on snapshot space usage is enabled for the system and the pool.)  <br> <br> Snapshot used space low threshold below which the system will stop automatically deleting snapshots in the pool, specified as a percentage with .01% granularity.  <br> <br> This threshold is based on the percentage of space used by snapshot objects only as compared to the total pool size. When the percentage of space used by snapshots falls below this threshold, the system stops automatically deleting snapshots in the pool, until a high threshold is reached again."
              type: number
              format: float
            isHarvestEnabled:
              description: "Indicates whether to enable pool space harvesting (the automatic deletion of snapshots based on pool space usage) for the pool. Values are:  <ul> <li>true - Enable pool harvesting for the pool.</li> <li>false - Disable pool harvesting for the pool.</li> </ul>"
              type: boolean
            isSnapHarvestEnabled:
              description: "Indicates whether to enable snapshot harvesting (the automatic deletion of snapshots based on snapshot space usage) for the pool. Values are:  <ul> <li>true - Enable snapshot harvesting for the pool.</li> <li>false - Disable snapshot harvesting for the pool.</li> </ul>"
              type: boolean
            isFASTCacheEnabled:
              description: "(Applies if a FAST Cache license is installed on the system.) Indicates whether to enable the FAST Cache for the pool. Values are:  <ul>"
              type: boolean
            isFASTVpScheduleEnabled:
              description: "(Applies when a FAST VP license is installed on the system.) Indicates whether to enable scheduled data relocations for the pool. Values are:  <ul> <li>true - Enable scheduled data relocations for the pool.</li> <li>false - Disable scheduled data relocations for the pool.</li>  </ul>"
              type: boolean
      tags:
      - pool
      description: "Modifies the existing pool: allows to expand pool capacity and/or modify different parameters of the pool."
      operationId: pool_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 06. Modify pool by name
  /api/types/pool/action/recommendAutoConfiguration:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      tags:
      - pool
      description: "Recommend a list of pool configurations for the storage system."
      operationId: pool_recommendAutoConfiguration
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  poolConfigurations:
                    description: "The list of recommended pool configurations, as defined by the poolSetting type."
                    type: array
                    items:
                      description: "System-recommended pool configuration settings. Instances of this resource
  type contain the output of the pool resource type's RecommendAutoConfiguration
  operation."
                      type: object
                      properties:
                        name:
                          description: "Pool name."
                          type: string
                        description:
                          description: "Pool description."
                          type: string
                        storageConfiguration:
                          description: "Recommended configuration of the storage tier in the recommended pool, as
  defined by the storageCapabilityEstimation resource type."
                          type: object
                          properties:
                            storageTier:
                              description: "Storage tier for which you want to obtain proposed configurations as defined
  by the storageCapability resource type."
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: "Unique identifier of the storageTier instance."
                            raidType:
                              description: "(Applies to physical deployments only.) RAID type of the proposed storage configuration."
                              $ref: '#/definitions/RaidTypeEnum'
                            stripeWidth:
                              description: "(Applies to physical deployments only.) Stripe width of the proposed storage configuration."
                              $ref: '#/definitions/RaidStripeWidthEnum'
                            disksTotal:
                              description: "(Applies to physical deployments only.) Total number of disks in system that can be configured with the specified disk
  type, RAID type, and stripe width."
                              type: integer
                            sizeTotal:
                              description: "Maximum usable capacity for the specified storage configuration if all
  available disks are used for the configuration."
                              type: integer
                            diskGroupConfigurations:
                              description: "(Applies to physical deployments only.) Possible amounts of disks and capacities for each diskGroup that contains
  disks of type corresponding to storageCapability (NVMe, EFD, SAS, NL-SAS)"
                              type: array
                              items:
                                description: "Set of possible disk selections for a storage tier, given a specified RAID
  type (or RAID Level) and stripe width (or RAID modulus)."
                                type: object
                                properties:
                                  diskGroup:
                                    description: "Disk group from which to take disks for the storage tier configuration."
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                        description: "Unique identifier of the diskGroup instance."
                                  unusedDisks:
                                    description: "Number of unused disks."
                                    type: integer
                                  tierType:
                                    description: "Tier type."
                                    $ref: '#/definitions/TierTypeEnum'
                                  partNumber:
                                    description: "Part number for the disks."
                                    type: string
                                  diskRpm:
                                    type: integer
                                  advertisedSize:
                                    description: "Disk capacity written on the label of the disks."
                                    type: integer
                                  diskSize:
                                    description: "Disk capacity."
                                    type: integer
                                  raidGroupConfigurations:
                                    description: "Comma-separated list of allowed RAID group configurations."
                                    type: array
                                    items:
                                      description: "RAID group configurations for particular tier."
                                      $ref: '#/definitions/raidGroupConfiguration'
                                  diskTechnology:
                                    description: "Disk technology of the disks."
                                    $ref: '#/definitions/DiskTechnologyEnum'
                                  isDefault:
                                    description: "Indicates whether the configuration is the default. Values are:
  <ul>
  <li>Storage tier configuration is the default configuration.</li>
  <li>Storage tier configuration is not the default configuration.>/li>
  </ul>"
                                    type: boolean
                                  minHotSpareCandidates:
                                    description: "Minimum number of hot spares required for existing traditional pool(s) 
  in the disk group. Can be 0 if no traditional pool uses this disk group.
  As a rule one Hot spare is required per 30 disks."
                                    type: integer
                        alertThreshold:
                          description: "Threshold at which the system will generate notifications about the amount of
  space remaining in the pool, specified as a percentage with 1% granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of allocated storage in the pool
  compared to the total pool size."
                          type: integer
                        poolSpaceHarvestHighThreshold:
                          description: "(Applies when the automatic deletion of snapshots based on pool space usage is
  enabled for the system and pool.)
  <br/>
  <br/>
  Pool used space high threshold at which the system will automatically delete
  snapshots in the pool, specified as a percentage with .01% granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of used space in the pool compared
  to the total pool size. When the percentage of used space reaches this
  threshold, the system automatically deletes snapshots in the pool, until a low
  threshold is reached."
                          type: number
                          format: float
                        poolSpaceHarvestLowThreshold:
                          description: "(Applies when the automatic deletion of snapshots based on pool space usage is
  enabled for the system and pool.)
  <br/>
  <br/>
  Pool used space low threshold under which the system will stop automatically
  deleting snapshots in the pool, specified as a percentage with .01% granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of used pool space compared to the
  total pool size. When the percentage of used space in the pool falls below this
  threshold, the system stops the automatic deletion of snapshots in the pool,
  until a high threshold is reached."
                          type: number
                          format: float
                        snapSpaceHarvestHighThreshold:
                          description: "(Applies when the automatic deletion of snapshots based on snapshot space
  usage is enabled for the system and the pool.)
  <br/>
  <br/>
  Snapshot used space high threshold at which the system will automatically
  delete snapshots in the pool, specified as a percentage with .01% granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of space used by pool snapshots
  compared to the total pool size. When the percentage of space used by snapshots
  reaches this threshold, the system automatically deletes snapshots in the pool,
  until a low threshold is reached."
                          type: number
                          format: float
                        snapSpaceHarvestLowThreshold:
                          description: "(Applies when the automatic deletion of snapshots based on snapshot space
  usage is enabled for the system and the pool.)
  <br/>
  <br/>
  Snapshot used space low threshold under which the system will stop
  automatically delete snapshots in the pool, specified as a percentage with .01%
  granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of space used by pool snapshots
  compared to the total pool size. When the percentage of space used by pool
  snapshots falls below this threshold, the system stops the automatic deletion
  of snapshots in the pool, until a high threshold is reached."
                          type: number
                          format: float
                        isFastCacheEnabled:
                          description: "(Applies if a FAST Cache license is installed on the system.) Indicates
  whether the pool will be used in the FAST Cache. Values are:
  <ul>
  <li>true - FAST Cache will be enabled for this pool.</li>
  <li>false - FAST Cache will be disabled for this pool.</li>
  </ul>"
                          type: boolean
                        isFASTVpScheduleEnabled:
                          description: "(Applies if a FAST VP license is installed on the storage system.) Indicates
  whether to enable scheduled data relocations for the pool. Values are:
  <ul>
  <li>true - Enable scheduled data relocations for the pool.</li>
  <li>false - Disable scheduled data relocations for the pool.</li>
  </ul>"
                          type: boolean
                        isDiskTechnologyMixed:
                          description: "Indicates whether the pool contains drives with different drive technologies,
  such as NVMe, FLASH, SAS and NL-SAS. Values are:
  <ul>
  <li>true - Pool contains drives with different drive technologies.</li>
  <li>false - Pool does not contain drives with different drive technologies.</li>
  </ul>"
                          type: boolean
                        maxSizeLimit:
                          description: "Maximum pool capacity recommended for the storage system."
                          type: integer
                        maxDiskNumberLimit:
                          description: "Maximum number of drives recommended for the storage system."
                          type: integer
                        isMaxSizeLimitExceeded:
                          description: "Indicates whether the total size of all recommended pools exceeds that allowed
  by the storage system. Values are:
  <ul>
  <li>true - Total size of all recommended pools exceeds that allowed by the storage
  system.</li>
  <li>false - Total size of all recommended pools does not exceed that alllowed by the
  storage system.</li>
  <ul>"
                          type: boolean
                        isMaxDiskNumberLimitExceeded:
                          description: "Indicates whether the total number of drives in the recommended pools exceeds
  that allowed by the storage system. Values are:
  <ul>
  <li>true - Total size of all recommended pools exceeds that allowed by the storage
  system.</li>
  <li>false - Total size of all recommended pools does not exceed that alllowed by the
  storage system.</li>
  <ul>"
                          type: boolean
                        isRPMMixed:
                          description: "Indicates whether the pool contains drives with different rotational speeds.
  Values are:
  <ul>
  <li>true - Pool contains drives with different rotational speeds.</li>
  <li>false - Pool does not contain drives with different rotational speeds.</li>
  </ul>"
                          type: boolean
      summary: 07. RecommendAutoConfiguration pool
  /api/instances/pool/{id}/action/startRelocation:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the pool instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            endTime:
              description: "Date and time at which to stop the data relocation operation."
              type: string
              format: date-time
            relocationRate:
              description: "Data relocation rate."
              $ref: '#/definitions/FastVPRelocationRateEnum'
      tags:
      - pool
      description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  Initiate data relocation on the pool."
      operationId: pool_startRelocation
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 08. StartRelocation pool by id
  /api/instances/pool/name:{name}/action/startRelocation:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Pool name, unique in the storage system."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            endTime:
              description: "Date and time at which to stop the data relocation operation."
              type: string
              format: date-time
            relocationRate:
              description: "Data relocation rate."
              $ref: '#/definitions/FastVPRelocationRateEnum'
      tags:
      - pool
      description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  Initiate data relocation on the pool."
      operationId: pool_startRelocation_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 09. StartRelocation pool by name
  /api/instances/pool/{id}/action/stopRelocation:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the pool instance."
        required: true
        type: string
      tags:
      - pool
      description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  Stop data relocation on the pool."
      operationId: pool_stopRelocation
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 10. StopRelocation pool by id
  /api/instances/pool/name:{name}/action/stopRelocation:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Pool name, unique in the storage system."
        required: true
        type: string
      tags:
      - pool
      description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  Stop data relocation on the pool."
      operationId: pool_stopRelocation_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 11. StopRelocation pool by name
  /api/instances/pool/{id}/action/getStorageTierConfiguration:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the pool instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [tierType,raidType,stripeWidth]
          properties:
            tierType:
              description: "Type of the tier."
              $ref: '#/definitions/TierTypeEnum'
            raidType:
              description: "Preferred RAID type (RAID level) for the storage tier."
              $ref: '#/definitions/RaidTypeEnum'
            stripeWidth:
              description: "Preferred RAID stripe width (RAID modulus) for the tier."
              $ref: '#/definitions/RaidStripeWidthEnum'
      tags:
      - pool
      description: "Return all possible RAID configurations for the specified tier type,
  RAID type, stripe width, for a specific pool. Applied to traditional pools only."
      operationId: pool_getStorageTierConfiguration
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageConfiguration:
                    description: "All possible configurations for the tier,
  as defined by the storageTierConfiguration embedded object."
                    type: object
                    properties:
                      storageTier:
                        description: "Storage tier for which you want to obtain proposed configurations as defined
  by the storageCapability resource type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the storageTier instance."
                      raidType:
                        description: "(Applies to physical deployments only.) RAID type of the proposed storage configuration."
                        $ref: '#/definitions/RaidTypeEnum'
                      stripeWidth:
                        description: "(Applies to physical deployments only.) Stripe width of the proposed storage configuration."
                        $ref: '#/definitions/RaidStripeWidthEnum'
                      disksTotal:
                        description: "(Applies to physical deployments only.) Total number of disks in system that can be configured with the specified disk
  type, RAID type, and stripe width."
                        type: integer
                      sizeTotal:
                        description: "Maximum usable capacity for the specified storage configuration if all
  available disks are used for the configuration."
                        type: integer
                      diskGroupConfigurations:
                        description: "(Applies to physical deployments only.) Possible amounts of disks and capacities for each diskGroup that contains
  disks of type corresponding to storageCapability (NVMe, EFD, SAS, NL-SAS)"
                        type: array
                        items:
                          description: "Set of possible disk selections for a storage tier, given a specified RAID
  type (or RAID Level) and stripe width (or RAID modulus)."
                          type: object
                          properties:
                            diskGroup:
                              description: "Disk group from which to take disks for the storage tier configuration."
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: "Unique identifier of the diskGroup instance."
                            unusedDisks:
                              description: "Number of unused disks."
                              type: integer
                            tierType:
                              description: "Tier type."
                              $ref: '#/definitions/TierTypeEnum'
                            partNumber:
                              description: "Part number for the disks."
                              type: string
                            diskRpm:
                              type: integer
                            advertisedSize:
                              description: "Disk capacity written on the label of the disks."
                              type: integer
                            diskSize:
                              description: "Disk capacity."
                              type: integer
                            raidGroupConfigurations:
                              description: "Comma-separated list of allowed RAID group configurations."
                              type: array
                              items:
                                description: "RAID group configurations for particular tier."
                                $ref: '#/definitions/raidGroupConfiguration'
                            diskTechnology:
                              description: "Disk technology of the disks."
                              $ref: '#/definitions/DiskTechnologyEnum'
                            isDefault:
                              description: "Indicates whether the configuration is the default. Values are:
  <ul>
  <li>Storage tier configuration is the default configuration.</li>
  <li>Storage tier configuration is not the default configuration.>/li>
  </ul>"
                              type: boolean
                            minHotSpareCandidates:
                              description: "Minimum number of hot spares required for existing traditional pool(s) 
  in the disk group. Can be 0 if no traditional pool uses this disk group.
  As a rule one Hot spare is required per 30 disks."
                              type: integer
      summary: 12. GetStorageTierConfiguration pool by id
  /api/instances/pool/name:{name}/action/getStorageTierConfiguration:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: name
        in: path
        description: "Pool name, unique in the storage system."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [tierType,raidType,stripeWidth]
          properties:
            tierType:
              description: "Type of the tier."
              $ref: '#/definitions/TierTypeEnum'
            raidType:
              description: "Preferred RAID type (RAID level) for the storage tier."
              $ref: '#/definitions/RaidTypeEnum'
            stripeWidth:
              description: "Preferred RAID stripe width (RAID modulus) for the tier."
              $ref: '#/definitions/RaidStripeWidthEnum'
      tags:
      - pool
      description: "Return all possible RAID configurations for the specified tier type,
  RAID type, stripe width, for a specific pool. Applied to traditional pools only."
      operationId: pool_getStorageTierConfiguration_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageConfiguration:
                    description: "All possible configurations for the tier,
  as defined by the storageTierConfiguration embedded object."
                    type: object
                    properties:
                      storageTier:
                        description: "Storage tier for which you want to obtain proposed configurations as defined
  by the storageCapability resource type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the storageTier instance."
                      raidType:
                        description: "(Applies to physical deployments only.) RAID type of the proposed storage configuration."
                        $ref: '#/definitions/RaidTypeEnum'
                      stripeWidth:
                        description: "(Applies to physical deployments only.) Stripe width of the proposed storage configuration."
                        $ref: '#/definitions/RaidStripeWidthEnum'
                      disksTotal:
                        description: "(Applies to physical deployments only.) Total number of disks in system that can be configured with the specified disk
  type, RAID type, and stripe width."
                        type: integer
                      sizeTotal:
                        description: "Maximum usable capacity for the specified storage configuration if all
  available disks are used for the configuration."
                        type: integer
                      diskGroupConfigurations:
                        description: "(Applies to physical deployments only.) Possible amounts of disks and capacities for each diskGroup that contains
  disks of type corresponding to storageCapability (NVMe, EFD, SAS, NL-SAS)"
                        type: array
                        items:
                          description: "Set of possible disk selections for a storage tier, given a specified RAID
  type (or RAID Level) and stripe width (or RAID modulus)."
                          type: object
                          properties:
                            diskGroup:
                              description: "Disk group from which to take disks for the storage tier configuration."
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: "Unique identifier of the diskGroup instance."
                            unusedDisks:
                              description: "Number of unused disks."
                              type: integer
                            tierType:
                              description: "Tier type."
                              $ref: '#/definitions/TierTypeEnum'
                            partNumber:
                              description: "Part number for the disks."
                              type: string
                            diskRpm:
                              type: integer
                            advertisedSize:
                              description: "Disk capacity written on the label of the disks."
                              type: integer
                            diskSize:
                              description: "Disk capacity."
                              type: integer
                            raidGroupConfigurations:
                              description: "Comma-separated list of allowed RAID group configurations."
                              type: array
                              items:
                                description: "RAID group configurations for particular tier."
                                $ref: '#/definitions/raidGroupConfiguration'
                            diskTechnology:
                              description: "Disk technology of the disks."
                              $ref: '#/definitions/DiskTechnologyEnum'
                            isDefault:
                              description: "Indicates whether the configuration is the default. Values are:
  <ul>
  <li>Storage tier configuration is the default configuration.</li>
  <li>Storage tier configuration is not the default configuration.>/li>
  </ul>"
                              type: boolean
                            minHotSpareCandidates:
                              description: "Minimum number of hot spares required for existing traditional pool(s) 
  in the disk group. Can be 0 if no traditional pool uses this disk group.
  As a rule one Hot spare is required per 30 disks."
                              type: integer
      summary: 13. GetStorageTierConfiguration pool by name
  /api/types/poolConsumer/instances:
    get:
      tags:
      - poolConsumer
      description: 'Collection query'
      operationId: poolConsumer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/poolConsumer'
      summary: 1. Get all poolConsumer
  /api/instances/poolConsumer/{id}:
    get:
      tags:
      - poolConsumer
      description: 'Instance query'
      operationId: poolConsumer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique ID of object."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/poolConsumer'
      summary: 2. Get poolConsumer by id
  /api/instances/poolConsumer/name:{name}:
    get:
      tags:
      - poolConsumer
      description: 'Instance query'
      operationId: poolConsumer_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Name of the pool consumer object."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/poolConsumer'
      summary: 3. Get poolConsumer by name
  /api/types/poolConsumerAllocation/instances:
    get:
      tags:
      - poolConsumerAllocation
      description: 'Collection query'
      operationId: poolConsumerAllocation_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/poolConsumerAllocation'
      summary: 1. Get all poolConsumerAllocation
  /api/instances/poolConsumerAllocation/{id}:
    get:
      tags:
      - poolConsumerAllocation
      description: 'Instance query'
      operationId: poolConsumerAllocation_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique ID of poolConsumerAllocation object."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/poolConsumerAllocation'
      summary: 2. Get poolConsumerAllocation by id
  /api/types/poolUnit/instances:
    get:
      tags:
      - poolUnit
      description: 'Collection query'
      operationId: poolUnit_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/poolUnit'
      summary: 1. Get all poolUnit
  /api/instances/poolUnit/{id}:
    get:
      tags:
      - poolUnit
      description: 'Instance query'
      operationId: poolUnit_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the pool unit instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/poolUnit'
      summary: 2. Get poolUnit by id
  /api/instances/poolUnit/name:{name}:
    get:
      tags:
      - poolUnit
      description: 'Instance query'
      operationId: poolUnit_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Name of the pool unit instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/poolUnit'
      summary: 3. Get poolUnit by name
  /api/types/powerSupply/instances:
    get:
      tags:
      - powerSupply
      description: 'Collection query'
      operationId: powerSupply_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/powerSupply'
      summary: 1. Get all powerSupply
  /api/instances/powerSupply/{id}:
    get:
      tags:
      - powerSupply
      description: 'Instance query'
      operationId: powerSupply_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the powerSupply instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/powerSupply'
      summary: 2. Get powerSupply by id
  /api/instances/powerSupply/name:{name}:
    get:
      tags:
      - powerSupply
      description: 'Instance query'
      operationId: powerSupply_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Power supply name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/powerSupply'
      summary: 3. Get powerSupply by name
  /api/types/preferredInterfaceSettings/instances:
    get:
      tags:
      - preferredInterfaceSettings
      description: 'Collection query'
      operationId: preferredInterfaceSettings_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/preferredInterfaceSettings'
      summary: 1. Get all preferredInterfaceSettings
  /api/instances/preferredInterfaceSettings/{id}:
    get:
      tags:
      - preferredInterfaceSettings
      description: 'Instance query'
      operationId: preferredInterfaceSettings_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the Preferred Interface Settings object."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/preferredInterfaceSettings'
      summary: 2. Get preferredInterfaceSettings by id
  /api/instances/preferredInterfaceSettings/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the Preferred Interface Settings object."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            productionIpV4:
              description: "Requested IPv4 production preferred interfaces. Empty string or null to unset."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the fileInterface instance."
            productionIpV6:
              description: "Requested IPv6 production preferred interfaces. Empty string or null to unset."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the fileInterface instance."
            backupIpV4:
              description: "Requested IPv4 backup preferred interfaces. Empty string or null to unset."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the fileInterface instance."
            backupIpV6:
              description: "Requested IPv6 backup preferred interfaces. Empty string or null to unset."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the fileInterface instance."
            replicationPolicy:
              description: "Replication policy of the production preferred interfaces."
              $ref: '#/definitions/ReplicationPolicyEnum'
      tags:
      - preferredInterfaceSettings
      description: "Modify Preferred Interface Settings.
  <p/>
  To set a type/class group to automatic selection, unset the corresponding parameter.
  <p/>
  On the destination side of the active replication session:
      <li>To override the production preferred interface settings, set any of the production
      settings to any value, including the same it has now.</li>
      <li>Setting the replicationPolicy to 'Overridden' makes the production preferred interface settings
      overridden w/o changing their current values.</li>
      <li>To reset the overridden settings to the replicated state, set the replicationPolicy to 'Replicated'.</li>
  Without the active replication session or on the source side of such session:
       <li>Setting the replicationPolicy to any value results in error.</li>
  <p/>
  The full logics of these settings is described in the class description above."
      operationId: preferredInterfaceSettings_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify preferredInterfaceSettings by id
  /api/types/quotaConfig/instances:
    get:
      tags:
      - quotaConfig
      description: 'Collection query'
      operationId: quotaConfig_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/quotaConfig'
      summary: 1. Get all quotaConfig
  /api/instances/quotaConfig/{id}:
    get:
      tags:
      - quotaConfig
      description: 'Instance query'
      operationId: quotaConfig_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/quotaConfig'
      summary: 2. Get quotaConfig by id
  /api/instances/quotaConfig/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            quotaPolicy:
              description: "Quota policy. <br> Per fs configuration. The quota policy of a quota tree is derived from the file system. <br> Can not be used with isUserQuotaEnabled in the same request."
              $ref: '#/definitions/QuotaPolicyEnum'
            isUserQuotaEnabled:
              description: "Whether user quotas are enabled. <br> Can not be used with quotaPolicy in the same request."
              type: boolean
            deleteUserQuotasWithDisable:
              description: "Whether to delete user quotas when disabling user quotas (isUserQuotaEnabled=true)."
              type: boolean
            isAccessDenyEnabled:
              description: "Whether access will be denied when the limit is exceeded."
              type: boolean
            gracePeriod:
              description: "Grace period of soft limits."
              type: integer
            defaultHardLimit:
              description: "Default hard limit of user quotas and tree quotas."
              type: integer
            defaultSoftLimit:
              description: "Default soft limit of user quotas and tree quotas."
              type: integer
      tags:
      - quotaConfig
      description: "Modify a quota configuration of either a file system or a quota tree."
      operationId: quotaConfig_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify quotaConfig by id
  /api/instances/quotaConfig/{id}/action/updateTreeQuotas:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier."
        required: true
        type: string
      tags:
      - quotaConfig
      description: "Update all tree quota objects within a file system.
 <br> The method is only available for the quotaConfig instance relating to the file system.
 <br> Most properties in the treeQuota object are kept up to date, however two properties 
  relating to statistic data (remainingGracePeriod and sizeUsed) are updated only per 24 hours
  by default. The method will manually update treeQuota objects including their statistic 
  properties in a file system immediately."
      operationId: quotaConfig_updateTreeQuotas
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. UpdateTreeQuotas quotaConfig by id
  /api/instances/quotaConfig/{id}/action/updateUserQuotas:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            isUpdateNames:
              description: "Indicates whether to refresh user name in user quota report. 
  Usually user name doesn’t change often. And user name will be refreshed once 24 hours automatically."
              type: boolean
      tags:
      - quotaConfig
      description: "Update all user quota objects within a file system or a quota tree.
 <br> Most properties in the userQuota object are kept up to date, however two properties 
  relating to statistic data (remainingGracePeriod and sizeUsed) are updated only per 24 hours 
  by default. The method will manually update userQuota objects including their statistic 
  properties in a file system or a quota tree immediately."
      operationId: quotaConfig_updateUserQuotas
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. UpdateUserQuotas quotaConfig by id
  /api/types/raidGroup/instances:
    get:
      tags:
      - raidGroup
      description: 'Collection query'
      operationId: raidGroup_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/raidGroup'
      summary: 1. Get all raidGroup
  /api/instances/raidGroup/{id}:
    get:
      tags:
      - raidGroup
      description: 'Instance query'
      operationId: raidGroup_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the RAID Group object."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/raidGroup'
      summary: 2. Get raidGroup by id
  /api/instances/raidGroup/name:{name}:
    get:
      tags:
      - raidGroup
      description: 'Instance query'
      operationId: raidGroup_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "RAID Group name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/raidGroup'
      summary: 3. Get raidGroup by name
  /api/types/remoteInterface/instances:
    get:
      tags:
      - remoteInterface
      description: 'Collection query'
      operationId: remoteInterface_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/remoteInterface'
      summary: 1. Get all remoteInterface
  /api/instances/remoteInterface/{id}:
    get:
      tags:
      - remoteInterface
      description: 'Instance query'
      operationId: remoteInterface_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/remoteInterface'
      summary: 2. Get remoteInterface by id
  /api/instances/remoteInterface/name:{name}:
    get:
      tags:
      - remoteInterface
      description: 'Instance query'
      operationId: remoteInterface_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "User-specified remote interface name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/remoteInterface'
      summary: 3. Get remoteInterface by name
  /api/types/remoteSyslog/instances:
    get:
      tags:
      - remoteSyslog
      description: 'Collection query'
      operationId: remoteSyslog_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/remoteSyslog'
      summary: 1. Get all remoteSyslog
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [address]
          properties:
            enabled:
              description: "Indicates whether logging to the remote log is enabled, default value is true. 
     Values are: <ul> <li>true - Logging to the remote log is enabled.</li> <li>false - Logging to the remote log is disabled.</li> </ul>"
              type: boolean
            address:
              description: "IP address of the host where the storage system stores the remote log information. By default, the storage system transfers log information on port 514."
              type: string
            protocol:
              description: "Protocol used to transfer messages to the remote log. The default protocol is UDP."
              $ref: '#/definitions/IpProtocolTypeEnum'
            facility:
              description: "Type of information to record in the remote system log. It is recommended that you specify 1 (User-level-Messages) for this value."
              $ref: '#/definitions/RemoteSyslogFacilityTypeEnum'
            locale:
              description: "Language used to record log messages in the remote log, default locale is en_US."
              $ref: '#/definitions/LocaleEnum'
            severity:
              description: "The least severity level to record log messages in the remote log."
              $ref: '#/definitions/SeverityEnum'
      tags:
      - remoteSyslog
      description: "Create remote log settings."
      operationId: remoteSyslog_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new remoteSyslog instance."
                    type: string
      summary: 3. Create remoteSyslog
  /api/instances/remoteSyslog/{id}:
    get:
      tags:
      - remoteSyslog
      description: 'Instance query'
      operationId: remoteSyslog_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the remoteSyslog instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/remoteSyslog'
      summary: 2. Get remoteSyslog by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the remoteSyslog instance."
        required: true
        type: string
      tags:
      - remoteSyslog
      description: "Delete a remote log setting"
      operationId: remoteSyslog_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete remoteSyslog by id
  /api/instances/remoteSyslog/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the remoteSyslog instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            enabled:
              description: "Indicates whether  logging to the remote log is enabled. Values are: <ul> <li>true - Logging to the remote log is enabled.</li> <li>false - Logging to the remote log is disabled.</li> </ul>"
              type: boolean
            address:
              description: "IP address of the host where the storage system stores the remote log information. By default, the storage system transfers log information on port 514."
              type: string
            protocol:
              description: "Protocol used to transfer messages to the remote log. The default protocol is UDP."
              $ref: '#/definitions/IpProtocolTypeEnum'
            facility:
              description: "Type of information to record in the remote system log. It is recommended that you specify 1 (User-level-Messages) for this value."
              $ref: '#/definitions/RemoteSyslogFacilityTypeEnum'
            locale:
              description: "Language used to record log messages in the remote log."
              $ref: '#/definitions/LocaleEnum'
            severity:
              description: "The least severity level to record log messages in the remote log."
              $ref: '#/definitions/SeverityEnum'
      tags:
      - remoteSyslog
      description: "Modify remote log settings."
      operationId: remoteSyslog_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify remoteSyslog by id
  /api/types/remoteSystem/instances:
    get:
      tags:
      - remoteSystem
      description: 'Collection query'
      operationId: remoteSystem_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/remoteSystem'
      summary: 01. Get all remoteSystem
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [managementAddress]
          properties:
            managementAddress:
              description: "Management IP address of the remote system."
              type: string
            localUsername:
              description: "Local administrative username used for reverse direction communications from the remote system."
              type: string
            localPassword:
              description: "Local administrative password used for reverse direction communications from the remote system."
              type: string
            remoteUsername:
              description: "Remote username used to access the remote system."
              type: string
            remotePassword:
              description: "Remote password used to access the remote system."
              type: string
            connectionType:
              description: "Replication connection type to the remote system."
              $ref: '#/definitions/ReplicationCapabilityEnum'
            bandwidthSchedules:
              description: "A list of bandwidth schedules configured for asynchronous replications on this remote system. The first matched (by comparing current time with the days of the week plus the hours of the day of the bandwidth schedule) bandwidth schedule's bandwidth takes effect in that all asynchronous replication sessions on this remote system as source role with active data transfer due to either RPO or manual sync would evenly share the bandwidth."
              type: array
              items:
                description: "Information about remote system bandwidth schedule.
  This object specifies the maximum bandwidth that would be evenly shared by all asynchronous replications on a remote system with source role and having active data transfer due to either RPO or manual sync between the from hour and the to hour on the days of week. Please note the maximum bandwidth is a limit that all replication data transfer total speed should not exceed, the actual replication data transfer speed is up to physical network."
                $ref: '#/definitions/remoteSystemBandwidthSchedule'
      tags:
      - remoteSystem
      description: "Configure a remote system"
      operationId: remoteSystem_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier for the new remoteSystem instance."
                    type: string
      summary: 04. Create remoteSystem
  /api/instances/remoteSystem/{id}:
    get:
      tags:
      - remoteSystem
      description: 'Instance query'
      operationId: remoteSystem_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the remoteSystem instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/remoteSystem'
      summary: 02. Get remoteSystem by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the remoteSystem instance."
        required: true
        type: string
      tags:
      - remoteSystem
      description: "Delete the remote system configuration."
      operationId: remoteSystem_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 11. Delete remoteSystem by id
  /api/instances/remoteSystem/name:{name}:
    get:
      tags:
      - remoteSystem
      description: 'Instance query'
      operationId: remoteSystem_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "System name as reported by system.name on remote system."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/remoteSystem'
      summary: 03. Get remoteSystem by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "System name as reported by system.name on remote system."
        required: true
        type: string
      tags:
      - remoteSystem
      description: "Delete the remote system configuration."
      operationId: remoteSystem_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 12. Delete remoteSystem by name
  /api/instances/remoteSystem/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the remoteSystem instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            managementAddress:
              description: "Management IP address of the remote system."
              type: string
            username:
              description: "Username for accessing the remote system."
              type: string
            password:
              description: "Password for accessing the remote system."
              type: string
            connectionType:
              description: "Connection type to the remote system."
              $ref: '#/definitions/ReplicationCapabilityEnum'
            bandwidthSchedules:
              description: "A list of bandwidth schedules configured for asynchronous replications on this remote system. The first matched (by comparing current time with the days of the week plus the hours of the day of the bandwidth schedule) bandwidth schedule's bandwidth takes effect in that all asynchronous replication sessions on this remote system as source role with active data transfer due to either RPO or manual sync would evenly share the bandwidth."
              type: array
              items:
                description: "Information about remote system bandwidth schedule.
  This object specifies the maximum bandwidth that would be evenly shared by all asynchronous replications on a remote system with source role and having active data transfer due to either RPO or manual sync between the from hour and the to hour on the days of week. Please note the maximum bandwidth is a limit that all replication data transfer total speed should not exceed, the actual replication data transfer speed is up to physical network."
                $ref: '#/definitions/remoteSystemBandwidthSchedule'
      tags:
      - remoteSystem
      description: "Modify the remote system configuration."
      operationId: remoteSystem_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 05. Modify remoteSystem by id
  /api/instances/remoteSystem/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "System name as reported by system.name on remote system."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            managementAddress:
              description: "Management IP address of the remote system."
              type: string
            username:
              description: "Username for accessing the remote system."
              type: string
            password:
              description: "Password for accessing the remote system."
              type: string
            connectionType:
              description: "Connection type to the remote system."
              $ref: '#/definitions/ReplicationCapabilityEnum'
            bandwidthSchedules:
              description: "A list of bandwidth schedules configured for asynchronous replications on this remote system. The first matched (by comparing current time with the days of the week plus the hours of the day of the bandwidth schedule) bandwidth schedule's bandwidth takes effect in that all asynchronous replication sessions on this remote system as source role with active data transfer due to either RPO or manual sync would evenly share the bandwidth."
              type: array
              items:
                description: "Information about remote system bandwidth schedule.
  This object specifies the maximum bandwidth that would be evenly shared by all asynchronous replications on a remote system with source role and having active data transfer due to either RPO or manual sync between the from hour and the to hour on the days of week. Please note the maximum bandwidth is a limit that all replication data transfer total speed should not exceed, the actual replication data transfer speed is up to physical network."
                $ref: '#/definitions/remoteSystemBandwidthSchedule'
      tags:
      - remoteSystem
      description: "Modify the remote system configuration."
      operationId: remoteSystem_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 06. Modify remoteSystem by name
  /api/instances/remoteSystem/{id}/action/verify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the remoteSystem instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            connectionType:
              description: "Connection type to the remote system."
              $ref: '#/definitions/ReplicationCapabilityEnum'
      tags:
      - remoteSystem
      description: "Verify and update the remote system settings"
      operationId: remoteSystem_verify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 07. Verify remoteSystem by id
  /api/instances/remoteSystem/name:{name}/action/verify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "System name as reported by system.name on remote system."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            connectionType:
              description: "Connection type to the remote system."
              $ref: '#/definitions/ReplicationCapabilityEnum'
      tags:
      - remoteSystem
      description: "Verify and update the remote system settings"
      operationId: remoteSystem_verify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 08. Verify remoteSystem by name
  /api/instances/remoteSystem/{id}/action/failoverAllNasReplicationSessions:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the remoteSystem instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            force:
              description: "Skip pre-checks on replication sessions of a NAS server when a replication failover is issued. Values are:
  <ul>
  <li>true - Skip pre-checks.</li>
  <li>false - Do not skip pre-checks.</li>
  </ul>"
              type: boolean
      tags:
      - remoteSystem
      description: "Fail over all NAS servers and their file systems replication sessions which replicate from the selected remote system to the local system."
      operationId: remoteSystem_failoverAllNasReplicationSessions
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 09. FailoverAllNasReplicationSessions remoteSystem by id
  /api/instances/remoteSystem/name:{name}/action/failoverAllNasReplicationSessions:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "System name as reported by system.name on remote system."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            force:
              description: "Skip pre-checks on replication sessions of a NAS server when a replication failover is issued. Values are:
  <ul>
  <li>true - Skip pre-checks.</li>
  <li>false - Do not skip pre-checks.</li>
  </ul>"
              type: boolean
      tags:
      - remoteSystem
      description: "Fail over all NAS servers and their file systems replication sessions which replicate from the selected remote system to the local system."
      operationId: remoteSystem_failoverAllNasReplicationSessions_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 10. FailoverAllNasReplicationSessions remoteSystem by name
  /api/types/replicationInterface/instances:
    get:
      tags:
      - replicationInterface
      description: 'Collection query'
      operationId: replicationInterface_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/replicationInterface'
      summary: 1. Get all replicationInterface
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [sp,ipPort,ipAddress]
          properties:
            sp:
              description: "Storage processor on which the replication interface is running."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the storageProcessor instance."
            ipPort:
              description: "Physical port or link aggregation on the storage processor on which the interface is running, as defined by the ethernetPort resource type."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the ipPort instance."
            ipAddress:
              description: "IP address of the replication interface."
              type: string
            netmask:
              description: "IPv4 netmask for the replication interface, if it uses an IPv4 address."
              type: string
            v6PrefixLength:
              description: "IPv6 prefix length for the interface, if it uses an IPv6 address."
              type: integer
            gateway:
              description: "IPv4 or IPv6 gateway address for the replication interface."
              type: string
            vlanId:
              description: "Virtual Local Area Network (VLAN) identifier for the interface. The interface uses the identifier to accept packets that have matching VLAN tags.  <br> <br> Values are 0 - 4094. The default is 0, which means the packets to accept do not have VLAN tags."
              type: integer
      tags:
      - replicationInterface
      description: "Create a replication interface."
      operationId: replicationInterface_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new replicationInterface instance."
                    type: string
      summary: 4. Create replicationInterface
  /api/instances/replicationInterface/{id}:
    get:
      tags:
      - replicationInterface
      description: 'Instance query'
      operationId: replicationInterface_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the replicationInterface instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/replicationInterface'
      summary: 2. Get replicationInterface by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the replicationInterface instance."
        required: true
        type: string
      tags:
      - replicationInterface
      description: "Delete a replication interface."
      operationId: replicationInterface_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete replicationInterface by id
  /api/instances/replicationInterface/name:{name}:
    get:
      tags:
      - replicationInterface
      description: 'Instance query'
      operationId: replicationInterface_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Replication interface name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/replicationInterface'
      summary: 3. Get replicationInterface by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Replication interface name."
        required: true
        type: string
      tags:
      - replicationInterface
      description: "Delete a replication interface."
      operationId: replicationInterface_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete replicationInterface by name
  /api/instances/replicationInterface/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the replicationInterface instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            ipPort:
              description: "Unique identifier of the physical port or link aggregation on the storage processor on which the replication interface is running, as defined by the ipPort resource type."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the ipPort instance."
            ipAddress:
              description: "IP address of the replication interface."
              type: string
            netmask:
              description: "IPv4 netmask for the replication interface, if it uses an IPv4 address."
              type: string
            v6PrefixLength:
              description: "IPv6 prefix length for the replication interface, if it uses an IPv6 address."
              type: integer
            gateway:
              description: "IPv4 or IPv6 gateway address for the replication interface."
              type: string
            vlanId:
              description: "Virtual Local Area Network (VLAN) identifier for the replication interface. The interface uses the identifier to accept packets that have matching VLAN tags.  <br> <br> Values are 0 - 4094. The default is 0, which means that the packets to accept do not have VLAN tags."
              type: integer
      tags:
      - replicationInterface
      description: "Modify a replication interface configuration."
      operationId: replicationInterface_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify replicationInterface by id
  /api/instances/replicationInterface/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Replication interface name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            ipPort:
              description: "Unique identifier of the physical port or link aggregation on the storage processor on which the replication interface is running, as defined by the ipPort resource type."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the ipPort instance."
            ipAddress:
              description: "IP address of the replication interface."
              type: string
            netmask:
              description: "IPv4 netmask for the replication interface, if it uses an IPv4 address."
              type: string
            v6PrefixLength:
              description: "IPv6 prefix length for the replication interface, if it uses an IPv6 address."
              type: integer
            gateway:
              description: "IPv4 or IPv6 gateway address for the replication interface."
              type: string
            vlanId:
              description: "Virtual Local Area Network (VLAN) identifier for the replication interface. The interface uses the identifier to accept packets that have matching VLAN tags.  <br> <br> Values are 0 - 4094. The default is 0, which means that the packets to accept do not have VLAN tags."
              type: integer
      tags:
      - replicationInterface
      description: "Modify a replication interface configuration."
      operationId: replicationInterface_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify replicationInterface by name
  /api/types/replicationSession/instances:
    get:
      tags:
      - replicationSession
      description: 'Collection query'
      operationId: replicationSession_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/replicationSession'
      summary: 01. Get all replicationSession
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [srcResourceId,dstResourceId,maxTimeOutOfSync]
          properties:
            remoteSystem:
              description: "Unique identifier of the remote system in the replication session, as defined by the remoteSystem resource type."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the remoteSystem instance."
            srcSPAInterface:
              description: "(Applies to remote replication) Replication interface for the source SPA."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            srcSPBInterface:
              description: "(Applies to remote replication) Replication interface for the source SPB."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            dstSPAInterface:
              description: "(Applies to remote replication) Replication interface for the destination SPA."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            dstSPBInterface:
              description: "(Applies to remote replication) Replication interface for the destination SPB."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            srcResourceId:
              description: "Unique identifier of the source resource."
              type: string
            dstResourceId:
              description: "Unique identifier of the destination resource."
              type: string
            maxTimeOutOfSync:
              description: "Maximum time to wait before the system syncs the source and destination resources. Value of -1 specifies that automatic sync is not performed."
              type: integer
            autoInitiate:
              description: "(Applies to replication sessions with manual synchronization.) Indicates whether to perform the first replication sync (a full sync) automatically. Values are: <ul><li>true - Perform the first replication sync automatically.</li><li>false - Perform the first replication sync manually.</li></ul>"
              type: boolean
            name:
              description: "Name of the replication session"
              type: string
            members:
              description: "(Applies to replication sessions for Consistency groups) Specify member lun pairing between source and destination resource of the session."
              type: array
              items:
                description: "Member lun element pair details in a replication session. Applies to block storage resource replications."
                $ref: '#/definitions/lunMemberReplication'
            hourlySnapReplicationPolicy:
              description: "Hourly Snap Replication Policy."
              $ref: '#/definitions/snapReplicationPolicy'
            dailySnapReplicationPolicy:
              description: "Daily Snap Replication Policy."
              $ref: '#/definitions/snapReplicationPolicy'
            replicateExistingSnaps:
              description: "Whether or not to replicate snapshots already existing on the resource (one-time option at session creation time). Each replica of these snaps will inherit the source snap retention policy."
              type: boolean
            noAsyncSnapReplication:
              description: "Whether or not snap replication is enabled in asynchronous replication session. When enabled, snap replication is controlled by snap replication policy setting or user action."
              type: boolean
            cascadeReplicatedSnap:
              description: "Whether or not to replicate snap in the cascade replication session. When enabled, snap will be automatically replicated in this replication session when it is replicated from the inbound async replication session."
              type: boolean
            srcCommonBaseSnap:
              description: "Snapshot that used as common baseline snap for async replication session source side."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the snap instance."
            dstCommonBaseSnapId:
              description: "Unique identifier of the destination snapshot that used as common baseline snap for async replication session destination side."
              type: string
            skipSnapSignatureCheck:
              description: "Force to use snapshot as common baseline snap for async replication session."
              type: boolean
            enableCommonBaseAutoSearch:
              description: "Enable auto searching and pairing common base."
              type: boolean
            overwriteDestination:
              description: "For LUN/CG replications, normally the replication create will fail if the destination volume(s) have had data written to them. Enabling the overwriteDestination option, which defaults to false, will allow the replication creation to proceed, overwriting any data already on the destination LUN(s)."
              type: boolean
      tags:
      - replicationSession
      description: "Create a replication session. Replication can be configured between like type resources. Interface options are optional and applicable to inter-array replication."
      operationId: replicationSession_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new replication session"
                    type: string
      summary: 04. Create replicationSession
  /api/instances/replicationSession/{id}:
    get:
      tags:
      - replicationSession
      description: 'Instance query'
      operationId: replicationSession_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the replicationSession instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/replicationSession'
      summary: 02. Get replicationSession by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the replicationSession instance."
        required: true
        type: string
      tags:
      - replicationSession
      description: "Delete a replication session. This can be applied in any operational state of the session."
      operationId: replicationSession_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 21. Delete replicationSession by id
  /api/instances/replicationSession/name:{name}:
    get:
      tags:
      - replicationSession
      description: 'Instance query'
      operationId: replicationSession_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "User-specified replication session name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/replicationSession'
      summary: 03. Get replicationSession by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified replication session name."
        required: true
        type: string
      tags:
      - replicationSession
      description: "Delete a replication session. This can be applied in any operational state of the session."
      operationId: replicationSession_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 22. Delete replicationSession by name
  /api/instances/replicationSession/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the replicationSession instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            maxTimeOutOfSync:
              description: "Maximum time to wait before the system syncs the source and destination resources. Value of -1 specifies that automatic sync is not performed."
              type: integer
            name:
              description: "Name of the replication session."
              type: string
            srcSPAInterface:
              description: "(Applies to remote replication) Replication interface for the source SPA."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            srcSPBInterface:
              description: "(Applies to remote replication) Replication interface for the source SPB."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            dstSPAInterface:
              description: "(Applies to remote replication) Replication interface for the destination SPA."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            dstSPBInterface:
              description: "(Applies to remote replication) Replication interface for the destination SPB."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            hourlySnapReplicationPolicy:
              description: "Hourly Snap Replication Policy."
              $ref: '#/definitions/snapReplicationPolicy'
            dailySnapReplicationPolicy:
              description: "Daily Snap Replication Policy."
              $ref: '#/definitions/snapReplicationPolicy'
            noAsyncSnapReplication:
              description: "Whether or not snap replication is enabled in asynchronous replication session. When enabled, snap replication is controlled by snap replication policy setting or user action."
              type: boolean
            cascadeReplicatedSnap:
              description: "Whether or not to replicate snap in the cascade replication session. When enabled, snap will be automatically replicated in this replication session when it is replicated from the inbound async replication session."
              type: boolean
      tags:
      - replicationSession
      description: "Modify properties of a replication session."
      operationId: replicationSession_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 05. Modify replicationSession by id
  /api/instances/replicationSession/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified replication session name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            maxTimeOutOfSync:
              description: "Maximum time to wait before the system syncs the source and destination resources. Value of -1 specifies that automatic sync is not performed."
              type: integer
            name:
              description: "Name of the replication session."
              type: string
            srcSPAInterface:
              description: "(Applies to remote replication) Replication interface for the source SPA."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            srcSPBInterface:
              description: "(Applies to remote replication) Replication interface for the source SPB."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            dstSPAInterface:
              description: "(Applies to remote replication) Replication interface for the destination SPA."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            dstSPBInterface:
              description: "(Applies to remote replication) Replication interface for the destination SPB."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            hourlySnapReplicationPolicy:
              description: "Hourly Snap Replication Policy."
              $ref: '#/definitions/snapReplicationPolicy'
            dailySnapReplicationPolicy:
              description: "Daily Snap Replication Policy."
              $ref: '#/definitions/snapReplicationPolicy'
            noAsyncSnapReplication:
              description: "Whether or not snap replication is enabled in asynchronous replication session. When enabled, snap replication is controlled by snap replication policy setting or user action."
              type: boolean
            cascadeReplicatedSnap:
              description: "Whether or not to replicate snap in the cascade replication session. When enabled, snap will be automatically replicated in this replication session when it is replicated from the inbound async replication session."
              type: boolean
      tags:
      - replicationSession
      description: "Modify properties of a replication session."
      operationId: replicationSession_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 06. Modify replicationSession by name
  /api/instances/replicationSession/{id}/action/precheck:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the replicationSession instance."
        required: true
        type: string
      tags:
      - replicationSession
      description: "Precheck the replication session.
  Check for a common base snap of a sync replication session, and if it is a NAS Server session, also check each included filesystem replication session for a common base snap. 
  A common base snap is identified by the corresponding source and destination snap ids for the replicated common base snap. 
  The result will include each common base snap found, which may be an empty list."
      operationId: replicationSession_precheck
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  precheckOutput:
                    description: "The result of the precheck."
                    type: array
                    items:
                      $ref: '#/definitions/commonBaseSnap'
      summary: 07. Precheck replicationSession by id
  /api/instances/replicationSession/name:{name}/action/precheck:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: name
        in: path
        description: "User-specified replication session name."
        required: true
        type: string
      tags:
      - replicationSession
      description: "Precheck the replication session.
  Check for a common base snap of a sync replication session, and if it is a NAS Server session, also check each included filesystem replication session for a common base snap. 
  A common base snap is identified by the corresponding source and destination snap ids for the replicated common base snap. 
  The result will include each common base snap found, which may be an empty list."
      operationId: replicationSession_precheck_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  precheckOutput:
                    description: "The result of the precheck."
                    type: array
                    items:
                      $ref: '#/definitions/commonBaseSnap'
      summary: 08. Precheck replicationSession by name
  /api/instances/replicationSession/{id}/action/resume:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the replicationSession instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            srcSPAInterface:
              description: "(Applies to remote replication) Replication interface for the source SPA."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            srcSPBInterface:
              description: "(Applies to remote replication) Replication interface for the source SPB."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            dstSPAInterface:
              description: "(Applies to remote replication) Replication interface for the destination SPA."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            dstSPBInterface:
              description: "(Applies to remote replication) Replication interface for the destination SPB."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            forceFullCopy:
              description: "Indicates whether to force replicating all data from the source to the destination during the replication session resuming. <ul> <li>true - Replicate all data. <li>false - Replicate changed data only. </ul>"
              type: boolean
            forceDiscardDestinationChanges:
              description: "Normally an asynchronous replication session cannot be resumed when the destination is or has been mounted R/W and may have data written locally. The forceDiscardDestinationChanges option allows resume to proceed. <ul> <li>true - Resync the destination from the source, overwriting any data written to the destination while the replication was not active. <li>false - The resume command will fail if the destination is R/W and may have data written locally. </ul>"
              type: boolean
      tags:
      - replicationSession
      description: "Resume a replication session. This can be applied on replication session when it's operational status is reported as Failed over, or Paused. allowFullCopy or forceFullCopy option is needed when replication session goes out of sync due to a fault."
      operationId: replicationSession_resume
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 09. Resume replicationSession by id
  /api/instances/replicationSession/name:{name}/action/resume:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified replication session name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            srcSPAInterface:
              description: "(Applies to remote replication) Replication interface for the source SPA."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            srcSPBInterface:
              description: "(Applies to remote replication) Replication interface for the source SPB."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            dstSPAInterface:
              description: "(Applies to remote replication) Replication interface for the destination SPA."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            dstSPBInterface:
              description: "(Applies to remote replication) Replication interface for the destination SPB."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
            forceFullCopy:
              description: "Indicates whether to force replicating all data from the source to the destination during the replication session resuming. <ul> <li>true - Replicate all data. <li>false - Replicate changed data only. </ul>"
              type: boolean
            forceDiscardDestinationChanges:
              description: "Normally an asynchronous replication session cannot be resumed when the destination is or has been mounted R/W and may have data written locally. The forceDiscardDestinationChanges option allows resume to proceed. <ul> <li>true - Resync the destination from the source, overwriting any data written to the destination while the replication was not active. <li>false - The resume command will fail if the destination is R/W and may have data written locally. </ul>"
              type: boolean
      tags:
      - replicationSession
      description: "Resume a replication session. This can be applied on replication session when it's operational status is reported as Failed over, or Paused. allowFullCopy or forceFullCopy option is needed when replication session goes out of sync due to a fault."
      operationId: replicationSession_resume_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 10. Resume replicationSession by name
  /api/instances/replicationSession/{id}/action/pause:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the replicationSession instance."
        required: true
        type: string
      tags:
      - replicationSession
      description: "Pause a replication session. This can be applied to replication session when in OK state."
      operationId: replicationSession_pause
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 11. Pause replicationSession by id
  /api/instances/replicationSession/name:{name}/action/pause:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified replication session name."
        required: true
        type: string
      tags:
      - replicationSession
      description: "Pause a replication session. This can be applied to replication session when in OK state."
      operationId: replicationSession_pause_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 12. Pause replicationSession by name
  /api/instances/replicationSession/{id}/action/sync:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the replicationSession instance."
        required: true
        type: string
      tags:
      - replicationSession
      description: "Sync a replication session. This operation can be applied to initiate a sync on demand independent of type of session - auto or manual sync."
      operationId: replicationSession_sync
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 13. Sync replicationSession by id
  /api/instances/replicationSession/name:{name}/action/sync:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified replication session name."
        required: true
        type: string
      tags:
      - replicationSession
      description: "Sync a replication session. This operation can be applied to initiate a sync on demand independent of type of session - auto or manual sync."
      operationId: replicationSession_sync_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 14. Sync replicationSession by name
  /api/instances/replicationSession/{id}/action/failover:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the replicationSession instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            sync:
              description: "Indicates whether to sync the source and destination resources before failing over the asynchronous replication session or whether to keep them in sync after failing over the synchronous replication session. <ul> <li>true - Sync before failing over the asynchronous replication session or keep in sync after failing over the synchronous replication session. <li>false - Do not sync before failing over the asynchronous replication session or do not keep in sync after failing over the synchronous replication session. </ul>"
              type: boolean
            force:
              description: "Indicates to skip pre-checks on file system(s) replication sessions of a NAS server when a replication failover is issued from the source NAS server. <ul> <li>true - skip pre-check.<li>false - Do not skip pre-check.</ul>"
              type: boolean
      tags:
      - replicationSession
      description: "Fail over a replication session.
  
  Note that if a failover occurs and data is written to the new source (original destination),
  new snaps are taken, and finally a failback occurs: then those snaps will get replicated to
  the new destination (original source). However, we maintain the local retention for the original
  source and the remote retention for the original destination.
  
  If the same scenario occurs but a resume is requested instead of failback (essentially switching
  the replication direction), then the local and remote retentions are switched so that the local
  retention policy is applied on the new source and the remote policy is applied on the new destination."
      operationId: replicationSession_failover
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 15. Failover replicationSession by id
  /api/instances/replicationSession/name:{name}/action/failover:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified replication session name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            sync:
              description: "Indicates whether to sync the source and destination resources before failing over the asynchronous replication session or whether to keep them in sync after failing over the synchronous replication session. <ul> <li>true - Sync before failing over the asynchronous replication session or keep in sync after failing over the synchronous replication session. <li>false - Do not sync before failing over the asynchronous replication session or do not keep in sync after failing over the synchronous replication session. </ul>"
              type: boolean
            force:
              description: "Indicates to skip pre-checks on file system(s) replication sessions of a NAS server when a replication failover is issued from the source NAS server. <ul> <li>true - skip pre-check.<li>false - Do not skip pre-check.</ul>"
              type: boolean
      tags:
      - replicationSession
      description: "Fail over a replication session.
  
  Note that if a failover occurs and data is written to the new source (original destination),
  new snaps are taken, and finally a failback occurs: then those snaps will get replicated to
  the new destination (original source). However, we maintain the local retention for the original
  source and the remote retention for the original destination.
  
  If the same scenario occurs but a resume is requested instead of failback (essentially switching
  the replication direction), then the local and remote retentions are switched so that the local
  retention policy is applied on the new source and the remote policy is applied on the new destination."
      operationId: replicationSession_failover_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 16. Failover replicationSession by name
  /api/instances/replicationSession/{id}/action/failback:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the replicationSession instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            forceFullCopy:
              description: "Indicates whether to sync back all data from the destination SP to the source SP during the failback session. Values are: <ul> <li>true - Sync back all data. <li>false - Sync back changed data only. </ul>"
              type: boolean
            force:
              description: "Normally a NAS server synchronous replication session cannot be failed back unless associated asynchronous replication sessions are preserved. The force option allows failback to proceed without preserving asynchronous replication sessions. <ul> <li>true - Allow failback without preserving asynchronous replication sessions.<li>false - Do not allow failback without preserving asynchronous replication sessions.</ul>"
              type: boolean
            forceDatalossChoice:
              description: "Normally an asynchronous replication session cannot be failed back if the destination is ReadWrite or has data that was written locally. In this case both the source and destination may have data newer than the replication session stoppage. The forceDatalossChoice option allows a choice of whether to use the source or destination data in this case. <ul> <li>None - the failback operation will fail if both source and destination have been mounted r/w since the replication was stopped. <li>Discard_Destination_Changes - the source will be synced to the destination before failing back. Any data written to the destination since the replication was stopped will be lost. <li>Discard_Source_Changes - the destination will be synced to the source before failing back. Any data written to the source since the replication was stopped will be lost. </ul>"
              $ref: '#/definitions/ReplicationFailbackForceDataLossChoiceEnum'
      tags:
      - replicationSession
      description: "Fail back a replication session. This can be applied on a replication session that is failed over. Fail back will synchronize the changes done to original destination back to original source site and will restore the original direction of session. allowFullCopy or forceFullCopy option is needed when replication session goes out of sync due to a fault."
      operationId: replicationSession_failback
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 17. Failback replicationSession by id
  /api/instances/replicationSession/name:{name}/action/failback:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified replication session name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            forceFullCopy:
              description: "Indicates whether to sync back all data from the destination SP to the source SP during the failback session. Values are: <ul> <li>true - Sync back all data. <li>false - Sync back changed data only. </ul>"
              type: boolean
            force:
              description: "Normally a NAS server synchronous replication session cannot be failed back unless associated asynchronous replication sessions are preserved. The force option allows failback to proceed without preserving asynchronous replication sessions. <ul> <li>true - Allow failback without preserving asynchronous replication sessions.<li>false - Do not allow failback without preserving asynchronous replication sessions.</ul>"
              type: boolean
            forceDatalossChoice:
              description: "Normally an asynchronous replication session cannot be failed back if the destination is ReadWrite or has data that was written locally. In this case both the source and destination may have data newer than the replication session stoppage. The forceDatalossChoice option allows a choice of whether to use the source or destination data in this case. <ul> <li>None - the failback operation will fail if both source and destination have been mounted r/w since the replication was stopped. <li>Discard_Destination_Changes - the source will be synced to the destination before failing back. Any data written to the destination since the replication was stopped will be lost. <li>Discard_Source_Changes - the destination will be synced to the source before failing back. Any data written to the source since the replication was stopped will be lost. </ul>"
              $ref: '#/definitions/ReplicationFailbackForceDataLossChoiceEnum'
      tags:
      - replicationSession
      description: "Fail back a replication session. This can be applied on a replication session that is failed over. Fail back will synchronize the changes done to original destination back to original source site and will restore the original direction of session. allowFullCopy or forceFullCopy option is needed when replication session goes out of sync due to a fault."
      operationId: replicationSession_failback_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 18. Failback replicationSession by name
  /api/instances/replicationSession/{id}/action/preserve_async:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the replicationSession instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            remoteSystem:
              description: "Unique identifier of the asynchronous remote system from local site, as defined by the remoteSystem 
  resource type.

  To support legacy REST request without the remoteSystem parameter, if remoteSystem is not specified, 
  then the system will check all defined remote systems for a candidate async session. If exactly one
  is found, that session will be preserved."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the remoteSystem instance."
      tags:
      - replicationSession
      description: "Preserve an async replication session.

  Preserve an async replication session associated with original source of this nas server/filesystem 
  sync replication session after a failover.

  Preserve recreates one prior async replication from the original source. Preserve tries to find the
  prior async session on the destination remote system identified by the remoteSystem parameter, 
  and if successful, removes the existing session, creates a new async session to the remote system, 
  and starts the replication process. If there is a common base snap available, then that will be used
  to optimize the initial copy.

  Preserve requires that the original async sessions are in the hibernated state. It also requires that 
  there is not already an async replication from the local nas_server to the remote system."
      operationId: replicationSession_preserve_async
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 19. Preserve_async replicationSession by id
  /api/instances/replicationSession/name:{name}/action/preserve_async:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified replication session name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            remoteSystem:
              description: "Unique identifier of the asynchronous remote system from local site, as defined by the remoteSystem 
  resource type.

  To support legacy REST request without the remoteSystem parameter, if remoteSystem is not specified, 
  then the system will check all defined remote systems for a candidate async session. If exactly one
  is found, that session will be preserved."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the remoteSystem instance."
      tags:
      - replicationSession
      description: "Preserve an async replication session.

  Preserve an async replication session associated with original source of this nas server/filesystem 
  sync replication session after a failover.

  Preserve recreates one prior async replication from the original source. Preserve tries to find the
  prior async session on the destination remote system identified by the remoteSystem parameter, 
  and if successful, removes the existing session, creates a new async session to the remote system, 
  and starts the replication process. If there is a common base snap available, then that will be used
  to optimize the initial copy.

  Preserve requires that the original async sessions are in the hibernated state. It also requires that 
  there is not already an async replication from the local nas_server to the remote system."
      operationId: replicationSession_preserve_async_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 20. Preserve_async replicationSession by name
  /api/types/role/instances:
    get:
      tags:
      - role
      description: 'Collection query'
      operationId: role_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/role'
      summary: 1. Get all role
  /api/instances/role/{id}:
    get:
      tags:
      - role
      description: 'Instance query'
      operationId: role_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the role instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/role'
      summary: 2. Get role by id
  /api/instances/role/name:{name}:
    get:
      tags:
      - role
      description: 'Instance query'
      operationId: role_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Name used to identify the role. Valid values are:
  <ul>
  <li>administrator - Administrator role. Can view status and performance
  information. Can also modify all storage system settings, including configure new storage
  hosts and manage local user, LDAP user, and LDAP group accounts.</li>
  <li>storageadmin - Storage administrator role. Can view status and performance
  information and can modify most system settings, but cannot configure new
  storage hosts or manage local user, LDAP user, or LDAP group accounts.</li>
  <li>vmadmin - VMware administrator role. Can establish a VASA connection from
  the vCenter to the storage system.</li>
  <li>operator - Operator role. Can view system settings, status, and performance
  information, but cannot modify system settings.</li>
  <li>securityadmin - Security administrator role. Can view and modify security settings; Can view system
  settings, status, and performance information, but cannot modify system settings.</li>
  </ul>"
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/role'
      summary: 3. Get role by name
  /api/types/roleMapping/instances:
    get:
      tags:
      - roleMapping
      description: 'Collection query'
      operationId: roleMapping_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/roleMapping'
      summary: 1. Get all roleMapping
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [authorityName,entityName,roleName,mappingType]
          properties:
            authorityName:
              description: "Authority used to authorize the entity."
              type: string
            entityName:
              description: "LDAP user or LDAP group name to associate with the role specified by the roleName argument."
              type: string
            roleName:
              description: "Role name to associate with the entity specified by the entityName argument."
              type: string
            mappingType:
              description: "Role mapping type."
              $ref: '#/definitions/RoleMappingTypeEnum'
      tags:
      - roleMapping
      description: "Create a new role mapping for an LDAP user or LDAP group.
  <br/>
  <br/>
  <b>Note:</b> The system automatically creates role mappings for local users
  when the users are created."
      operationId: roleMapping_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier for the new roleMapping instance."
                    type: string
      summary: 3. Create roleMapping
  /api/instances/roleMapping/{id}:
    get:
      tags:
      - roleMapping
      description: 'Instance query'
      operationId: roleMapping_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the roleMapping instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/roleMapping'
      summary: 2. Get roleMapping by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the roleMapping instance."
        required: true
        type: string
      tags:
      - roleMapping
      description: "Delete a role mapping instance for a local user, LDAP user, or LDAP group."
      operationId: roleMapping_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Delete roleMapping by id
  /api/types/roleMapping/action/deleteAllInAuthority:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [authorityName]
          properties:
            authorityName:
              description: "Authority for which to delete the associated role mappings."
              type: string
      tags:
      - roleMapping
      description: "Delete all role mappings that are authenticated by the specified authority."
      operationId: roleMapping_deleteAllInAuthority
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. DeleteAllInAuthority roleMapping
  /api/instances/roleMapping/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the roleMapping instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            roleName:
              description: "New role name to associate with the entity specified by the entityName argument."
              type: string
      tags:
      - roleMapping
      description: "Modify the role name in a role mapping instance associated with a local user,
  LDAP user, or LDAP group."
      operationId: roleMapping_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify roleMapping by id
  /api/types/route/instances:
    get:
      tags:
      - route
      description: 'Collection query'
      operationId: route_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/route'
      summary: 1. Get all route
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [ipInterface,destination]
          properties:
            ipInterface:
              description: "Reference to IP interface."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the ipInterface instance."
            destination:
              description: "IP address of the target network node for the new route, based on the specific route type. Values are: <ul> <li>For a default route, there is no value, because the system will use the specified gateway IP address. <li>For a host route, the value is the IP address. <li> For a subnet route, the value is a subnet IP address. </ul>"
              type: string
            netmask:
              description: "For a new subnet route, the IP address of the subnet mask."
              type: string
            v6PrefixLength:
              description: "IPv6 prefix length for the route, if the interface uses an IPv6 address."
              type: integer
            gateway:
              description: "IP address of the gateway associated with the route."
              type: string
      tags:
      - route
      description: "Create a route."
      operationId: route_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "New route instance."
                    type: string
      summary: 3. Create route
  /api/instances/route/{id}:
    get:
      tags:
      - route
      description: 'Instance query'
      operationId: route_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the route instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/route'
      summary: 2. Get route by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the route instance."
        required: true
        type: string
      tags:
      - route
      description: "Delete a route."
      operationId: route_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete route by id
  /api/instances/route/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the route instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            ipInterface:
              description: "Reference to IP interface."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the ipInterface instance."
            destination:
              description: "IP address of the target network node for the route, based on the specific route type. Values are: <ul> <li>For a default route, there is no value, because the system will use the specified gateway IP address. <li>For a host route, the value is the IP address. <li> For a subnet route, the value is a subnet IP address. </ul>"
              type: string
            netmask:
              description: "For IPv4 subnet route, the IP address of the subnet mask."
              type: string
            v6PrefixLength:
              description: "IPv6 prefix length for the route, if the interface uses an IPv6 address."
              type: integer
            gateway:
              description: "IP address of the gateway associated with the route. To remove gateway from route put empty string."
              type: string
      tags:
      - route
      description: "Modify a route."
      operationId: route_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify route by id
  /api/types/rpChapSettings/instances:
    get:
      tags:
      - rpChapSettings
      description: 'Collection query'
      operationId: rpChapSettings_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/rpChapSettings'
      summary: 1. Get all rpChapSettings
  /api/instances/rpChapSettings/{id}:
    get:
      tags:
      - rpChapSettings
      description: 'Instance query'
      operationId: rpChapSettings_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique instance identifier."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/rpChapSettings'
      summary: 2. Get rpChapSettings by id
  /api/instances/rpChapSettings/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique instance identifier."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            outgoingForwardChapUsername:
              description: "Username of RPA outgoing forward CHAP. Put empty or null string to unset it."
              type: string
            outgoingForwardChapSecret:
              description: "Secret of RPA outgoing forward CHAP. Ignored if outgoingForwardChapUsername is empty or null."
              type: string
            outgoingForwardChapSecretType:
              description: "Secret type of RPA outgoing forward CHAP."
              $ref: '#/definitions/CHAPSecretTypeEnum'
      tags:
      - rpChapSettings
      description: "Modify RPA CHAP account."
      operationId: rpChapSettings_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify rpChapSettings by id
  /api/types/sasPort/instances:
    get:
      tags:
      - sasPort
      description: 'Collection query'
      operationId: sasPort_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/sasPort'
      summary: 1. Get all sasPort
  /api/instances/sasPort/{id}:
    get:
      tags:
      - sasPort
      description: 'Instance query'
      operationId: sasPort_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the SAS port instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/sasPort'
      summary: 2. Get sasPort by id
  /api/instances/sasPort/name:{name}:
    get:
      tags:
      - sasPort
      description: 'Instance query'
      operationId: sasPort_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "SAS port name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/sasPort'
      summary: 3. Get sasPort by name
  /api/types/scheduleTimezone/instances:
    get:
      tags:
      - scheduleTimezone
      description: 'Collection query'
      operationId: scheduleTimezone_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/scheduleTimezone'
      summary: 1. Get all scheduleTimezone
  /api/instances/scheduleTimezone/{id}:
    get:
      tags:
      - scheduleTimezone
      description: 'Instance query'
      operationId: scheduleTimezone_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the timezone instance. Because timezone is a
  singleton resource type, the value of this field is always 0."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/scheduleTimezone'
      summary: 2. Get scheduleTimezone by id
  /api/instances/scheduleTimezone/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the timezone instance. Because timezone is a
  singleton resource type, the value of this field is always 0."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [timezone]
          properties:
            timezone:
              description: "New timezone to be applied to all scheduled snapshots."
              $ref: '#/definitions/ScheduleTimezoneCandidatesEnum'
      tags:
      - scheduleTimezone
      description: "Modify the timezone that is associated with all scheduled snapshots on the storage system."
      operationId: scheduleTimezone_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify scheduleTimezone by id
  /api/types/securitySettings/instances:
    get:
      tags:
      - securitySettings
      description: 'Collection query'
      operationId: securitySettings_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/securitySettings'
      summary: 1. Get all securitySettings
  /api/instances/securitySettings/{id}:
    get:
      tags:
      - securitySettings
      description: 'Instance query'
      operationId: securitySettings_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the securitySettings instance. The value of this
  attribute is always 0, because securitySettings is a singleton resource type."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/securitySettings'
      summary: 2. Get securitySettings by id
  /api/instances/securitySettings/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the securitySettings instance. The value of this
  attribute is always 0, because securitySettings is a singleton resource type."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            isFIPSEnabled:
              description: "Switches the system in or out of FIPS 140-2 mode. Values are: <ul> <li>true - Switches the system to work in FIPS 140-2 mode.</li> <li>false - Switches the system to no longer work in FIPS 140-2 mode.</li> </ul> 
  All system SPs will be rebooted automatically if the FIPS mode is changed for the setting to take effect.
  </br>"
              type: boolean
            isSSOEnabled:
              description: "Switches the system in or out of SSO mode. Values are: <ul> <li>true - Enables SSO mode on the system. </li> <li>false - Disables SSO mode on the system.</li> </ul>"
              type: boolean
            isTLS1Enabled:
              description: "Enables or disables TLS 1.0 on the system. Values are: <ul> <li>true - Enables TLS 1.0 on the system. </li> <li>false - Disables TLS 1.0 on the system.</li> </ul>
  The Management Service will be automatically rebooted for the setting to take effect.
  </br>"
              type: boolean
            tlsMode:
              description: "Indicates the minimum TLS version that is enabled.
  The Management Service will be automatically restarted for the setting to take effect.
  </br>"
              $ref: '#/definitions/SecuritySettingsTLSModeEnum'
      tags:
      - securitySettings
      description: "Modify the system security settings.
 <br/>
  One setting should be modified at a time."
      operationId: securitySettings_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify securitySettings by id
  /api/types/serviceAction/instances:
    get:
      tags:
      - serviceAction
      description: 'Collection query'
      operationId: serviceAction_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/serviceAction'
      summary: 1. Get all serviceAction
  /api/instances/serviceAction/{id}:
    get:
      tags:
      - serviceAction
      description: 'Instance query'
      operationId: serviceAction_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the serviceAction instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/serviceAction'
      summary: 2. Get serviceAction by id
  /api/instances/serviceAction/name:{name}:
    get:
      tags:
      - serviceAction
      description: 'Instance query'
      operationId: serviceAction_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Localized service action name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/serviceAction'
      summary: 3. Get serviceAction by name
  /api/instances/serviceAction/{id}/action/execute:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the serviceAction instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            includePrivateData:
              description: "Indicates whether the capture includes private data when performing the Save Configuration (configCapture) service action.
                        <br>
                        Values are:
                        <ul>
                          <li>true - Include private data (like IP addresses).</li>
                          <li>false - (Default) Exclude private data.</li>
                        </ul>"
              type: boolean
            currentPassword:
              description: "Current password of the service user. 
  <ul>
  <li>In normal mode, this password is required for all the service actions except following ones: </li>
  <ul>
          <li>Collect Service Information (dataCollection)</li> 
          <li>Save Configuration (configCapture)</li>
          <li>Restart Management Software (restartMGT)</li> 
       </ul>
  <li>In service mode, this password is required for the Change Service Password service (changeServicePassword) action.</li>
  </ul>"
              type: string
            newPassword:
              description: "New password for the service user. Required for Change Service Password (changeServicePassword) action."
              type: string
            generateECOMDump:
              description: "Indicate whether generatate ECOM dump when restarting MGMT software."
              type: boolean
            generateRawJson:
              description: "Indicate whether generatate raw json when runing config capture."
              type: boolean
            dataCollectionProfile:
              description: "The profile used to collect service information."
              $ref: '#/definitions/DataCollectionProfileEnum'
      tags:
      - serviceAction
      description: "Execute the service action."
      operationId: serviceAction_execute
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Execute serviceAction by id
  /api/instances/serviceAction/name:{name}/action/execute:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Localized service action name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            includePrivateData:
              description: "Indicates whether the capture includes private data when performing the Save Configuration (configCapture) service action.
                        <br>
                        Values are:
                        <ul>
                          <li>true - Include private data (like IP addresses).</li>
                          <li>false - (Default) Exclude private data.</li>
                        </ul>"
              type: boolean
            currentPassword:
              description: "Current password of the service user. 
  <ul>
  <li>In normal mode, this password is required for all the service actions except following ones: </li>
  <ul>
          <li>Collect Service Information (dataCollection)</li> 
          <li>Save Configuration (configCapture)</li>
          <li>Restart Management Software (restartMGT)</li> 
       </ul>
  <li>In service mode, this password is required for the Change Service Password service (changeServicePassword) action.</li>
  </ul>"
              type: string
            newPassword:
              description: "New password for the service user. Required for Change Service Password (changeServicePassword) action."
              type: string
            generateECOMDump:
              description: "Indicate whether generatate ECOM dump when restarting MGMT software."
              type: boolean
            generateRawJson:
              description: "Indicate whether generatate raw json when runing config capture."
              type: boolean
            dataCollectionProfile:
              description: "The profile used to collect service information."
              $ref: '#/definitions/DataCollectionProfileEnum'
      tags:
      - serviceAction
      description: "Execute the service action."
      operationId: serviceAction_execute_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Execute serviceAction by name
  /api/types/serviceContract/instances:
    get:
      tags:
      - serviceContract
      description: 'Collection query'
      operationId: serviceContract_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/serviceContract'
      summary: 1. Get all serviceContract
  /api/instances/serviceContract/{id}:
    get:
      tags:
      - serviceContract
      description: 'Instance query'
      operationId: serviceContract_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the serviceContract instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/serviceContract'
      summary: 2. Get serviceContract by id
  /api/types/serviceContract/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      tags:
      - serviceContract
      description: "Refresh the service contract information from EMC Online Support."
      operationId: serviceContract_refresh
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Refresh serviceContract
  /api/types/serviceInfo/instances:
    get:
      tags:
      - serviceInfo
      description: 'Collection query'
      operationId: serviceInfo_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/serviceInfo'
      summary: 1. Get all serviceInfo
  /api/instances/serviceInfo/{id}:
    get:
      tags:
      - serviceInfo
      description: 'Instance query'
      operationId: serviceInfo_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the serviceInfo instance. Because serviceInfo is a 
  singleton resource type, the value of this field is always 0."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/serviceInfo'
      summary: 2. Get serviceInfo by id
  /api/types/smtpServer/instances:
    get:
      tags:
      - smtpServer
      description: 'Collection query'
      operationId: smtpServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/smtpServer'
      summary: 1. Get all smtpServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [address,type]
          properties:
            address:
              description: "IP address of the SMTP server. If a port is not specified, default port 25 will be used."
              type: string
            type:
              description: "SMTP server type."
              $ref: '#/definitions/SmtpTypeEnum'
            userName:
              description: "User Name of the SMTP server."
              type: string
            password:
              description: "Password of the SMTP server."
              type: string
            authType:
              description: "Authentication type of the SMTP server."
              $ref: '#/definitions/AuthTypeEnum'
            sslMethod:
              description: "SSL Method of the SMTP server."
              $ref: '#/definitions/SSLMethodEnum'
            isBypassProxyEnabled:
              description: "Whether to bypass global proxy settings. The default value is false. Values are: <ul><li>true - bypass global proxy settings.</li><li>false - use global proxy settings.</li></ul>"
              type: boolean
      tags:
      - smtpServer
      description: "Create a new SMTP server (Default or PhoneHome)."
      operationId: smtpServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the smtpServer instance."
                    type: string
      summary: 3. Create smtpServer
  /api/instances/smtpServer/{id}:
    get:
      tags:
      - smtpServer
      description: 'Instance query'
      operationId: smtpServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the smtpServer instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/smtpServer'
      summary: 2. Get smtpServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the smtpServer instance."
        required: true
        type: string
      tags:
      - smtpServer
      description: "Delete a SMTP Server."
      operationId: smtpServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete smtpServer by id
  /api/instances/smtpServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the smtpServer instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [address]
          properties:
            userName:
              description: "User Name of the SMTP server."
              type: string
            password:
              description: "Password of the SMTP server."
              type: string
            authType:
              description: "Authentication type of the SMTP server."
              $ref: '#/definitions/AuthTypeEnum'
            sslMethod:
              description: "SSL Method of the SMTP server."
              $ref: '#/definitions/SSLMethodEnum'
            address:
              description: "IP address of the SMTP server. If a port is not specified, default port 25 will be used."
              type: string
            isBypassProxyEnabled:
              description: "Whether to bypass global proxy settings."
              type: boolean
      tags:
      - smtpServer
      description: "Modify SMTP server settings."
      operationId: smtpServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify smtpServer by id
  /api/types/snap/instances:
    get:
      tags:
      - snap
      description: 'Collection query'
      operationId: snap_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/snap'
      summary: 01. Get all snap
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [storageResource]
          properties:
            storageResource:
              description: "Id of the storageResource to snap."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the storage resource."
            name:
              description: "Name for the new snapshot."
              type: string
            description:
              description: "Description for new snapshot."
              type: string
            isAutoDelete:
              description: "Auto delete policy for new snapshot."
              type: boolean
            retentionDuration:
              description: "How long to keep the snapshot (Can be specified only if auto delete is set to false)."
              type: integer
            isReadOnly:
              description: "Indicates whether the new snapshot should be read-only."
              type: boolean
            filesystemAccessType:
              description: "Indicates whether the new snapshot should be created
                               with checkpoint or protocol type access (file system snaps only)."
              $ref: '#/definitions/FilesystemSnapAccessTypeEnum'
            markForReplication:
              type: boolean
            isRemoteRetentionSameAsSource:
              description: "Indicates whether or not the remote (destination) retention policy applied for this snapshot is the same as the local (source) retention policy."
              type: boolean
            isRemoteAutoDelete:
              description: "Indicates if this snapshot can be automatically deleted by the system per threshold settings on the destination"
              type: boolean
            remoteRetentionDuration:
              description: "Period of time in seconds for which to keep the snapshot on the destination"
              type: integer
            snapRemoteRetentionPolicies:
              description: "List of remote policy parameters of snap."
              type: array
              items:
                description: "Snap remote retention policy for each remote system."
                type: object
                properties:
                  remoteSystem:
                    description: "The remote system to which these retention settings are to be applied."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the remoteSystem instance."
                  isRemoteRetentionSameAsSource:
                    description: "Indicates whether the remote policy is same as replication session source."
                    type: boolean
                  isRemoteAutoDelete:
                    description: "(Applies when replicating a snap and isRemoteRetentionSameAsSource attributes is false.)
 Indicates whether this snapshot can be automatically deleted by the system per threshold settings on the destination.
 Values are: <ul> <li>true - Snapshot can be automatically deleted by the system per threshold settings on the destination.</li>
 <li>false - Snapshot cannot be deleted automatically on the destination.</li> </ul>"
                    type: boolean
                  remoteRetentionDuration:
                    description: "Period in seconds specifying how long to retain the replicated snapshot on the destination 
 When the retention period expires, the remote system will delete the replicated snapshot. 
 <br> <br>The default retention period is seven days."
                    type: integer
      tags:
      - snap
      description: "Create a snapshot."
      operationId: snap_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "The id of the newly created snapshot."
                    type: string
      summary: 04. Create snap
  /api/instances/snap/{id}:
    get:
      tags:
      - snap
      description: 'Instance query'
      operationId: snap_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the snap instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/snap'
      summary: 02. Get snap by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the snap instance."
        required: true
        type: string
      tags:
      - snap
      description: "Delete a snapshot."
      operationId: snap_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 19. Delete snap by id
  /api/instances/snap/name:{name}:
    get:
      tags:
      - snap
      description: 'Instance query'
      operationId: snap_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Snapshot name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/snap'
      summary: 03. Get snap by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Snapshot name."
        required: true
        type: string
      tags:
      - snap
      description: "Delete a snapshot."
      operationId: snap_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 20. Delete snap by name
  /api/instances/snap/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the snap instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Snapshot name (Applies to block type storage resource snaps only. Filesystem snapshot names cannot be modified)."
              type: string
            description:
              description: "Snapshot description."
              type: string
            isAutoDelete:
              description: "Indicates whether the system will automatically delete the snapshot when the pool snapshot space or total pool space reaches an automatic deletion threshold. Valid values are: <ul> <li>System will automatically delete the snapshot based on pool automatic deletion thresholds.. <li>Snapshot will not automatically delete the snapshot based on pool automatic deletion thresholds. </ul> <br> For information about automatic deletion thresholds, see the help topic for the pool resource type."
              type: boolean
            retentionDuration:
              description: "Duration in seconds specifying how long to retain the snapshot. When the retention period expires, the system will delete the snapshot; You cannot recover the snapshot after it has been deleted. <br> <br>The default retention period is seven days."
              type: integer
            ioLimitParameters:
              description: "The IO limit policy that is applied to this snapshot. This is only applicable to attached snapshots."
              type: object
              properties:
                ioLimitPolicy:
                  description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the ioLimitPolicy instance."
            hostAccess:
              description: "List of hosts with access levels each should have to the snapshot. Only read and write access levels are permitted as host settings. Snapshot must be attached. (Applies to block type storage resource snaps only.)"
              type: array
              items:
                description: "Host access settings for snapshot."
                type: object
                properties:
                  host:
                    description: "Host to grant access to snapshot, as defined by host type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  allowedAccess:
                    description: "Access-level permissions for host."
                    $ref: '#/definitions/SnapAccessLevelEnum'
            force:
              description: "If specified, modify the snap regardless of whether snap source Storage Resource is used as replication destination by sync replication session and the snapshot is marked as replicated. (Applies to file type storage resource snaps only.)"
              type: boolean
      tags:
      - snap
      description: "Modify a snapshot."
      operationId: snap_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 05. Modify snap by id
  /api/instances/snap/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Snapshot name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Snapshot name (Applies to block type storage resource snaps only. Filesystem snapshot names cannot be modified)."
              type: string
            description:
              description: "Snapshot description."
              type: string
            isAutoDelete:
              description: "Indicates whether the system will automatically delete the snapshot when the pool snapshot space or total pool space reaches an automatic deletion threshold. Valid values are: <ul> <li>System will automatically delete the snapshot based on pool automatic deletion thresholds.. <li>Snapshot will not automatically delete the snapshot based on pool automatic deletion thresholds. </ul> <br> For information about automatic deletion thresholds, see the help topic for the pool resource type."
              type: boolean
            retentionDuration:
              description: "Duration in seconds specifying how long to retain the snapshot. When the retention period expires, the system will delete the snapshot; You cannot recover the snapshot after it has been deleted. <br> <br>The default retention period is seven days."
              type: integer
            ioLimitParameters:
              description: "The IO limit policy that is applied to this snapshot. This is only applicable to attached snapshots."
              type: object
              properties:
                ioLimitPolicy:
                  description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the ioLimitPolicy instance."
            hostAccess:
              description: "List of hosts with access levels each should have to the snapshot. Only read and write access levels are permitted as host settings. Snapshot must be attached. (Applies to block type storage resource snaps only.)"
              type: array
              items:
                description: "Host access settings for snapshot."
                type: object
                properties:
                  host:
                    description: "Host to grant access to snapshot, as defined by host type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  allowedAccess:
                    description: "Access-level permissions for host."
                    $ref: '#/definitions/SnapAccessLevelEnum'
            force:
              description: "If specified, modify the snap regardless of whether snap source Storage Resource is used as replication destination by sync replication session and the snapshot is marked as replicated. (Applies to file type storage resource snaps only.)"
              type: boolean
      tags:
      - snap
      description: "Modify a snapshot."
      operationId: snap_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 06. Modify snap by name
  /api/instances/snap/{id}/action/replicate:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the snap instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            isRemoteRetentionSameAsSource:
              description: "Indicates whether or not the remote (destination) retention policy applied for this snapshot is the same as the local (source) retention policy."
              type: boolean
            isRemoteAutoDelete:
              description: "Indicates whether the system will automatically delete the replicated snapshot on the destination when the pool snapshot space or total pool space reaches an automatic deletion threshold. Valid values are: <ul> <li>The remote system will automatically delete the replicated snapshot based on pool automatic deletion thresholds.. <li>Remote system will not automatically delete the replicated snapshot based on pool automatic deletion thresholds. </ul> <br> For information about automatic deletion thresholds, see the help topic for the pool resource type."
              type: boolean
            remoteRetentionDuration:
              description: "Duration in seconds specifying how long to retain the replicated snapshot on the destination. When the retention period expires, the remote system will delete the replicated snapshot; You cannot recover the replicated snapshot after it has been deleted. <br> <br>The default retention period is seven days."
              type: integer
            snapRemoteRetentionPolicies:
              description: "List of remote policy parameters of snap, each indicates the remote policy for each specified remote system."
              type: array
              items:
                description: "Snap remote retention policy for each remote system."
                type: object
                properties:
                  remoteSystem:
                    description: "The remote system to which these retention settings are to be applied."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the remoteSystem instance."
                  isRemoteRetentionSameAsSource:
                    description: "Indicates whether the remote policy is same as replication session source."
                    type: boolean
                  isRemoteAutoDelete:
                    description: "(Applies when replicating a snap and isRemoteRetentionSameAsSource attributes is false.)
 Indicates whether this snapshot can be automatically deleted by the system per threshold settings on the destination.
 Values are: <ul> <li>true - Snapshot can be automatically deleted by the system per threshold settings on the destination.</li>
 <li>false - Snapshot cannot be deleted automatically on the destination.</li> </ul>"
                    type: boolean
                  remoteRetentionDuration:
                    description: "Period in seconds specifying how long to retain the replicated snapshot on the destination 
 When the retention period expires, the remote system will delete the replicated snapshot. 
 <br> <br>The default retention period is seven days."
                    type: integer
            force:
              description: "If specified, replicate the snap regardless of whether snapshot replication state could not be updated on the sync replication destination system when the corresponding sync replication session is not active. (Applies to file type storage resource snaps only.)"
              type: boolean
      tags:
      - snap
      description: "Mark a snapshot for replication to the destination resource."
      operationId: snap_replicate
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 07. Replicate snap by id
  /api/instances/snap/name:{name}/action/replicate:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Snapshot name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            isRemoteRetentionSameAsSource:
              description: "Indicates whether or not the remote (destination) retention policy applied for this snapshot is the same as the local (source) retention policy."
              type: boolean
            isRemoteAutoDelete:
              description: "Indicates whether the system will automatically delete the replicated snapshot on the destination when the pool snapshot space or total pool space reaches an automatic deletion threshold. Valid values are: <ul> <li>The remote system will automatically delete the replicated snapshot based on pool automatic deletion thresholds.. <li>Remote system will not automatically delete the replicated snapshot based on pool automatic deletion thresholds. </ul> <br> For information about automatic deletion thresholds, see the help topic for the pool resource type."
              type: boolean
            remoteRetentionDuration:
              description: "Duration in seconds specifying how long to retain the replicated snapshot on the destination. When the retention period expires, the remote system will delete the replicated snapshot; You cannot recover the replicated snapshot after it has been deleted. <br> <br>The default retention period is seven days."
              type: integer
            snapRemoteRetentionPolicies:
              description: "List of remote policy parameters of snap, each indicates the remote policy for each specified remote system."
              type: array
              items:
                description: "Snap remote retention policy for each remote system."
                type: object
                properties:
                  remoteSystem:
                    description: "The remote system to which these retention settings are to be applied."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the remoteSystem instance."
                  isRemoteRetentionSameAsSource:
                    description: "Indicates whether the remote policy is same as replication session source."
                    type: boolean
                  isRemoteAutoDelete:
                    description: "(Applies when replicating a snap and isRemoteRetentionSameAsSource attributes is false.)
 Indicates whether this snapshot can be automatically deleted by the system per threshold settings on the destination.
 Values are: <ul> <li>true - Snapshot can be automatically deleted by the system per threshold settings on the destination.</li>
 <li>false - Snapshot cannot be deleted automatically on the destination.</li> </ul>"
                    type: boolean
                  remoteRetentionDuration:
                    description: "Period in seconds specifying how long to retain the replicated snapshot on the destination 
 When the retention period expires, the remote system will delete the replicated snapshot. 
 <br> <br>The default retention period is seven days."
                    type: integer
            force:
              description: "If specified, replicate the snap regardless of whether snapshot replication state could not be updated on the sync replication destination system when the corresponding sync replication session is not active. (Applies to file type storage resource snaps only.)"
              type: boolean
      tags:
      - snap
      description: "Mark a snapshot for replication to the destination resource."
      operationId: snap_replicate_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 08. Replicate snap by name
  /api/instances/snap/{id}/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the snap instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            copyName:
              description: "Name of the snapshot copy created before the refresh operation occurs."
              type: string
      tags:
      - snap
      description: "Refresh a snapshot."
      operationId: snap_refresh
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  copy:
                    description: "Snapshot copy created before the refresh operation occurs,
              as defined by the snap resource type, if copyName was specified."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the snap instance."
      summary: 09. Refresh snap by id
  /api/instances/snap/name:{name}/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Snapshot name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            copyName:
              description: "Name of the snapshot copy created before the refresh operation occurs."
              type: string
      tags:
      - snap
      description: "Refresh a snapshot."
      operationId: snap_refresh_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  copy:
                    description: "Snapshot copy created before the refresh operation occurs,
              as defined by the snap resource type, if copyName was specified."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the snap instance."
      summary: 10. Refresh snap by name
  /api/instances/snap/{id}/action/copy:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the snap instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            copyName:
              description: "Base name for the new snapshot copies."
              type: string
            numCopies:
              description: "Number of snapshot copies to make."
              type: integer
            copyStartNum:
              description: "Starting number for the group of copies. This number gets appended to the name specified in the copyName argument to form the name of the first snapshot copy. The system increments the number for each new snapshot."
              type: integer
            child:
              description: "If true for an unattached snapshot, the new copy has the source snapshot as a parent. If false, the new copy is created as a sibling of the source snapshot. Setting this parameter to false for an attached snapshot causes an error."
              type: boolean
      tags:
      - snap
      description: "Copy a snapshot.
  If source snapshot is attached, the new copy has the same source snapshot as a parent and is marked as not modified.
  If source snapshot is not attached, the behavior depends on child parameter. By default, child parameter is false and the new copy is created as a sibling of source snapshot."
      operationId: snap_copy
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  copies:
                    description: "Snapshot copies, as defined by the snap resource type."
                    type: array
                    items:
                      description: "Information about storage resource snapshots in the storage system."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the snap instance."
      summary: 11. Copy snap by id
  /api/instances/snap/name:{name}/action/copy:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Snapshot name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            copyName:
              description: "Base name for the new snapshot copies."
              type: string
            numCopies:
              description: "Number of snapshot copies to make."
              type: integer
            copyStartNum:
              description: "Starting number for the group of copies. This number gets appended to the name specified in the copyName argument to form the name of the first snapshot copy. The system increments the number for each new snapshot."
              type: integer
            child:
              description: "If true for an unattached snapshot, the new copy has the source snapshot as a parent. If false, the new copy is created as a sibling of the source snapshot. Setting this parameter to false for an attached snapshot causes an error."
              type: boolean
      tags:
      - snap
      description: "Copy a snapshot.
  If source snapshot is attached, the new copy has the same source snapshot as a parent and is marked as not modified.
  If source snapshot is not attached, the behavior depends on child parameter. By default, child parameter is false and the new copy is created as a sibling of source snapshot."
      operationId: snap_copy_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  copies:
                    description: "Snapshot copies, as defined by the snap resource type."
                    type: array
                    items:
                      description: "Information about storage resource snapshots in the storage system."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the snap instance."
      summary: 12. Copy snap by name
  /api/instances/snap/{id}/action/restore:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the snap instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            copyName:
              description: "Name of the backup snapshot created before the Restore operation occurs."
              type: string
      tags:
      - snap
      description: "Restore the snapshot to the associated storage resource.
  <br/>
  <br/>
  Before the restoration begins, the system creates a snapshot of the storage
  resource. You can use this snapshot to restore the storage resource to its previous state."
      operationId: snap_restore
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  backup:
                    description: "Backup snapshot, as defined by the snap resource type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the snap instance."
      summary: 13. Restore snap by id
  /api/instances/snap/name:{name}/action/restore:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Snapshot name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            copyName:
              description: "Name of the backup snapshot created before the Restore operation occurs."
              type: string
      tags:
      - snap
      description: "Restore the snapshot to the associated storage resource.
  <br/>
  <br/>
  Before the restoration begins, the system creates a snapshot of the storage
  resource. You can use this snapshot to restore the storage resource to its previous state."
      operationId: snap_restore_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  backup:
                    description: "Backup snapshot, as defined by the snap resource type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the snap instance."
      summary: 14. Restore snap by name
  /api/instances/snap/{id}/action/attach:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the snap instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            copyName:
              description: "Name of the snapshot copy created before the Attach operation occurs."
              type: string
            hostAccess:
              description: "List of hosts with access levels each should have to the snapshot. Only read and write access levels are permitted as host settings. If specified - snapshot will be attached to dynamic Snapshot Mount Point."
              type: array
              items:
                description: "Host access settings for snapshot."
                type: object
                properties:
                  host:
                    description: "Host to grant access to snapshot, as defined by host type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  allowedAccess:
                    description: "Access-level permissions for host."
                    $ref: '#/definitions/SnapAccessLevelEnum'
            force:
              description: "If specified, attach the snap regardless of whether this snap has dependent Thin Clones."
              type: boolean
      tags:
      - snap
      description: "Attach the snapshot so hosts can access it. Attaching a snapshot makes the
  snapshot accessible to configured hosts for restoring files and data.
  <br/>
  <br/>
  The host must have access to protection data in order to access the snapshot."
      operationId: snap_attach
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  copy:
                    description: "Snapshot copy created before the Attach operation occurs,
              as defined by the snap resource type, if copyName was specified."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the snap instance."
      summary: 15. Attach snap by id
  /api/instances/snap/name:{name}/action/attach:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Snapshot name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            copyName:
              description: "Name of the snapshot copy created before the Attach operation occurs."
              type: string
            hostAccess:
              description: "List of hosts with access levels each should have to the snapshot. Only read and write access levels are permitted as host settings. If specified - snapshot will be attached to dynamic Snapshot Mount Point."
              type: array
              items:
                description: "Host access settings for snapshot."
                type: object
                properties:
                  host:
                    description: "Host to grant access to snapshot, as defined by host type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  allowedAccess:
                    description: "Access-level permissions for host."
                    $ref: '#/definitions/SnapAccessLevelEnum'
            force:
              description: "If specified, attach the snap regardless of whether this snap has dependent Thin Clones."
              type: boolean
      tags:
      - snap
      description: "Attach the snapshot so hosts can access it. Attaching a snapshot makes the
  snapshot accessible to configured hosts for restoring files and data.
  <br/>
  <br/>
  The host must have access to protection data in order to access the snapshot."
      operationId: snap_attach_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  copy:
                    description: "Snapshot copy created before the Attach operation occurs,
              as defined by the snap resource type, if copyName was specified."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the snap instance."
      summary: 16. Attach snap by name
  /api/instances/snap/{id}/action/detach:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the snap instance."
        required: true
        type: string
      tags:
      - snap
      description: "Detach the snapshot so hosts can no longer access it."
      operationId: snap_detach
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 17. Detach snap by id
  /api/instances/snap/name:{name}/action/detach:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Snapshot name."
        required: true
        type: string
      tags:
      - snap
      description: "Detach the snapshot so hosts can no longer access it."
      operationId: snap_detach_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 18. Detach snap by name
  /api/types/snapSchedule/instances:
    get:
      tags:
      - snapSchedule
      description: 'Collection query'
      operationId: snapSchedule_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/snapSchedule'
      summary: 1. Get all snapSchedule
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name,rules]
          properties:
            name:
              description: "Name of new schedule"
              type: string
            rules:
              description: "Rules that apply to the snapshot schedule, as defined by the snapScheduleRule resource type."
              type: array
              items:
                description: "Information about snapshot schedule rules in the storage system."
                $ref: '#/definitions/snapScheduleRule'
            isSyncReplicated:
              description: "Indicates that all operations on the snapshot schedule will be synchronously replicated to the peer system."
              type: boolean
      tags:
      - snapSchedule
      description: "Create a snapshot schedule."
      operationId: snapSchedule_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new snapSchedule instance."
                    type: string
      summary: 4. Create snapSchedule
  /api/instances/snapSchedule/{id}:
    get:
      tags:
      - snapSchedule
      description: 'Instance query'
      operationId: snapSchedule_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the snapSchedule instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/snapSchedule'
      summary: 2. Get snapSchedule by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the snapSchedule instance."
        required: true
        type: string
      tags:
      - snapSchedule
      description: "Delete a snapshot schedule."
      operationId: snapSchedule_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete snapSchedule by id
  /api/instances/snapSchedule/name:{name}:
    get:
      tags:
      - snapSchedule
      description: 'Instance query'
      operationId: snapSchedule_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Snapshot schedule name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/snapSchedule'
      summary: 3. Get snapSchedule by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Snapshot schedule name."
        required: true
        type: string
      tags:
      - snapSchedule
      description: "Delete a snapshot schedule."
      operationId: snapSchedule_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete snapSchedule by name
  /api/instances/snapSchedule/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the snapSchedule instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            addRules:
              description: "Rules to add to the snapshot schedule, as defined by the snapScheduleRule instance.
          Pass the desired values for the additional rules instead of the unique identifiers of existing rules."
              type: array
              items:
                description: "Information about snapshot schedule rules in the storage system."
                $ref: '#/definitions/snapScheduleRule'
            removeRuleIds:
              description: "Unique identifiers of the rules to remove from the snapshot schedule."
              type: array
              items:
                type: string
      tags:
      - snapSchedule
      description: "Modify a snapshot schedule."
      operationId: snapSchedule_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify snapSchedule by id
  /api/instances/snapSchedule/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Snapshot schedule name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            addRules:
              description: "Rules to add to the snapshot schedule, as defined by the snapScheduleRule instance.
          Pass the desired values for the additional rules instead of the unique identifiers of existing rules."
              type: array
              items:
                description: "Information about snapshot schedule rules in the storage system."
                $ref: '#/definitions/snapScheduleRule'
            removeRuleIds:
              description: "Unique identifiers of the rules to remove from the snapshot schedule."
              type: array
              items:
                type: string
      tags:
      - snapSchedule
      description: "Modify a snapshot schedule."
      operationId: snapSchedule_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify snapSchedule by name
  /api/types/softwareUpgradeSession/instances:
    get:
      tags:
      - softwareUpgradeSession
      description: 'Collection query'
      operationId: softwareUpgradeSession_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/softwareUpgradeSession'
      summary: 1. Get all softwareUpgradeSession
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            candidate:
              description: "Candidate software to install in the upgrade session, as defined by the candidateSoftwareVersion resource type."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the candidateSoftwareVersion instance."
            selectedModel:
              $ref: '#/definitions/SPModelNameEnum'
            pauseBeforeReboot:
              description: "Flag to tell that session should stop after the 'preinstall' tasks and before first SP reboot."
              type: boolean
      tags:
      - softwareUpgradeSession
      description: "Start a session to upgrade the system software with an uploaded upgrade
  candidate."
      operationId: softwareUpgradeSession_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "The new upgrade session."
                    type: string
      summary: 3. Create softwareUpgradeSession
  /api/instances/softwareUpgradeSession/{id}:
    get:
      tags:
      - softwareUpgradeSession
      description: 'Instance query'
      operationId: softwareUpgradeSession_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier for the softwareUpgradeSession instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/softwareUpgradeSession'
      summary: 2. Get softwareUpgradeSession by id
  /api/types/softwareUpgradeSession/action/verifyUpgradeEligibility:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      tags:
      - softwareUpgradeSession
      description: "Validate that the system is in a healthy state. This is required for an
  upgrade and runs automatically when an upgrade is started. You can use this
  operation to perform a system health check at any time."
      operationId: softwareUpgradeSession_verifyUpgradeEligibility
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  messages:
                    description: "List of embedded upgradeMessage which contain the info of message's identifier, localized text, severity and so on."
                    type: array
                    items:
                      description: "A message occurrence.
  
  This is also the message object returned in the body of non-2xx return code
  REST responses."
                      type: object
                      properties:
                        errorCode:
                          description: "Error code for this message."
                          type: string
                        messages:
                          description: "List of localized messages."
                          type: array
                          items:
                            description: "List of name value pairs used to embed additional data in an object."
                            $ref: '#/definitions/localizedMessage'
                        severity:
                          description: "Severity level associated with this message."
                          $ref: '#/definitions/SeverityEnum'
                        httpStatus:
                          description: "HTTP status code for this message."
                          type: integer
      summary: 4. VerifyUpgradeEligibility softwareUpgradeSession
  /api/instances/softwareUpgradeSession/{id}/action/resume:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier for the softwareUpgradeSession instance."
        required: true
        type: string
      tags:
      - softwareUpgradeSession
      description: "Resume a session that is currently in paused, failed, or failed_lock state."
      operationId: softwareUpgradeSession_resume
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Resume softwareUpgradeSession by id
  /api/types/ssc/instances:
    get:
      tags:
      - ssc
      description: 'Collection query'
      operationId: ssc_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/ssc'
      summary: 1. Get all ssc
  /api/instances/ssc/{id}:
    get:
      tags:
      - ssc
      description: 'Instance query'
      operationId: ssc_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the ssc."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ssc'
      summary: 2. Get ssc by id
  /api/instances/ssc/name:{name}:
    get:
      tags:
      - ssc
      description: 'Instance query'
      operationId: ssc_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "SSC name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ssc'
      summary: 3. Get ssc by name
  /api/types/ssd/instances:
    get:
      tags:
      - ssd
      description: 'Collection query'
      operationId: ssd_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/ssd'
      summary: 1. Get all ssd
  /api/instances/ssd/{id}:
    get:
      tags:
      - ssd
      description: 'Instance query'
      operationId: ssd_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the ssd."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ssd'
      summary: 2. Get ssd by id
  /api/instances/ssd/name:{name}:
    get:
      tags:
      - ssd
      description: 'Instance query'
      operationId: ssd_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "SSD name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/ssd'
      summary: 3. Get ssd by name
  /api/types/storageProcessor/instances:
    get:
      tags:
      - storageProcessor
      description: 'Collection query'
      operationId: storageProcessor_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/storageProcessor'
      summary: 1. Get all storageProcessor
  /api/instances/storageProcessor/{id}:
    get:
      tags:
      - storageProcessor
      description: 'Instance query'
      operationId: storageProcessor_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the storageProcessor instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/storageProcessor'
      summary: 2. Get storageProcessor by id
  /api/instances/storageProcessor/name:{name}:
    get:
      tags:
      - storageProcessor
      description: 'Instance query'
      operationId: storageProcessor_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "SP name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/storageProcessor'
      summary: 3. Get storageProcessor by name
  /api/types/storageResource/instances:
    get:
      tags:
      - storageResource
      description: 'Collection query'
      operationId: storageResource_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/storageResource'
      summary: 01. Get all storageResource
  /api/instances/storageResource/{id}:
    get:
      tags:
      - storageResource
      description: 'Instance query'
      operationId: storageResource_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/storageResource'
      summary: 02. Get storageResource by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      tags:
      - storageResource
      description: "Delete a storage resource.

  If this method is called asynchronously then the storage resource may still exist after the call of delete() method."
      operationId: storageResource_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 33. Delete storageResource by id
  /api/instances/storageResource/name:{name}:
    get:
      tags:
      - storageResource
      description: 'Instance query'
      operationId: storageResource_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/storageResource'
      summary: 03. Get storageResource by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      tags:
      - storageResource
      description: "Delete a storage resource.

  If this method is called asynchronously then the storage resource may still exist after the call of delete() method."
      operationId: storageResource_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 34. Delete storageResource by name
  /api/types/storageResource/action/createLun:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name,lunParameters]
          properties:
            name:
              description: "Name of the standalone LUN unique to the storage system."
              type: string
            description:
              description: "Description of the LUN."
              type: string
            replicationParameters:
              description: "Replication settings for the LUN, as defined by the replicationParameters resource type."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the LUN, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            lunParameters:
              description: "LUN settings for the LUN, as defined by the lunParameters. <br> <br> <b>Note:</b>  The following lunParameters arguments are required for this operation: <ul> <li>pool</li> <li>size</li> </ul> All other lunParameters arguments are optional."
              type: object
              properties:
                pool:
                  description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                isThinEnabled:
                  description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                  type: boolean
                size:
                  description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                defaultNode:
                  description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                  $ref: '#/definitions/NodeEnum'
                hostAccess:
                  description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                  type: array
                  items:
                    description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                    type: object
                    properties:
                      host:
                        description: "Host to grant access to LUN, as defined by host type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the host instance."
                      accessMask:
                        description: "Host access mask."
                        $ref: '#/definitions/HostLUNAccessEnum'
                      hlu:
                        description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                        type: integer
                ioLimitParameters:
                  description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                  type: object
                  properties:
                    ioLimitPolicy:
                      description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the ioLimitPolicy instance."
                migrationState:
                  description: "Migration state for Destination PowerStore Orchestration."
                  $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Create a standalone LUN."
      operationId: storageResource_createLun
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResource:
                    description: "Storage resource instance that represents the new LUN, as defined by the storageResource. This is an output parameter.
<br> <b>Note:</b> If this method is called asynchronously then the LUN identified by this output parameter may not yet exist on the system after the call of createLun method."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
      summary: 04. CreateLun storageResource
  /api/instances/storageResource/{id}/action/modifyLun:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Name of the LUN unique to the storage system."
              type: string
            description:
              description: "Description of the LUN."
              type: string
            replicationParameters:
              description: "Replication settings for the LUN, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the LUN, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            lunParameters:
              description: "LUN settings for the LUN, as defined by the lunParameters. <br> <br> <b>Note: </b>Do not pass the following lunParameters arguments to this operation, because their values cannot be changed: <ul> <li>pool</li> <li>isThinEnabled</li> </ul> All other lunParameters arguments are optional."
              type: object
              properties:
                pool:
                  description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                isThinEnabled:
                  description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                  type: boolean
                size:
                  description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                defaultNode:
                  description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                  $ref: '#/definitions/NodeEnum'
                hostAccess:
                  description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                  type: array
                  items:
                    description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                    type: object
                    properties:
                      host:
                        description: "Host to grant access to LUN, as defined by host type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the host instance."
                      accessMask:
                        description: "Host access mask."
                        $ref: '#/definitions/HostLUNAccessEnum'
                      hlu:
                        description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                        type: integer
                ioLimitParameters:
                  description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                  type: object
                  properties:
                    ioLimitPolicy:
                      description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the ioLimitPolicy instance."
                migrationState:
                  description: "Migration state for Destination PowerStore Orchestration."
                  $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Modify a standalone LUN."
      operationId: storageResource_modifyLun
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 05. ModifyLun storageResource by id
  /api/instances/storageResource/name:{name}/action/modifyLun:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Name of the LUN unique to the storage system."
              type: string
            description:
              description: "Description of the LUN."
              type: string
            replicationParameters:
              description: "Replication settings for the LUN, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the LUN, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            lunParameters:
              description: "LUN settings for the LUN, as defined by the lunParameters. <br> <br> <b>Note: </b>Do not pass the following lunParameters arguments to this operation, because their values cannot be changed: <ul> <li>pool</li> <li>isThinEnabled</li> </ul> All other lunParameters arguments are optional."
              type: object
              properties:
                pool:
                  description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                isThinEnabled:
                  description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                  type: boolean
                size:
                  description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                defaultNode:
                  description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                  $ref: '#/definitions/NodeEnum'
                hostAccess:
                  description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                  type: array
                  items:
                    description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                    type: object
                    properties:
                      host:
                        description: "Host to grant access to LUN, as defined by host type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the host instance."
                      accessMask:
                        description: "Host access mask."
                        $ref: '#/definitions/HostLUNAccessEnum'
                      hlu:
                        description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                        type: integer
                ioLimitParameters:
                  description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                  type: object
                  properties:
                    ioLimitPolicy:
                      description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the ioLimitPolicy instance."
                migrationState:
                  description: "Migration state for Destination PowerStore Orchestration."
                  $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Modify a standalone LUN."
      operationId: storageResource_modifyLun_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 06. ModifyLun storageResource by name
  /api/types/storageResource/action/createConsistencyGroup:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name]
          properties:
            name:
              description: "Name of the consistency group unique to the storage system."
              type: string
            description:
              description: "Description of the consistency group."
              type: string
            replicationParameters:
              description: "Replication settings for the consistency group, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            advancedDedupParameters:
              description: "Advanced deduplication settings for the LUN group, as defined by the advancedDedupParameters."
              $ref: '#/definitions/advancedDedupParameters'
            dataReductionParameters:
              description: "Data reduction settings for the LUN group, as defined by the dataReductionParameters resource type."
              $ref: '#/definitions/dataReductionParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the consistency group, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            fastVPParameters:
              description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.) FAST VP settings for the consistency group, as defined by the fastVPParameters."
              $ref: '#/definitions/fastVPParameters'
            blockHostAccess:
              description: "Host access settings for the consistency group, as defined by the blockHostAccess."
              type: array
              items:
                description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                type: object
                properties:
                  host:
                    description: "Host to grant access to LUN, as defined by host type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  accessMask:
                    description: "Host access mask."
                    $ref: '#/definitions/HostLUNAccessEnum'
                  hlu:
                    description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                    type: integer
            lunCreate:
              description: "LUN to create and add to the consistency group, as defined by the lunCreate. <br> <br> <b>Note:</b>  The following lunCreate arguments are required for this operation: <ul> <li>name</li> <li>lunParameters.pool</li> <li>lunParameters.size </ul> All other lunCreate arguments are optional."
              type: array
              items:
                description: "LUN parameters used for creating a LUN when creating or modifying a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  name:
                    description: "LUN name unque to the storage system."
                    type: string
                  description:
                    description: "LUN description."
                    type: string
                  lunParameters:
                    description: "(Required) Settings for the LUN, as defined by the lunParameters resource
  type."
                    type: object
                    properties:
                      pool:
                        description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the pool instance."
                      isThinEnabled:
                        description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                        type: boolean
                      isDataReductionEnabled:
                        description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                        type: boolean
                      isAdvancedDedupEnabled:
                        description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                        type: boolean
                      size:
                        description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                        type: integer
                      fastVPParameters:
                        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                        $ref: '#/definitions/fastVPParameters'
                      defaultNode:
                        description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                        $ref: '#/definitions/NodeEnum'
                      hostAccess:
                        description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                        type: array
                        items:
                          description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                          type: object
                          properties:
                            host:
                              description: "Host to grant access to LUN, as defined by host type."
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: "Unique identifier of the host instance."
                            accessMask:
                              description: "Host access mask."
                              $ref: '#/definitions/HostLUNAccessEnum'
                            hlu:
                              description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                              type: integer
                      ioLimitParameters:
                        description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                        type: object
                        properties:
                          ioLimitPolicy:
                            description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                            type: object
                            properties:
                              id:
                                type: string
                                description: "Unique identifier of the ioLimitPolicy instance."
                      migrationState:
                        description: "Migration state for Destination PowerStore Orchestration."
                        $ref: '#/definitions/DCMigrationStateEnum'
            lunAdd:
              description: "Existing LUNs to add to the consistency group, as defined by the lunAdd. These LUNs should not belong to the other consistency group. <br> <br> <b>Note:</b>  The lunAdd.lun argument is required for this operation."
              type: array
              items:
                description: "Parameters used for adding a LUN to a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  lun:
                    description: "Existing LUN to add to the Consistency group.
  This LUN should not belong to any other Consistency group."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
      tags:
      - storageResource
      description: "Create a consistency group (former LUN group)."
      operationId: storageResource_createConsistencyGroup
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResource:
                    description: "Storage resource instance that represents the new consistency group, as defined by the storageResource. <br> <br> <b>Note:</b> If this method is called asynchronously then the consistency group identified by this output parameter may yet not exist on the system after the call of createConsistencyGroup method."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
      summary: 07. CreateConsistencyGroup storageResource
  /api/instances/storageResource/{id}/action/modifyConsistencyGroup:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Name of the consistency group unique to the storage system."
              type: string
            description:
              description: "Description of the consistency group."
              type: string
            replicationParameters:
              description: "Replication settings for the consistency group, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot protection schedule settings for the consistency group, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            fastVPParameters:
              description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.) FAST VP settings for the consistency group, as defined by the fastVPParameters."
              $ref: '#/definitions/fastVPParameters'
            advancedDedupParameters:
              description: "Advanced deduplication settings for the LUN group, as defined by the advancedDedupParameters."
              $ref: '#/definitions/advancedDedupParameters'
            dataReductionParameters:
              description: "Data reduction settings for the LUN group, as defined by the dataReductionParameters resource type."
              $ref: '#/definitions/dataReductionParameters'
            blockHostAccess:
              description: "Host access settings for the consistency group, as defined by the blockHostAccess resource type."
              type: array
              items:
                description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                type: object
                properties:
                  host:
                    description: "Host to grant access to LUN, as defined by host type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  accessMask:
                    description: "Host access mask."
                    $ref: '#/definitions/HostLUNAccessEnum'
                  hlu:
                    description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                    type: integer
            addBlockHostAccess:
              description: "One or more hosts, with access settings, to add to the access list for the consistency group. The hosts will be allowed to access each LUN in the consistency group with the specified access settings. The hosts should not already be in the access list for any of the luns in the consistency group."
              type: array
              items:
                description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                type: object
                properties:
                  host:
                    description: "Host to grant access to LUN, as defined by host type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  accessMask:
                    description: "Host access mask."
                    $ref: '#/definitions/HostLUNAccessEnum'
                  hlu:
                    description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                    type: integer
            removeBlockHostAccess:
              description: "Hosts whose access to the consistency group should be removed, as defined by the host."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            lunCreate:
              description: "LUN to create and add to the consistency group, as defined by the lunCreate. <br> <br> <b>Note:</b>  The following lunCreate arguments are required for this operation: <ul> <li>name</li> <li>lunParameters.pool</li> <li>lunParameters.size </ul> All other lunCreate arguments are optional."
              type: array
              items:
                description: "LUN parameters used for creating a LUN when creating or modifying a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  name:
                    description: "LUN name unque to the storage system."
                    type: string
                  description:
                    description: "LUN description."
                    type: string
                  lunParameters:
                    description: "(Required) Settings for the LUN, as defined by the lunParameters resource
  type."
                    type: object
                    properties:
                      pool:
                        description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the pool instance."
                      isThinEnabled:
                        description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                        type: boolean
                      isDataReductionEnabled:
                        description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                        type: boolean
                      isAdvancedDedupEnabled:
                        description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                        type: boolean
                      size:
                        description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                        type: integer
                      fastVPParameters:
                        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                        $ref: '#/definitions/fastVPParameters'
                      defaultNode:
                        description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                        $ref: '#/definitions/NodeEnum'
                      hostAccess:
                        description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                        type: array
                        items:
                          description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                          type: object
                          properties:
                            host:
                              description: "Host to grant access to LUN, as defined by host type."
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: "Unique identifier of the host instance."
                            accessMask:
                              description: "Host access mask."
                              $ref: '#/definitions/HostLUNAccessEnum'
                            hlu:
                              description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                              type: integer
                      ioLimitParameters:
                        description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                        type: object
                        properties:
                          ioLimitPolicy:
                            description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                            type: object
                            properties:
                              id:
                                type: string
                                description: "Unique identifier of the ioLimitPolicy instance."
                      migrationState:
                        description: "Migration state for Destination PowerStore Orchestration."
                        $ref: '#/definitions/DCMigrationStateEnum'
            lunModify:
              description: "LUN to modify in the consistency group, as defined by the lunModify. <br> <br> <b>Notes:</b>   <ul> <li>The lunModify.lun argument is required for this operation.</li> <li>Do not pass the lunModify.lunParameters.pool, or lunModify.lunParameters.isThinEnabled arguments to this operation, because their values cannot be changed.</li>  <li>All other lunModify arguments are optional.</li> </ul>"
              type: array
              items:
                description: "Parameters used for modifying a LUN when modifying a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  lun:
                    description: "LUN to modify."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
                  name:
                    description: "New name of the LUN unique to the storage system."
                    type: string
                  description:
                    description: "New LUN description."
                    type: string
                  lunParameters:
                    description: "Settings for the LUN, as defined by the lunParameters."
                    type: object
                    properties:
                      pool:
                        description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the pool instance."
                      isThinEnabled:
                        description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                        type: boolean
                      isDataReductionEnabled:
                        description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                        type: boolean
                      isAdvancedDedupEnabled:
                        description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                        type: boolean
                      size:
                        description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                        type: integer
                      fastVPParameters:
                        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                        $ref: '#/definitions/fastVPParameters'
                      defaultNode:
                        description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                        $ref: '#/definitions/NodeEnum'
                      hostAccess:
                        description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                        type: array
                        items:
                          description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                          type: object
                          properties:
                            host:
                              description: "Host to grant access to LUN, as defined by host type."
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: "Unique identifier of the host instance."
                            accessMask:
                              description: "Host access mask."
                              $ref: '#/definitions/HostLUNAccessEnum'
                            hlu:
                              description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                              type: integer
                      ioLimitParameters:
                        description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                        type: object
                        properties:
                          ioLimitPolicy:
                            description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                            type: object
                            properties:
                              id:
                                type: string
                                description: "Unique identifier of the ioLimitPolicy instance."
                      migrationState:
                        description: "Migration state for Destination PowerStore Orchestration."
                        $ref: '#/definitions/DCMigrationStateEnum'
            lunAdd:
              description: "Existing LUNs to add to the consistency group, as defined by the lunAdd. These LUNs should not belong to the other consistency group. <br> <br> <b>Note: </b>The lunAdd.lun argument is required for this operation."
              type: array
              items:
                description: "Parameters used for adding a LUN to a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  lun:
                    description: "Existing LUN to add to the Consistency group.
  This LUN should not belong to any other Consistency group."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
            lunRemove:
              description: "LUNs to remove from the consistency group, as defined by the lunRemove. The LUNs are not deleted from the storage system when you remove them from the consistency group. The LUN removed from consistency group becomes standalone LUN. <br> <br> <b>Note: </b> The lunRemove.lun argument is required for this operation."
              type: array
              items:
                description: "Parameters used for removing a LUN from a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  lun:
                    description: "LUN to remove from the Consistency group.
  The LUN removed from Consistency group is not deleted from the storage system and simply becomes a standalone LUN not associated with any Consistency group.
  A LUN removed from one Consistency group then can be added to another Consistency group.
  To also delete the LUN after removing it, use the deleteLun parameter instead."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
            lunDelete:
              description: "LUNs to remove from the consistency group and completely delete from the storage system. <br> <br> <b>Note: </b>The lunDelete.lun argument is required for this operation."
              type: array
              items:
                description: "Parameters used for deleting a LUN when modifying a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  lun:
                    description: "LUN to remove from the Consistency group and completely delete from the storage system.
  To remove the LUN from the Consistency group without deletion from the storage system put the LUN into lunRemove object."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
                  forceSnapDeletion:
                    description: "Indicates whether to delete all LUN snapshots along with the LUN. Values are:
  <ul>
  <li>true - Delete all LUN snapshots.</li>
  <li>false - Do not delete LUN snapshots.</li>
  </ul>"
                    type: boolean
      tags:
      - storageResource
      description: "Modify a consistency group."
      operationId: storageResource_modifyConsistencyGroup
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 08. ModifyConsistencyGroup storageResource by id
  /api/instances/storageResource/name:{name}/action/modifyConsistencyGroup:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Name of the consistency group unique to the storage system."
              type: string
            description:
              description: "Description of the consistency group."
              type: string
            replicationParameters:
              description: "Replication settings for the consistency group, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot protection schedule settings for the consistency group, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            fastVPParameters:
              description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.) FAST VP settings for the consistency group, as defined by the fastVPParameters."
              $ref: '#/definitions/fastVPParameters'
            advancedDedupParameters:
              description: "Advanced deduplication settings for the LUN group, as defined by the advancedDedupParameters."
              $ref: '#/definitions/advancedDedupParameters'
            dataReductionParameters:
              description: "Data reduction settings for the LUN group, as defined by the dataReductionParameters resource type."
              $ref: '#/definitions/dataReductionParameters'
            blockHostAccess:
              description: "Host access settings for the consistency group, as defined by the blockHostAccess resource type."
              type: array
              items:
                description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                type: object
                properties:
                  host:
                    description: "Host to grant access to LUN, as defined by host type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  accessMask:
                    description: "Host access mask."
                    $ref: '#/definitions/HostLUNAccessEnum'
                  hlu:
                    description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                    type: integer
            addBlockHostAccess:
              description: "One or more hosts, with access settings, to add to the access list for the consistency group. The hosts will be allowed to access each LUN in the consistency group with the specified access settings. The hosts should not already be in the access list for any of the luns in the consistency group."
              type: array
              items:
                description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                type: object
                properties:
                  host:
                    description: "Host to grant access to LUN, as defined by host type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  accessMask:
                    description: "Host access mask."
                    $ref: '#/definitions/HostLUNAccessEnum'
                  hlu:
                    description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                    type: integer
            removeBlockHostAccess:
              description: "Hosts whose access to the consistency group should be removed, as defined by the host."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            lunCreate:
              description: "LUN to create and add to the consistency group, as defined by the lunCreate. <br> <br> <b>Note:</b>  The following lunCreate arguments are required for this operation: <ul> <li>name</li> <li>lunParameters.pool</li> <li>lunParameters.size </ul> All other lunCreate arguments are optional."
              type: array
              items:
                description: "LUN parameters used for creating a LUN when creating or modifying a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  name:
                    description: "LUN name unque to the storage system."
                    type: string
                  description:
                    description: "LUN description."
                    type: string
                  lunParameters:
                    description: "(Required) Settings for the LUN, as defined by the lunParameters resource
  type."
                    type: object
                    properties:
                      pool:
                        description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the pool instance."
                      isThinEnabled:
                        description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                        type: boolean
                      isDataReductionEnabled:
                        description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                        type: boolean
                      isAdvancedDedupEnabled:
                        description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                        type: boolean
                      size:
                        description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                        type: integer
                      fastVPParameters:
                        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                        $ref: '#/definitions/fastVPParameters'
                      defaultNode:
                        description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                        $ref: '#/definitions/NodeEnum'
                      hostAccess:
                        description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                        type: array
                        items:
                          description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                          type: object
                          properties:
                            host:
                              description: "Host to grant access to LUN, as defined by host type."
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: "Unique identifier of the host instance."
                            accessMask:
                              description: "Host access mask."
                              $ref: '#/definitions/HostLUNAccessEnum'
                            hlu:
                              description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                              type: integer
                      ioLimitParameters:
                        description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                        type: object
                        properties:
                          ioLimitPolicy:
                            description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                            type: object
                            properties:
                              id:
                                type: string
                                description: "Unique identifier of the ioLimitPolicy instance."
                      migrationState:
                        description: "Migration state for Destination PowerStore Orchestration."
                        $ref: '#/definitions/DCMigrationStateEnum'
            lunModify:
              description: "LUN to modify in the consistency group, as defined by the lunModify. <br> <br> <b>Notes:</b>   <ul> <li>The lunModify.lun argument is required for this operation.</li> <li>Do not pass the lunModify.lunParameters.pool, or lunModify.lunParameters.isThinEnabled arguments to this operation, because their values cannot be changed.</li>  <li>All other lunModify arguments are optional.</li> </ul>"
              type: array
              items:
                description: "Parameters used for modifying a LUN when modifying a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  lun:
                    description: "LUN to modify."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
                  name:
                    description: "New name of the LUN unique to the storage system."
                    type: string
                  description:
                    description: "New LUN description."
                    type: string
                  lunParameters:
                    description: "Settings for the LUN, as defined by the lunParameters."
                    type: object
                    properties:
                      pool:
                        description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the pool instance."
                      isThinEnabled:
                        description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                        type: boolean
                      isDataReductionEnabled:
                        description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                        type: boolean
                      isAdvancedDedupEnabled:
                        description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                        type: boolean
                      size:
                        description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                        type: integer
                      fastVPParameters:
                        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                        $ref: '#/definitions/fastVPParameters'
                      defaultNode:
                        description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                        $ref: '#/definitions/NodeEnum'
                      hostAccess:
                        description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                        type: array
                        items:
                          description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                          type: object
                          properties:
                            host:
                              description: "Host to grant access to LUN, as defined by host type."
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: "Unique identifier of the host instance."
                            accessMask:
                              description: "Host access mask."
                              $ref: '#/definitions/HostLUNAccessEnum'
                            hlu:
                              description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                              type: integer
                      ioLimitParameters:
                        description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                        type: object
                        properties:
                          ioLimitPolicy:
                            description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                            type: object
                            properties:
                              id:
                                type: string
                                description: "Unique identifier of the ioLimitPolicy instance."
                      migrationState:
                        description: "Migration state for Destination PowerStore Orchestration."
                        $ref: '#/definitions/DCMigrationStateEnum'
            lunAdd:
              description: "Existing LUNs to add to the consistency group, as defined by the lunAdd. These LUNs should not belong to the other consistency group. <br> <br> <b>Note: </b>The lunAdd.lun argument is required for this operation."
              type: array
              items:
                description: "Parameters used for adding a LUN to a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  lun:
                    description: "Existing LUN to add to the Consistency group.
  This LUN should not belong to any other Consistency group."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
            lunRemove:
              description: "LUNs to remove from the consistency group, as defined by the lunRemove. The LUNs are not deleted from the storage system when you remove them from the consistency group. The LUN removed from consistency group becomes standalone LUN. <br> <br> <b>Note: </b> The lunRemove.lun argument is required for this operation."
              type: array
              items:
                description: "Parameters used for removing a LUN from a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  lun:
                    description: "LUN to remove from the Consistency group.
  The LUN removed from Consistency group is not deleted from the storage system and simply becomes a standalone LUN not associated with any Consistency group.
  A LUN removed from one Consistency group then can be added to another Consistency group.
  To also delete the LUN after removing it, use the deleteLun parameter instead."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
            lunDelete:
              description: "LUNs to remove from the consistency group and completely delete from the storage system. <br> <br> <b>Note: </b>The lunDelete.lun argument is required for this operation."
              type: array
              items:
                description: "Parameters used for deleting a LUN when modifying a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  lun:
                    description: "LUN to remove from the Consistency group and completely delete from the storage system.
  To remove the LUN from the Consistency group without deletion from the storage system put the LUN into lunRemove object."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
                  forceSnapDeletion:
                    description: "Indicates whether to delete all LUN snapshots along with the LUN. Values are:
  <ul>
  <li>true - Delete all LUN snapshots.</li>
  <li>false - Do not delete LUN snapshots.</li>
  </ul>"
                    type: boolean
      tags:
      - storageResource
      description: "Modify a consistency group."
      operationId: storageResource_modifyConsistencyGroup_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 09. ModifyConsistencyGroup storageResource by name
  /api/types/storageResource/action/createVmwareLun:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name,lunParameters]
          properties:
            name:
              description: "Name of the VMware VMFS datastore unique to the storage resource."
              type: string
            description:
              description: "Description of the VMware VMFS datastore."
              type: string
            replicationParameters:
              description: "Replication settings for the VMware VMFS datastore, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the VMware VMFS datastore, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            vmwareIscsiParameters:
              description: "VMware VMFS settings for the VMFS datastore, as defined by the vmwareIscsiParameters."
              $ref: '#/definitions/vmwareIscsiParameters'
            lunParameters:
              description: "LUN settings for the VMware VMFS datastore, as defined by the lunParameters. <br> <br> <b>Note:</b>  The following lunParameters arguments are required for this operation: <ul> <li>pool</li> <li>size</li> </ul> All other lunParameters arguments are optional."
              type: object
              properties:
                pool:
                  description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                isThinEnabled:
                  description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                  type: boolean
                size:
                  description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                defaultNode:
                  description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                  $ref: '#/definitions/NodeEnum'
                hostAccess:
                  description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                  type: array
                  items:
                    description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                    type: object
                    properties:
                      host:
                        description: "Host to grant access to LUN, as defined by host type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the host instance."
                      accessMask:
                        description: "Host access mask."
                        $ref: '#/definitions/HostLUNAccessEnum'
                      hlu:
                        description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                        type: integer
                ioLimitParameters:
                  description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                  type: object
                  properties:
                    ioLimitPolicy:
                      description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the ioLimitPolicy instance."
                migrationState:
                  description: "Migration state for Destination PowerStore Orchestration."
                  $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Create a VMware VMFS datastore."
      operationId: storageResource_createVmwareLun
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResource:
                    description: "Storage resource instance that represents the new VMware VMFS datastore, as defined by the storageResource. <br> <br> <b>Note:</b> If this method is called asynchronously then the VMware VMFS datastore identified by this output parameter may not yet exist on the system after the call of createVmwareLun method."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
      summary: 10. CreateVmwareLun storageResource
  /api/instances/storageResource/{id}/action/modifyVmwareLun:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "name of the VMware VMFS datastore unique to the system."
              type: string
            description:
              description: "Description of the VMware VMFS datastore."
              type: string
            replicationParameters:
              description: "Replication settings for the VMware VMFS datastore, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the VMware VMFS datastore, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            vmwareIscsiParameters:
              description: "VMware VMFS settings for the VMFS datastore, as defined by the vmwareIscsiParameters."
              $ref: '#/definitions/vmwareIscsiParameters'
            lunParameters:
              description: "LUN settings for the VMware VMFS datastore, as defined by the lunParameters. <br> <br> <b>Note:</b>  Do not pass the following lunParameters arguments to this operation, because their values cannot be changed: <ul> <li>pool</li> <li>isThinEnabled</li> </ul> All other lunParameters arguments are optional."
              type: object
              properties:
                pool:
                  description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                isThinEnabled:
                  description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                  type: boolean
                size:
                  description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                defaultNode:
                  description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                  $ref: '#/definitions/NodeEnum'
                hostAccess:
                  description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                  type: array
                  items:
                    description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                    type: object
                    properties:
                      host:
                        description: "Host to grant access to LUN, as defined by host type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the host instance."
                      accessMask:
                        description: "Host access mask."
                        $ref: '#/definitions/HostLUNAccessEnum'
                      hlu:
                        description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                        type: integer
                ioLimitParameters:
                  description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                  type: object
                  properties:
                    ioLimitPolicy:
                      description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the ioLimitPolicy instance."
                migrationState:
                  description: "Migration state for Destination PowerStore Orchestration."
                  $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Modify a VMware VMFS datastore."
      operationId: storageResource_modifyVmwareLun
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 11. ModifyVmwareLun storageResource by id
  /api/instances/storageResource/name:{name}/action/modifyVmwareLun:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "name of the VMware VMFS datastore unique to the system."
              type: string
            description:
              description: "Description of the VMware VMFS datastore."
              type: string
            replicationParameters:
              description: "Replication settings for the VMware VMFS datastore, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the VMware VMFS datastore, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            vmwareIscsiParameters:
              description: "VMware VMFS settings for the VMFS datastore, as defined by the vmwareIscsiParameters."
              $ref: '#/definitions/vmwareIscsiParameters'
            lunParameters:
              description: "LUN settings for the VMware VMFS datastore, as defined by the lunParameters. <br> <br> <b>Note:</b>  Do not pass the following lunParameters arguments to this operation, because their values cannot be changed: <ul> <li>pool</li> <li>isThinEnabled</li> </ul> All other lunParameters arguments are optional."
              type: object
              properties:
                pool:
                  description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                isThinEnabled:
                  description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                  type: boolean
                size:
                  description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                defaultNode:
                  description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                  $ref: '#/definitions/NodeEnum'
                hostAccess:
                  description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                  type: array
                  items:
                    description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                    type: object
                    properties:
                      host:
                        description: "Host to grant access to LUN, as defined by host type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the host instance."
                      accessMask:
                        description: "Host access mask."
                        $ref: '#/definitions/HostLUNAccessEnum'
                      hlu:
                        description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                        type: integer
                ioLimitParameters:
                  description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                  type: object
                  properties:
                    ioLimitPolicy:
                      description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the ioLimitPolicy instance."
                migrationState:
                  description: "Migration state for Destination PowerStore Orchestration."
                  $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Modify a VMware VMFS datastore."
      operationId: storageResource_modifyVmwareLun_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 12. ModifyVmwareLun storageResource by name
  /api/types/storageResource/action/createVmwareNfs:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name,fsParameters]
          properties:
            name:
              description: "Unique name of the VMware NFS datastore."
              type: string
            description:
              description: "Description of the VMware NFS datastore."
              type: string
            replicationParameters:
              description: "Replication settings for the VMware NFS datastore, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the VMware NFS datastore, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            fsParameters:
              description: "File system settings for the VMware NFS datastore, as defined by the filesystemParameters. <br> <br> <b>Note:</b> The following fsParameters arguments are required for this operation: <ul> <li>pool</li> <li>nasServer</li> <li>size</li> </ul> All other fsParameter arguments are optional."
              type: object
              properties:
                pool:
                  description: "Storage pool to create the file system.
  The pool is required in creation requests and must not be passed in modification requests."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                nasServer:
                  description: "NAS server that provides network connectivity to the share from the hosts.
  The NAS server parameter is required in creation request and must not be passed in modification requests."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the nasServer instance."
                supportedProtocols:
                  description: "(Applies to create operations only.)
  Sharing protocols supported by the file
  system."
                  $ref: '#/definitions/FSSupportedProtocolEnum'
                flrVersion:
                  description: "Indicates which File Level Retention (FLR) version is enabled on the file system.
  Values are:
  <ul>
  <li>0 - FLR is OFF on the file system.</li>
  <li>1 - Enterprise is enabled on the file system.</li>
  <li>2 - Compliance is enabled on the file system.</li>
  </ul>"
                  $ref: '#/definitions/FLRVersionEnum'
                flrMinRetention:
                  description: "The shortest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                flrDefaultRetention:
                  description: "The default retention period is used in an FLR-enabled file system when a file is locked and a retention period is not specified.
  The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                flrMaxRetention:
                  description: "The longest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value should be bigger than 0. The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                isFlrAutoLockEnabled:
                  description: "Users can specify whether to automatically lock files in an FLR-enabled file system, as well as a policy interval for how long to wait after files are modified before the files are automatically locked. When enabled, auto-locked files are set with the default retention period value. This attribute indicates whether automatic lock is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic lock is enabled on the file system.</li>
  <li>false - automatic lock is disabled on the file system.</li>
  </ul>"
                  type: boolean
                isFlrAutoDeleteEnabled:
                  description: "Users can specify whether to automatically delete locked files from an FLR-enabled file system once their retention periods have expired. This value indicates whether automatic delete is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic delete is enabled on the file system.</li>
  <li>false - automatic delete is disabled on the file system.</li>
  </ul>"
                  type: boolean
                flrAutoLockDelay:
                  description: "Indicates how long to wait after files are modified before the files are automatically locked. The default value is 1 hour."
                  type: string
                  format: date-time
                errorThreshold:
                  description: "Percentage of high threshold of occupied space for alert in the file system."
                  type: integer
                warningThreshold:
                  description: "Percentage of medium threshold of occupied space for alert in the file system."
                  type: integer
                infoThreshold:
                  description: "Percentage of low threshold of occupied space for alert in the file system."
                  type: integer
                isThinEnabled:
                  description: "(Applies to create operations only.) 
  Indicates whether to enable thin
  provisioning for file system. Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <b>Note:</b> If you enable thin provisioning for a file system, you cannot
  disable it later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the file system. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced dedup for the file system. Values are:
  <ul>
  <li>true - Enable advanced dedup </li>
  <li>false - Disable advanced dedup(default) </li>
  </ul>"
                  type: boolean
                size:
                  description: "Size of the file system."
                  type: integer
                hostIOSize:
                  description: "Typical write I/O size from the host to the file system."
                  $ref: '#/definitions/HostIOSizeEnum'
                sizeAllocated:
                  description: "Allocated size of the file system."
                  type: integer
                minSizeAllocated:
                  description: "Minimum size allocated of the file system."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the file system, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                isCacheDisabled:
                  description: "Indicates whether caching is disabled. Values are:
  <ul>
  <li>true - Caching is disabled.</li>
  <li>false - Caching is enabled.</li>
  </ul>"
                  type: boolean
                accessPolicy:
                  description: "Access policy."
                  $ref: '#/definitions/AccessPolicyEnum'
                folderRenamePolicy:
                  description: "File system folder rename policies.
  These policy choices control whether directory can be renamed from NFS or SMB clients 
  if at least one file is opened in the directory or in one of its children directory."
                  $ref: '#/definitions/FSRenamePolicyEnum'
                lockingPolicy:
                  description: "Locking policy."
                  $ref: '#/definitions/FSLockingPolicyEnum'
                poolFullPolicy:
                  description: "Behavior to follow when pool is full and a write to this filesystem is attempted. Values are:
  <ul>
  <li>Delete_All_Snaps - All snaps to the File System will be marked for deletion to free up space.</li>
  <li>Fail_Writes      - Writes to the File System will fail.</li>
  </ul>"
                  $ref: '#/definitions/ResourcePoolFullPolicyEnum'
                fileEventSettings:
                  description: "Indicates whether File Event Service is enabled for some protocols on the filesystem."
                  $ref: '#/definitions/fileEventSettings'
            nfsShareParameters:
              description: "NFS share settings for the VMware NFS datastore, as defined by the nfsShareParameters."
              type: object
              properties:
                description:
                  description: "NFS share description."
                  type: string
                isReadOnly:
                  description: "Indicates whether the NFS share is read-only. Values are:
  <ul>
  <li>true - NFS share is read-only.</li>
  <li>false - NFS share is read-write.</li>
  </ul>"
                  type: boolean
                defaultAccess:
                  description: "Default access level for all hosts accessing the NFS share."
                  $ref: '#/definitions/NFSShareDefaultAccessEnum'
                minSecurity:
                  description: "Minimal security level that must be provided by a client to mount the NFS share."
                  $ref: '#/definitions/NFSShareSecurityEnum'
                nfsOwnerUsername:
                  description: "(Applies to NFS shares of VMware NFS storage resources.)
 Default owner of the NFS share associated with the datastore. Required if secure NFS enabled. Attribute minSecurity should be set to Kerberos value. 
 For NFSv3 or NFSv4 without Kerberos, the default owner is root."
                  type: string
                noAccessHosts:
                  description: "Hosts with no access to the NFS share or its snapshots, as defined by the host
  resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                readOnlyHosts:
                  description: "Hosts with read-only access to the NFS share and its snapshots, as defined by
  the host resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                readWriteHosts:
                  description: "Hosts with read-write access to the NFS share and its snapshots, as defined by
  the host resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                readOnlyRootAccessHosts:
                  description: "Hosts with read-only root access to the NFS share and its
  snapshots, as defined by the host resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                rootAccessHosts:
                  description: "Hosts with read-write root access to the NFS share and its
  snapshots, as defined by the host resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                noAccessHostsString:
                  description: "Hosts with no access to the NFS share or its snapshots,
  defined as comma-separated list of hostnames, subnets, IPs,
  domains or netgroups."
                  type: string
                readOnlyHostsString:
                  description: "Hosts with read-only access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                  type: string
                readWriteHostsString:
                  description: "Hosts with read-write access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                  type: string
                readOnlyRootHostsString:
                  description: "Hosts with read-only root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                  type: string
                readWriteRootHostsString:
                  description: "Hosts with read-write root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                  type: string
                anonymousUID:
                  description: "Specifies the user ID of the anonymous account."
                  type: integer
                anonymousGID:
                  description: "Specifies the group ID of the anonymous account."
                  type: integer
                exportOption:
                  description: "Specifies the bitmask of various options of the NFS share.
  Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS
  share per host is defined according the hostsString lists.
  Otherwise, the access is defined according the hostID lists.
  </li>
  <li> 0x0002 - noSUID - if set, do not allow access to set
  SUID. Otherwise, allow access.
  </li>
  </ul>"
                  type: integer
            vmwareNfsParameters:
              $ref: '#/definitions/vmwareNfsParameters'
      tags:
      - storageResource
      description: "Create a VMware NFS datastore.
  <br/>
  <br/>
  <b>Note:</b> Before creating a VMware NFS datastore, at least one NAS server must exist
  on the storage system."
      operationId: storageResource_createVmwareNfs
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResource:
                    description: "Storage resource instance that represents the new VMware NFS datastore, as defined by the storageResource. <br> <br> <b>Note:</b> If this method is called asynchronously then the VMware NFS datastore identified by this output parameter may not yet exist on the system after the call of createVmwareNfs method."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
      summary: 13. CreateVmwareNfs storageResource
  /api/instances/storageResource/{id}/action/modifyVmwareNfs:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            description:
              description: "Description of the VMware NFS datastore."
              type: string
            replicationParameters:
              description: "Replication parameters for the VMware NFS datastore, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the VMware NFS datastore, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            fsParameters:
              description: "File system settings for the VMware datastore, as defined by the filesystemParameters. <br> <br> <b>Note:</b> Do not pass the following filesystemParameters to this operation, because their values cannot be changed: <ul> <li>pool</li> <li>nasServer</li> <li>supportedProtocols</li> <li>isFLREnabledarguments</li>  </ul>"
              type: object
              properties:
                pool:
                  description: "Storage pool to create the file system.
  The pool is required in creation requests and must not be passed in modification requests."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                nasServer:
                  description: "NAS server that provides network connectivity to the share from the hosts.
  The NAS server parameter is required in creation request and must not be passed in modification requests."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the nasServer instance."
                supportedProtocols:
                  description: "(Applies to create operations only.)
  Sharing protocols supported by the file
  system."
                  $ref: '#/definitions/FSSupportedProtocolEnum'
                flrVersion:
                  description: "Indicates which File Level Retention (FLR) version is enabled on the file system.
  Values are:
  <ul>
  <li>0 - FLR is OFF on the file system.</li>
  <li>1 - Enterprise is enabled on the file system.</li>
  <li>2 - Compliance is enabled on the file system.</li>
  </ul>"
                  $ref: '#/definitions/FLRVersionEnum'
                flrMinRetention:
                  description: "The shortest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                flrDefaultRetention:
                  description: "The default retention period is used in an FLR-enabled file system when a file is locked and a retention period is not specified.
  The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                flrMaxRetention:
                  description: "The longest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value should be bigger than 0. The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                isFlrAutoLockEnabled:
                  description: "Users can specify whether to automatically lock files in an FLR-enabled file system, as well as a policy interval for how long to wait after files are modified before the files are automatically locked. When enabled, auto-locked files are set with the default retention period value. This attribute indicates whether automatic lock is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic lock is enabled on the file system.</li>
  <li>false - automatic lock is disabled on the file system.</li>
  </ul>"
                  type: boolean
                isFlrAutoDeleteEnabled:
                  description: "Users can specify whether to automatically delete locked files from an FLR-enabled file system once their retention periods have expired. This value indicates whether automatic delete is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic delete is enabled on the file system.</li>
  <li>false - automatic delete is disabled on the file system.</li>
  </ul>"
                  type: boolean
                flrAutoLockDelay:
                  description: "Indicates how long to wait after files are modified before the files are automatically locked. The default value is 1 hour."
                  type: string
                  format: date-time
                errorThreshold:
                  description: "Percentage of high threshold of occupied space for alert in the file system."
                  type: integer
                warningThreshold:
                  description: "Percentage of medium threshold of occupied space for alert in the file system."
                  type: integer
                infoThreshold:
                  description: "Percentage of low threshold of occupied space for alert in the file system."
                  type: integer
                isThinEnabled:
                  description: "(Applies to create operations only.) 
  Indicates whether to enable thin
  provisioning for file system. Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <b>Note:</b> If you enable thin provisioning for a file system, you cannot
  disable it later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the file system. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced dedup for the file system. Values are:
  <ul>
  <li>true - Enable advanced dedup </li>
  <li>false - Disable advanced dedup(default) </li>
  </ul>"
                  type: boolean
                size:
                  description: "Size of the file system."
                  type: integer
                hostIOSize:
                  description: "Typical write I/O size from the host to the file system."
                  $ref: '#/definitions/HostIOSizeEnum'
                sizeAllocated:
                  description: "Allocated size of the file system."
                  type: integer
                minSizeAllocated:
                  description: "Minimum size allocated of the file system."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the file system, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                isCacheDisabled:
                  description: "Indicates whether caching is disabled. Values are:
  <ul>
  <li>true - Caching is disabled.</li>
  <li>false - Caching is enabled.</li>
  </ul>"
                  type: boolean
                accessPolicy:
                  description: "Access policy."
                  $ref: '#/definitions/AccessPolicyEnum'
                folderRenamePolicy:
                  description: "File system folder rename policies.
  These policy choices control whether directory can be renamed from NFS or SMB clients 
  if at least one file is opened in the directory or in one of its children directory."
                  $ref: '#/definitions/FSRenamePolicyEnum'
                lockingPolicy:
                  description: "Locking policy."
                  $ref: '#/definitions/FSLockingPolicyEnum'
                poolFullPolicy:
                  description: "Behavior to follow when pool is full and a write to this filesystem is attempted. Values are:
  <ul>
  <li>Delete_All_Snaps - All snaps to the File System will be marked for deletion to free up space.</li>
  <li>Fail_Writes      - Writes to the File System will fail.</li>
  </ul>"
                  $ref: '#/definitions/ResourcePoolFullPolicyEnum'
                fileEventSettings:
                  description: "Indicates whether File Event Service is enabled for some protocols on the filesystem."
                  $ref: '#/definitions/fileEventSettings'
            nfsShareParameters:
              description: "NFS share settings for the VMware NFS datastore, as defined by the nfsShareParameters."
              type: object
              properties:
                description:
                  description: "NFS share description."
                  type: string
                isReadOnly:
                  description: "Indicates whether the NFS share is read-only. Values are:
  <ul>
  <li>true - NFS share is read-only.</li>
  <li>false - NFS share is read-write.</li>
  </ul>"
                  type: boolean
                defaultAccess:
                  description: "Default access level for all hosts accessing the NFS share."
                  $ref: '#/definitions/NFSShareDefaultAccessEnum'
                minSecurity:
                  description: "Minimal security level that must be provided by a client to mount the NFS share."
                  $ref: '#/definitions/NFSShareSecurityEnum'
                nfsOwnerUsername:
                  description: "(Applies to NFS shares of VMware NFS storage resources.)
 Default owner of the NFS share associated with the datastore. Required if secure NFS enabled. Attribute minSecurity should be set to Kerberos value. 
 For NFSv3 or NFSv4 without Kerberos, the default owner is root."
                  type: string
                noAccessHosts:
                  description: "Hosts with no access to the NFS share or its snapshots, as defined by the host
  resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                readOnlyHosts:
                  description: "Hosts with read-only access to the NFS share and its snapshots, as defined by
  the host resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                readWriteHosts:
                  description: "Hosts with read-write access to the NFS share and its snapshots, as defined by
  the host resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                readOnlyRootAccessHosts:
                  description: "Hosts with read-only root access to the NFS share and its
  snapshots, as defined by the host resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                rootAccessHosts:
                  description: "Hosts with read-write root access to the NFS share and its
  snapshots, as defined by the host resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                noAccessHostsString:
                  description: "Hosts with no access to the NFS share or its snapshots,
  defined as comma-separated list of hostnames, subnets, IPs,
  domains or netgroups."
                  type: string
                readOnlyHostsString:
                  description: "Hosts with read-only access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                  type: string
                readWriteHostsString:
                  description: "Hosts with read-write access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                  type: string
                readOnlyRootHostsString:
                  description: "Hosts with read-only root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                  type: string
                readWriteRootHostsString:
                  description: "Hosts with read-write root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                  type: string
                anonymousUID:
                  description: "Specifies the user ID of the anonymous account."
                  type: integer
                anonymousGID:
                  description: "Specifies the group ID of the anonymous account."
                  type: integer
                exportOption:
                  description: "Specifies the bitmask of various options of the NFS share.
  Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS
  share per host is defined according the hostsString lists.
  Otherwise, the access is defined according the hostID lists.
  </li>
  <li> 0x0002 - noSUID - if set, do not allow access to set
  SUID. Otherwise, allow access.
  </li>
  </ul>"
                  type: integer
            vmwareNfsParameters:
              $ref: '#/definitions/vmwareNfsParameters'
      tags:
      - storageResource
      description: "Modify a VMware NFS datastore."
      operationId: storageResource_modifyVmwareNfs
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 14. ModifyVmwareNfs storageResource by id
  /api/instances/storageResource/name:{name}/action/modifyVmwareNfs:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            description:
              description: "Description of the VMware NFS datastore."
              type: string
            replicationParameters:
              description: "Replication parameters for the VMware NFS datastore, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the VMware NFS datastore, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            fsParameters:
              description: "File system settings for the VMware datastore, as defined by the filesystemParameters. <br> <br> <b>Note:</b> Do not pass the following filesystemParameters to this operation, because their values cannot be changed: <ul> <li>pool</li> <li>nasServer</li> <li>supportedProtocols</li> <li>isFLREnabledarguments</li>  </ul>"
              type: object
              properties:
                pool:
                  description: "Storage pool to create the file system.
  The pool is required in creation requests and must not be passed in modification requests."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                nasServer:
                  description: "NAS server that provides network connectivity to the share from the hosts.
  The NAS server parameter is required in creation request and must not be passed in modification requests."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the nasServer instance."
                supportedProtocols:
                  description: "(Applies to create operations only.)
  Sharing protocols supported by the file
  system."
                  $ref: '#/definitions/FSSupportedProtocolEnum'
                flrVersion:
                  description: "Indicates which File Level Retention (FLR) version is enabled on the file system.
  Values are:
  <ul>
  <li>0 - FLR is OFF on the file system.</li>
  <li>1 - Enterprise is enabled on the file system.</li>
  <li>2 - Compliance is enabled on the file system.</li>
  </ul>"
                  $ref: '#/definitions/FLRVersionEnum'
                flrMinRetention:
                  description: "The shortest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                flrDefaultRetention:
                  description: "The default retention period is used in an FLR-enabled file system when a file is locked and a retention period is not specified.
  The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                flrMaxRetention:
                  description: "The longest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value should be bigger than 0. The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                isFlrAutoLockEnabled:
                  description: "Users can specify whether to automatically lock files in an FLR-enabled file system, as well as a policy interval for how long to wait after files are modified before the files are automatically locked. When enabled, auto-locked files are set with the default retention period value. This attribute indicates whether automatic lock is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic lock is enabled on the file system.</li>
  <li>false - automatic lock is disabled on the file system.</li>
  </ul>"
                  type: boolean
                isFlrAutoDeleteEnabled:
                  description: "Users can specify whether to automatically delete locked files from an FLR-enabled file system once their retention periods have expired. This value indicates whether automatic delete is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic delete is enabled on the file system.</li>
  <li>false - automatic delete is disabled on the file system.</li>
  </ul>"
                  type: boolean
                flrAutoLockDelay:
                  description: "Indicates how long to wait after files are modified before the files are automatically locked. The default value is 1 hour."
                  type: string
                  format: date-time
                errorThreshold:
                  description: "Percentage of high threshold of occupied space for alert in the file system."
                  type: integer
                warningThreshold:
                  description: "Percentage of medium threshold of occupied space for alert in the file system."
                  type: integer
                infoThreshold:
                  description: "Percentage of low threshold of occupied space for alert in the file system."
                  type: integer
                isThinEnabled:
                  description: "(Applies to create operations only.) 
  Indicates whether to enable thin
  provisioning for file system. Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <b>Note:</b> If you enable thin provisioning for a file system, you cannot
  disable it later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the file system. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced dedup for the file system. Values are:
  <ul>
  <li>true - Enable advanced dedup </li>
  <li>false - Disable advanced dedup(default) </li>
  </ul>"
                  type: boolean
                size:
                  description: "Size of the file system."
                  type: integer
                hostIOSize:
                  description: "Typical write I/O size from the host to the file system."
                  $ref: '#/definitions/HostIOSizeEnum'
                sizeAllocated:
                  description: "Allocated size of the file system."
                  type: integer
                minSizeAllocated:
                  description: "Minimum size allocated of the file system."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the file system, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                isCacheDisabled:
                  description: "Indicates whether caching is disabled. Values are:
  <ul>
  <li>true - Caching is disabled.</li>
  <li>false - Caching is enabled.</li>
  </ul>"
                  type: boolean
                accessPolicy:
                  description: "Access policy."
                  $ref: '#/definitions/AccessPolicyEnum'
                folderRenamePolicy:
                  description: "File system folder rename policies.
  These policy choices control whether directory can be renamed from NFS or SMB clients 
  if at least one file is opened in the directory or in one of its children directory."
                  $ref: '#/definitions/FSRenamePolicyEnum'
                lockingPolicy:
                  description: "Locking policy."
                  $ref: '#/definitions/FSLockingPolicyEnum'
                poolFullPolicy:
                  description: "Behavior to follow when pool is full and a write to this filesystem is attempted. Values are:
  <ul>
  <li>Delete_All_Snaps - All snaps to the File System will be marked for deletion to free up space.</li>
  <li>Fail_Writes      - Writes to the File System will fail.</li>
  </ul>"
                  $ref: '#/definitions/ResourcePoolFullPolicyEnum'
                fileEventSettings:
                  description: "Indicates whether File Event Service is enabled for some protocols on the filesystem."
                  $ref: '#/definitions/fileEventSettings'
            nfsShareParameters:
              description: "NFS share settings for the VMware NFS datastore, as defined by the nfsShareParameters."
              type: object
              properties:
                description:
                  description: "NFS share description."
                  type: string
                isReadOnly:
                  description: "Indicates whether the NFS share is read-only. Values are:
  <ul>
  <li>true - NFS share is read-only.</li>
  <li>false - NFS share is read-write.</li>
  </ul>"
                  type: boolean
                defaultAccess:
                  description: "Default access level for all hosts accessing the NFS share."
                  $ref: '#/definitions/NFSShareDefaultAccessEnum'
                minSecurity:
                  description: "Minimal security level that must be provided by a client to mount the NFS share."
                  $ref: '#/definitions/NFSShareSecurityEnum'
                nfsOwnerUsername:
                  description: "(Applies to NFS shares of VMware NFS storage resources.)
 Default owner of the NFS share associated with the datastore. Required if secure NFS enabled. Attribute minSecurity should be set to Kerberos value. 
 For NFSv3 or NFSv4 without Kerberos, the default owner is root."
                  type: string
                noAccessHosts:
                  description: "Hosts with no access to the NFS share or its snapshots, as defined by the host
  resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                readOnlyHosts:
                  description: "Hosts with read-only access to the NFS share and its snapshots, as defined by
  the host resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                readWriteHosts:
                  description: "Hosts with read-write access to the NFS share and its snapshots, as defined by
  the host resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                readOnlyRootAccessHosts:
                  description: "Hosts with read-only root access to the NFS share and its
  snapshots, as defined by the host resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                rootAccessHosts:
                  description: "Hosts with read-write root access to the NFS share and its
  snapshots, as defined by the host resource type."
                  type: array
                  items:
                    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                noAccessHostsString:
                  description: "Hosts with no access to the NFS share or its snapshots,
  defined as comma-separated list of hostnames, subnets, IPs,
  domains or netgroups."
                  type: string
                readOnlyHostsString:
                  description: "Hosts with read-only access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                  type: string
                readWriteHostsString:
                  description: "Hosts with read-write access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                  type: string
                readOnlyRootHostsString:
                  description: "Hosts with read-only root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                  type: string
                readWriteRootHostsString:
                  description: "Hosts with read-write root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                  type: string
                anonymousUID:
                  description: "Specifies the user ID of the anonymous account."
                  type: integer
                anonymousGID:
                  description: "Specifies the group ID of the anonymous account."
                  type: integer
                exportOption:
                  description: "Specifies the bitmask of various options of the NFS share.
  Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS
  share per host is defined according the hostsString lists.
  Otherwise, the access is defined according the hostID lists.
  </li>
  <li> 0x0002 - noSUID - if set, do not allow access to set
  SUID. Otherwise, allow access.
  </li>
  </ul>"
                  type: integer
            vmwareNfsParameters:
              $ref: '#/definitions/vmwareNfsParameters'
      tags:
      - storageResource
      description: "Modify a VMware NFS datastore."
      operationId: storageResource_modifyVmwareNfs_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 15. ModifyVmwareNfs storageResource by name
  /api/types/storageResource/action/createFilesystem:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name,fsParameters]
          properties:
            name:
              description: "Name of the file system. This name must be unique within the associated NAS server."
              type: string
            description:
              description: "File system description."
              type: string
            replicationParameters:
              description: "Replication settings for the file system, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the file system, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            fsParameters:
              description: "File system settings, as defined by the filesystemParameters. <br> <br> <b>Note:</b>  The following filesystemParameters arguments are required: <ul> <li>pool</li> <li>nasServer</li> <li>size</li> </ul> All other filesystemParameters arguments are optional."
              type: object
              properties:
                pool:
                  description: "Storage pool to create the file system.
  The pool is required in creation requests and must not be passed in modification requests."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                nasServer:
                  description: "NAS server that provides network connectivity to the share from the hosts.
  The NAS server parameter is required in creation request and must not be passed in modification requests."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the nasServer instance."
                supportedProtocols:
                  description: "(Applies to create operations only.)
  Sharing protocols supported by the file
  system."
                  $ref: '#/definitions/FSSupportedProtocolEnum'
                flrVersion:
                  description: "Indicates which File Level Retention (FLR) version is enabled on the file system.
  Values are:
  <ul>
  <li>0 - FLR is OFF on the file system.</li>
  <li>1 - Enterprise is enabled on the file system.</li>
  <li>2 - Compliance is enabled on the file system.</li>
  </ul>"
                  $ref: '#/definitions/FLRVersionEnum'
                flrMinRetention:
                  description: "The shortest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                flrDefaultRetention:
                  description: "The default retention period is used in an FLR-enabled file system when a file is locked and a retention period is not specified.
  The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                flrMaxRetention:
                  description: "The longest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value should be bigger than 0. The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                isFlrAutoLockEnabled:
                  description: "Users can specify whether to automatically lock files in an FLR-enabled file system, as well as a policy interval for how long to wait after files are modified before the files are automatically locked. When enabled, auto-locked files are set with the default retention period value. This attribute indicates whether automatic lock is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic lock is enabled on the file system.</li>
  <li>false - automatic lock is disabled on the file system.</li>
  </ul>"
                  type: boolean
                isFlrAutoDeleteEnabled:
                  description: "Users can specify whether to automatically delete locked files from an FLR-enabled file system once their retention periods have expired. This value indicates whether automatic delete is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic delete is enabled on the file system.</li>
  <li>false - automatic delete is disabled on the file system.</li>
  </ul>"
                  type: boolean
                flrAutoLockDelay:
                  description: "Indicates how long to wait after files are modified before the files are automatically locked. The default value is 1 hour."
                  type: string
                  format: date-time
                errorThreshold:
                  description: "Percentage of high threshold of occupied space for alert in the file system."
                  type: integer
                warningThreshold:
                  description: "Percentage of medium threshold of occupied space for alert in the file system."
                  type: integer
                infoThreshold:
                  description: "Percentage of low threshold of occupied space for alert in the file system."
                  type: integer
                isThinEnabled:
                  description: "(Applies to create operations only.) 
  Indicates whether to enable thin
  provisioning for file system. Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <b>Note:</b> If you enable thin provisioning for a file system, you cannot
  disable it later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the file system. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced dedup for the file system. Values are:
  <ul>
  <li>true - Enable advanced dedup </li>
  <li>false - Disable advanced dedup(default) </li>
  </ul>"
                  type: boolean
                size:
                  description: "Size of the file system."
                  type: integer
                hostIOSize:
                  description: "Typical write I/O size from the host to the file system."
                  $ref: '#/definitions/HostIOSizeEnum'
                sizeAllocated:
                  description: "Allocated size of the file system."
                  type: integer
                minSizeAllocated:
                  description: "Minimum size allocated of the file system."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the file system, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                isCacheDisabled:
                  description: "Indicates whether caching is disabled. Values are:
  <ul>
  <li>true - Caching is disabled.</li>
  <li>false - Caching is enabled.</li>
  </ul>"
                  type: boolean
                accessPolicy:
                  description: "Access policy."
                  $ref: '#/definitions/AccessPolicyEnum'
                folderRenamePolicy:
                  description: "File system folder rename policies.
  These policy choices control whether directory can be renamed from NFS or SMB clients 
  if at least one file is opened in the directory or in one of its children directory."
                  $ref: '#/definitions/FSRenamePolicyEnum'
                lockingPolicy:
                  description: "Locking policy."
                  $ref: '#/definitions/FSLockingPolicyEnum'
                poolFullPolicy:
                  description: "Behavior to follow when pool is full and a write to this filesystem is attempted. Values are:
  <ul>
  <li>Delete_All_Snaps - All snaps to the File System will be marked for deletion to free up space.</li>
  <li>Fail_Writes      - Writes to the File System will fail.</li>
  </ul>"
                  $ref: '#/definitions/ResourcePoolFullPolicyEnum'
                fileEventSettings:
                  description: "Indicates whether File Event Service is enabled for some protocols on the filesystem."
                  $ref: '#/definitions/fileEventSettings'
            cifsFsParameters:
              description: "CIFS file system settings, as defined by the cifsFsParameters."
              $ref: '#/definitions/cifsFilesystemParameters'
            nfsShareCreate:
              description: "Parameters used for creating NFS shares in the file system, as defined by the nfsShareCreate. <br> <br> <b>Note:</b>  The following nfsShareCreate arguments are required for this operation: <ul> <li>path</li> <li>name</li> </ul> All other nfsShareCreate arguments are optional."
              type: array
              items:
                description: "Parameters used for creating an NFS share when creating or modifying a file
  system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  path:
                    description: "Local path to a location within the file system.
  <br/>
  <br/>
  With NFS, each share must have a unique local path. <font color=#0f0f0f>By
  default, the system creates a share to the root of the file system (top-most
  directory) at file system creation time. </font>This path specifies the unique
  location of the file system on the storage system.
  <br/>
  <br/>
  Before you can create additional shares within an NFS shared folder, you must
  create directories within it from a Linux/UNIX host that is connected to the
  file system. After a directory has been created from a mounted host, you can
  create a corresponding share and set access permissions accordingly."
                    type: string
                  name:
                    description: "Unique name of the NFS share."
                    type: string
                  nfsShareParameters:
                    description: "Common NFS share attributes, as defined by the nfsShareParameters resource
  type."
                    type: object
                    properties:
                      description:
                        description: "NFS share description."
                        type: string
                      isReadOnly:
                        description: "Indicates whether the NFS share is read-only. Values are:
  <ul>
  <li>true - NFS share is read-only.</li>
  <li>false - NFS share is read-write.</li>
  </ul>"
                        type: boolean
                      defaultAccess:
                        description: "Default access level for all hosts accessing the NFS share."
                        $ref: '#/definitions/NFSShareDefaultAccessEnum'
                      minSecurity:
                        description: "Minimal security level that must be provided by a client to mount the NFS share."
                        $ref: '#/definitions/NFSShareSecurityEnum'
                      nfsOwnerUsername:
                        description: "(Applies to NFS shares of VMware NFS storage resources.)
 Default owner of the NFS share associated with the datastore. Required if secure NFS enabled. Attribute minSecurity should be set to Kerberos value. 
 For NFSv3 or NFSv4 without Kerberos, the default owner is root."
                        type: string
                      noAccessHosts:
                        description: "Hosts with no access to the NFS share or its snapshots, as defined by the host
  resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readOnlyHosts:
                        description: "Hosts with read-only access to the NFS share and its snapshots, as defined by
  the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readWriteHosts:
                        description: "Hosts with read-write access to the NFS share and its snapshots, as defined by
  the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readOnlyRootAccessHosts:
                        description: "Hosts with read-only root access to the NFS share and its
  snapshots, as defined by the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      rootAccessHosts:
                        description: "Hosts with read-write root access to the NFS share and its
  snapshots, as defined by the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      noAccessHostsString:
                        description: "Hosts with no access to the NFS share or its snapshots,
  defined as comma-separated list of hostnames, subnets, IPs,
  domains or netgroups."
                        type: string
                      readOnlyHostsString:
                        description: "Hosts with read-only access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readWriteHostsString:
                        description: "Hosts with read-write access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readOnlyRootHostsString:
                        description: "Hosts with read-only root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readWriteRootHostsString:
                        description: "Hosts with read-write root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      anonymousUID:
                        description: "Specifies the user ID of the anonymous account."
                        type: integer
                      anonymousGID:
                        description: "Specifies the group ID of the anonymous account."
                        type: integer
                      exportOption:
                        description: "Specifies the bitmask of various options of the NFS share.
  Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS
  share per host is defined according the hostsString lists.
  Otherwise, the access is defined according the hostID lists.
  </li>
  <li> 0x0002 - noSUID - if set, do not allow access to set
  SUID. Otherwise, allow access.
  </li>
  </ul>"
                        type: integer
            cifsShareCreate:
              description: "Parameters used for creating CIFS shares in the file system, as defined by the cifsShareCreate. <br> <br> <b>Note:</b>  The following cifsShareCreate arguments are required for this operation: <ul> <li>path</li> <li>name</li> <li>cifsServer</li> </ul> All other cifsShareCreate arguments are optional."
              type: array
              items:
                description: "(Applies to SMB (also known as CIFS) file shares.)
  Parameters used for creating a CIFS share when creating or modifying a file
  system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  path:
                    description: "Local path to a location within a file system.
  <br/>
  <br/>
  <font color=#0f0f0f>By default, the system creates a share to the root of
  the file system (top-most directory) at file system creation time. </font>This
  path specifies the unique location of the file system on the storage system.
  CIFS shares allow you to create multiple network shares with the same local
  path. You can specify different host-side access controls for different users,
  while setting up network shares within the file system to access common
  content.
  <br/>
  <br/>
  If you want the CIFS network shares within the same file system to access
  different content, you must first create a share to the root of the file
  system. Then, you can connect from a Windows host, create additional
  directories from Windows, and create corresponding network shares using the
  REST API, Unisphere GUI, or Unisphere CLI."
                    type: string
                  name:
                    description: "Name of the CIFS share unique to NAS server."
                    type: string
                  cifsServer:
                    description: "CIFS server to use for CIFS share creation, as defined by the cifsServer
  type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the cifsServer instance."
                  cifsShareParameters:
                    description: "CIFS share settings, as defined by the cifsShareParameters type."
                    type: object
                    properties:
                      description:
                        description: "CIFS share description."
                        type: string
                      isReadOnly:
                        description: "Indicates whether the CIFS share is read-only. Values are:
  <ul>
  <li>true - CIFS share is read-only.</li>
  <li>false - CIFS share is read-write.</li>
  </ul>"
                        type: boolean
                      isEncryptionEnabled:
                        description: "Indicates whether CIFS encryption for Server Message Block (SMB) 3.0 is
  enabled for the CIFS share. Values are:
  <ul>
  <li>true - CIFS encryption for SMB 3.0 is enabled.
  <li>false - CIFS encryption for SMB 3.0 is disabled.
  </ul>"
                        type: boolean
                      isContinuousAvailabilityEnabled:
                        description: "Indicates whether continuous availability for SMB 3.0 is enabled for the CIFS
  share. Values are:
  <ul>
  <li>true - Continuous availability for SMB 3.0 is enabled for the CIFS share.
  <li>false - Continuous availability for SMB 3.0 is disabled for the CIFS
  share.
  </ul>"
                        type: boolean
                      isACEEnabled:
                        description: "Indicates whether the CIFS share access-level permissions are enabled. Values
  are:
  <ul>
  <li>true - CIFS share access-level permissions are enabled.
  <li>false - CIFS share access-level permissions are disabled.
  </ul>"
                        type: boolean
                      addACE:
                        description: "Users, domain users, or group Security Identifiers (SIDs), 
  and associated access-level permissions, to add to the access list, as defined by
  cifsShareACE resource type."
                        type: array
                        items:
                          description: "Access Control Entry (ACE) settings for CIFS shares.
  <br/>
  <br/>
  This resource type is embedded in the storageResource type."
                          $ref: '#/definitions/cifsShareACE'
                      deleteACE:
                        description: "Users, domain users, or group Security Identifiers (SIDs) to remove from the
  access list."
                        type: string
                      isABEEnabled:
                        description: "Enumerate file with read access and directories with list access in folder listings.
  Values are:
  <ul>
  <li> true - Enumerating is enabled. </li>
  <li> false - Enumerating is disabled. </li>
  </ul>"
                        type: boolean
                      isBranchCacheEnabled:
                        description: "Branch Cache optimizes traffic between the NAS server and Branch Office Servers.
  Values are:
  <ul>
  <li> true - Branch Cache is enabled. </li>
  <li> false - Branch Cache is disabled. </li>
  </ul>"
                        type: boolean
                      offlineAvailability:
                        description: "Offline Files store a version of the shared resources on the client computer in the file system cache, a reserved portion of disk space, which the client computer can access even when it is disconnected from the network."
                        $ref: '#/definitions/CifsShareOfflineAvailabilityEnum'
                      umask:
                        description: "The default UNIX umask for new files created on the share."
                        type: string
      tags:
      - storageResource
      description: "Create a file system.
  <br/>
  <br/>
  <b>Note:</b> Before creating a file system, at least one NAS server must exist
  on the storage system."
      operationId: storageResource_createFilesystem
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResource:
                    description: "Storage resource instance that represents the new file system, as defined by the storageResource. <br> <br> <b>Note:</b>  If this method called asynchronously then the file system identified by this output parameter may not yet exist on the system after the call of createFilesystem method."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
      summary: 16. CreateFilesystem storageResource
  /api/instances/storageResource/{id}/action/modifyFilesystem:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            description:
              description: "File system description."
              type: string
            replicationParameters:
              description: "Replication settings for the file system, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot protection schedule settings for the file system, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            fsParameters:
              description: "File system settings for the file system, as defined by the fsParameters. <br> <br> <b>Note:</b>  Do not pass the following filesystemParameters arguments to this operation, because their values cannot be changed: <ul> <li>pool</li> <li>nasServer</li> <li>supportedProtocols</li> <li>isFLREnabled</li> </ul> All other fsParameters arguments are optional."
              type: object
              properties:
                pool:
                  description: "Storage pool to create the file system.
  The pool is required in creation requests and must not be passed in modification requests."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                nasServer:
                  description: "NAS server that provides network connectivity to the share from the hosts.
  The NAS server parameter is required in creation request and must not be passed in modification requests."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the nasServer instance."
                supportedProtocols:
                  description: "(Applies to create operations only.)
  Sharing protocols supported by the file
  system."
                  $ref: '#/definitions/FSSupportedProtocolEnum'
                flrVersion:
                  description: "Indicates which File Level Retention (FLR) version is enabled on the file system.
  Values are:
  <ul>
  <li>0 - FLR is OFF on the file system.</li>
  <li>1 - Enterprise is enabled on the file system.</li>
  <li>2 - Compliance is enabled on the file system.</li>
  </ul>"
                  $ref: '#/definitions/FLRVersionEnum'
                flrMinRetention:
                  description: "The shortest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                flrDefaultRetention:
                  description: "The default retention period is used in an FLR-enabled file system when a file is locked and a retention period is not specified.
  The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                flrMaxRetention:
                  description: "The longest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value should be bigger than 0. The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                isFlrAutoLockEnabled:
                  description: "Users can specify whether to automatically lock files in an FLR-enabled file system, as well as a policy interval for how long to wait after files are modified before the files are automatically locked. When enabled, auto-locked files are set with the default retention period value. This attribute indicates whether automatic lock is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic lock is enabled on the file system.</li>
  <li>false - automatic lock is disabled on the file system.</li>
  </ul>"
                  type: boolean
                isFlrAutoDeleteEnabled:
                  description: "Users can specify whether to automatically delete locked files from an FLR-enabled file system once their retention periods have expired. This value indicates whether automatic delete is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic delete is enabled on the file system.</li>
  <li>false - automatic delete is disabled on the file system.</li>
  </ul>"
                  type: boolean
                flrAutoLockDelay:
                  description: "Indicates how long to wait after files are modified before the files are automatically locked. The default value is 1 hour."
                  type: string
                  format: date-time
                errorThreshold:
                  description: "Percentage of high threshold of occupied space for alert in the file system."
                  type: integer
                warningThreshold:
                  description: "Percentage of medium threshold of occupied space for alert in the file system."
                  type: integer
                infoThreshold:
                  description: "Percentage of low threshold of occupied space for alert in the file system."
                  type: integer
                isThinEnabled:
                  description: "(Applies to create operations only.) 
  Indicates whether to enable thin
  provisioning for file system. Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <b>Note:</b> If you enable thin provisioning for a file system, you cannot
  disable it later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the file system. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced dedup for the file system. Values are:
  <ul>
  <li>true - Enable advanced dedup </li>
  <li>false - Disable advanced dedup(default) </li>
  </ul>"
                  type: boolean
                size:
                  description: "Size of the file system."
                  type: integer
                hostIOSize:
                  description: "Typical write I/O size from the host to the file system."
                  $ref: '#/definitions/HostIOSizeEnum'
                sizeAllocated:
                  description: "Allocated size of the file system."
                  type: integer
                minSizeAllocated:
                  description: "Minimum size allocated of the file system."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the file system, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                isCacheDisabled:
                  description: "Indicates whether caching is disabled. Values are:
  <ul>
  <li>true - Caching is disabled.</li>
  <li>false - Caching is enabled.</li>
  </ul>"
                  type: boolean
                accessPolicy:
                  description: "Access policy."
                  $ref: '#/definitions/AccessPolicyEnum'
                folderRenamePolicy:
                  description: "File system folder rename policies.
  These policy choices control whether directory can be renamed from NFS or SMB clients 
  if at least one file is opened in the directory or in one of its children directory."
                  $ref: '#/definitions/FSRenamePolicyEnum'
                lockingPolicy:
                  description: "Locking policy."
                  $ref: '#/definitions/FSLockingPolicyEnum'
                poolFullPolicy:
                  description: "Behavior to follow when pool is full and a write to this filesystem is attempted. Values are:
  <ul>
  <li>Delete_All_Snaps - All snaps to the File System will be marked for deletion to free up space.</li>
  <li>Fail_Writes      - Writes to the File System will fail.</li>
  </ul>"
                  $ref: '#/definitions/ResourcePoolFullPolicyEnum'
                fileEventSettings:
                  description: "Indicates whether File Event Service is enabled for some protocols on the filesystem."
                  $ref: '#/definitions/fileEventSettings'
            cifsFsParameters:
              description: "CIFS file system settings, as defined by the cifsFilesystemParameters."
              $ref: '#/definitions/cifsFilesystemParameters'
            nfsShareCreate:
              description: "Parameters used for creating NFS shares in the file system, as defined by the nfsShareCreate. <br> <br> <b>Note:</b>  The following nfsShareCreate arguments are required for this operation: <ul> <li>path</li> <li>name</li> </ul> All other nfsShareCreate arguments are optional."
              type: array
              items:
                description: "Parameters used for creating an NFS share when creating or modifying a file
  system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  path:
                    description: "Local path to a location within the file system.
  <br/>
  <br/>
  With NFS, each share must have a unique local path. <font color=#0f0f0f>By
  default, the system creates a share to the root of the file system (top-most
  directory) at file system creation time. </font>This path specifies the unique
  location of the file system on the storage system.
  <br/>
  <br/>
  Before you can create additional shares within an NFS shared folder, you must
  create directories within it from a Linux/UNIX host that is connected to the
  file system. After a directory has been created from a mounted host, you can
  create a corresponding share and set access permissions accordingly."
                    type: string
                  name:
                    description: "Unique name of the NFS share."
                    type: string
                  nfsShareParameters:
                    description: "Common NFS share attributes, as defined by the nfsShareParameters resource
  type."
                    type: object
                    properties:
                      description:
                        description: "NFS share description."
                        type: string
                      isReadOnly:
                        description: "Indicates whether the NFS share is read-only. Values are:
  <ul>
  <li>true - NFS share is read-only.</li>
  <li>false - NFS share is read-write.</li>
  </ul>"
                        type: boolean
                      defaultAccess:
                        description: "Default access level for all hosts accessing the NFS share."
                        $ref: '#/definitions/NFSShareDefaultAccessEnum'
                      minSecurity:
                        description: "Minimal security level that must be provided by a client to mount the NFS share."
                        $ref: '#/definitions/NFSShareSecurityEnum'
                      nfsOwnerUsername:
                        description: "(Applies to NFS shares of VMware NFS storage resources.)
 Default owner of the NFS share associated with the datastore. Required if secure NFS enabled. Attribute minSecurity should be set to Kerberos value. 
 For NFSv3 or NFSv4 without Kerberos, the default owner is root."
                        type: string
                      noAccessHosts:
                        description: "Hosts with no access to the NFS share or its snapshots, as defined by the host
  resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readOnlyHosts:
                        description: "Hosts with read-only access to the NFS share and its snapshots, as defined by
  the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readWriteHosts:
                        description: "Hosts with read-write access to the NFS share and its snapshots, as defined by
  the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readOnlyRootAccessHosts:
                        description: "Hosts with read-only root access to the NFS share and its
  snapshots, as defined by the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      rootAccessHosts:
                        description: "Hosts with read-write root access to the NFS share and its
  snapshots, as defined by the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      noAccessHostsString:
                        description: "Hosts with no access to the NFS share or its snapshots,
  defined as comma-separated list of hostnames, subnets, IPs,
  domains or netgroups."
                        type: string
                      readOnlyHostsString:
                        description: "Hosts with read-only access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readWriteHostsString:
                        description: "Hosts with read-write access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readOnlyRootHostsString:
                        description: "Hosts with read-only root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readWriteRootHostsString:
                        description: "Hosts with read-write root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      anonymousUID:
                        description: "Specifies the user ID of the anonymous account."
                        type: integer
                      anonymousGID:
                        description: "Specifies the group ID of the anonymous account."
                        type: integer
                      exportOption:
                        description: "Specifies the bitmask of various options of the NFS share.
  Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS
  share per host is defined according the hostsString lists.
  Otherwise, the access is defined according the hostID lists.
  </li>
  <li> 0x0002 - noSUID - if set, do not allow access to set
  SUID. Otherwise, allow access.
  </li>
  </ul>"
                        type: integer
            nfsShareModify:
              description: "Parameters used for modifying NFS shares in the file system, as defined by the nfsShareModify. <br> <br> <b>Note:</b>  The nfsShareModify.nfsShare argument is required for this operation. All other nfsShareModify arguments are optional."
              type: array
              items:
                description: "Parameters used for modifying an NFS share when modifying a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  nfsShare:
                    description: "NFS share to modify."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the nfsShare instance."
                  nfsShareParameters:
                    description: "NFS share settings, as defined by the nfsShareParameters resource type."
                    type: object
                    properties:
                      description:
                        description: "NFS share description."
                        type: string
                      isReadOnly:
                        description: "Indicates whether the NFS share is read-only. Values are:
  <ul>
  <li>true - NFS share is read-only.</li>
  <li>false - NFS share is read-write.</li>
  </ul>"
                        type: boolean
                      defaultAccess:
                        description: "Default access level for all hosts accessing the NFS share."
                        $ref: '#/definitions/NFSShareDefaultAccessEnum'
                      minSecurity:
                        description: "Minimal security level that must be provided by a client to mount the NFS share."
                        $ref: '#/definitions/NFSShareSecurityEnum'
                      nfsOwnerUsername:
                        description: "(Applies to NFS shares of VMware NFS storage resources.)
 Default owner of the NFS share associated with the datastore. Required if secure NFS enabled. Attribute minSecurity should be set to Kerberos value. 
 For NFSv3 or NFSv4 without Kerberos, the default owner is root."
                        type: string
                      noAccessHosts:
                        description: "Hosts with no access to the NFS share or its snapshots, as defined by the host
  resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readOnlyHosts:
                        description: "Hosts with read-only access to the NFS share and its snapshots, as defined by
  the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readWriteHosts:
                        description: "Hosts with read-write access to the NFS share and its snapshots, as defined by
  the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readOnlyRootAccessHosts:
                        description: "Hosts with read-only root access to the NFS share and its
  snapshots, as defined by the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      rootAccessHosts:
                        description: "Hosts with read-write root access to the NFS share and its
  snapshots, as defined by the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      noAccessHostsString:
                        description: "Hosts with no access to the NFS share or its snapshots,
  defined as comma-separated list of hostnames, subnets, IPs,
  domains or netgroups."
                        type: string
                      readOnlyHostsString:
                        description: "Hosts with read-only access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readWriteHostsString:
                        description: "Hosts with read-write access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readOnlyRootHostsString:
                        description: "Hosts with read-only root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readWriteRootHostsString:
                        description: "Hosts with read-write root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      anonymousUID:
                        description: "Specifies the user ID of the anonymous account."
                        type: integer
                      anonymousGID:
                        description: "Specifies the group ID of the anonymous account."
                        type: integer
                      exportOption:
                        description: "Specifies the bitmask of various options of the NFS share.
  Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS
  share per host is defined according the hostsString lists.
  Otherwise, the access is defined according the hostID lists.
  </li>
  <li> 0x0002 - noSUID - if set, do not allow access to set
  SUID. Otherwise, allow access.
  </li>
  </ul>"
                        type: integer
            nfsShareDelete:
              description: "Parameters used for deleting an NFS share in the file system, as defined by the nfsShareDelete. <br> <br> <b>Note:</b>  The nfsShareDelete nfsShare argument is required for this operation."
              type: array
              items:
                description: "Parameters used for deleting an NFS share when modifying a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  nfsShare:
                    description: "NFS share to delete."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the nfsShare instance."
            cifsShareCreate:
              description: "Parameters used for creating a CIFS share in the file system, as defined by the cifsShareCreate. <br> <br> <b>Note:</b>  The following cifsShareCreate nfsShare arguments are required for this operation: <ul> <li>path</li> <li>name</li> <li>cifsServer</li> </ul>  All other cifsShareCreate argument values are optional."
              type: array
              items:
                description: "(Applies to SMB (also known as CIFS) file shares.)
  Parameters used for creating a CIFS share when creating or modifying a file
  system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  path:
                    description: "Local path to a location within a file system.
  <br/>
  <br/>
  <font color=#0f0f0f>By default, the system creates a share to the root of
  the file system (top-most directory) at file system creation time. </font>This
  path specifies the unique location of the file system on the storage system.
  CIFS shares allow you to create multiple network shares with the same local
  path. You can specify different host-side access controls for different users,
  while setting up network shares within the file system to access common
  content.
  <br/>
  <br/>
  If you want the CIFS network shares within the same file system to access
  different content, you must first create a share to the root of the file
  system. Then, you can connect from a Windows host, create additional
  directories from Windows, and create corresponding network shares using the
  REST API, Unisphere GUI, or Unisphere CLI."
                    type: string
                  name:
                    description: "Name of the CIFS share unique to NAS server."
                    type: string
                  cifsServer:
                    description: "CIFS server to use for CIFS share creation, as defined by the cifsServer
  type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the cifsServer instance."
                  cifsShareParameters:
                    description: "CIFS share settings, as defined by the cifsShareParameters type."
                    type: object
                    properties:
                      description:
                        description: "CIFS share description."
                        type: string
                      isReadOnly:
                        description: "Indicates whether the CIFS share is read-only. Values are:
  <ul>
  <li>true - CIFS share is read-only.</li>
  <li>false - CIFS share is read-write.</li>
  </ul>"
                        type: boolean
                      isEncryptionEnabled:
                        description: "Indicates whether CIFS encryption for Server Message Block (SMB) 3.0 is
  enabled for the CIFS share. Values are:
  <ul>
  <li>true - CIFS encryption for SMB 3.0 is enabled.
  <li>false - CIFS encryption for SMB 3.0 is disabled.
  </ul>"
                        type: boolean
                      isContinuousAvailabilityEnabled:
                        description: "Indicates whether continuous availability for SMB 3.0 is enabled for the CIFS
  share. Values are:
  <ul>
  <li>true - Continuous availability for SMB 3.0 is enabled for the CIFS share.
  <li>false - Continuous availability for SMB 3.0 is disabled for the CIFS
  share.
  </ul>"
                        type: boolean
                      isACEEnabled:
                        description: "Indicates whether the CIFS share access-level permissions are enabled. Values
  are:
  <ul>
  <li>true - CIFS share access-level permissions are enabled.
  <li>false - CIFS share access-level permissions are disabled.
  </ul>"
                        type: boolean
                      addACE:
                        description: "Users, domain users, or group Security Identifiers (SIDs), 
  and associated access-level permissions, to add to the access list, as defined by
  cifsShareACE resource type."
                        type: array
                        items:
                          description: "Access Control Entry (ACE) settings for CIFS shares.
  <br/>
  <br/>
  This resource type is embedded in the storageResource type."
                          $ref: '#/definitions/cifsShareACE'
                      deleteACE:
                        description: "Users, domain users, or group Security Identifiers (SIDs) to remove from the
  access list."
                        type: string
                      isABEEnabled:
                        description: "Enumerate file with read access and directories with list access in folder listings.
  Values are:
  <ul>
  <li> true - Enumerating is enabled. </li>
  <li> false - Enumerating is disabled. </li>
  </ul>"
                        type: boolean
                      isBranchCacheEnabled:
                        description: "Branch Cache optimizes traffic between the NAS server and Branch Office Servers.
  Values are:
  <ul>
  <li> true - Branch Cache is enabled. </li>
  <li> false - Branch Cache is disabled. </li>
  </ul>"
                        type: boolean
                      offlineAvailability:
                        description: "Offline Files store a version of the shared resources on the client computer in the file system cache, a reserved portion of disk space, which the client computer can access even when it is disconnected from the network."
                        $ref: '#/definitions/CifsShareOfflineAvailabilityEnum'
                      umask:
                        description: "The default UNIX umask for new files created on the share."
                        type: string
            cifsShareModify:
              description: "Parameters used for modifying CIFS shares in the file system, as defined by the cifsShareModify. <br> <br> <b>Note: </b>  The cifsShareModify.cifsShare argument is required for this operation. All other cifsShareModify arguments are optional."
              type: array
              items:
                description: "Parameters used for modifying a CIFS share when modifying a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  cifsShare:
                    description: "CIFS share to modify, as defined by the cifsShare type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the cifsShare instance."
                  cifsShareParameters:
                    description: "CIFS share settings, as defined by the cifsShareParameters type."
                    type: object
                    properties:
                      description:
                        description: "CIFS share description."
                        type: string
                      isReadOnly:
                        description: "Indicates whether the CIFS share is read-only. Values are:
  <ul>
  <li>true - CIFS share is read-only.</li>
  <li>false - CIFS share is read-write.</li>
  </ul>"
                        type: boolean
                      isEncryptionEnabled:
                        description: "Indicates whether CIFS encryption for Server Message Block (SMB) 3.0 is
  enabled for the CIFS share. Values are:
  <ul>
  <li>true - CIFS encryption for SMB 3.0 is enabled.
  <li>false - CIFS encryption for SMB 3.0 is disabled.
  </ul>"
                        type: boolean
                      isContinuousAvailabilityEnabled:
                        description: "Indicates whether continuous availability for SMB 3.0 is enabled for the CIFS
  share. Values are:
  <ul>
  <li>true - Continuous availability for SMB 3.0 is enabled for the CIFS share.
  <li>false - Continuous availability for SMB 3.0 is disabled for the CIFS
  share.
  </ul>"
                        type: boolean
                      isACEEnabled:
                        description: "Indicates whether the CIFS share access-level permissions are enabled. Values
  are:
  <ul>
  <li>true - CIFS share access-level permissions are enabled.
  <li>false - CIFS share access-level permissions are disabled.
  </ul>"
                        type: boolean
                      addACE:
                        description: "Users, domain users, or group Security Identifiers (SIDs), 
  and associated access-level permissions, to add to the access list, as defined by
  cifsShareACE resource type."
                        type: array
                        items:
                          description: "Access Control Entry (ACE) settings for CIFS shares.
  <br/>
  <br/>
  This resource type is embedded in the storageResource type."
                          $ref: '#/definitions/cifsShareACE'
                      deleteACE:
                        description: "Users, domain users, or group Security Identifiers (SIDs) to remove from the
  access list."
                        type: string
                      isABEEnabled:
                        description: "Enumerate file with read access and directories with list access in folder listings.
  Values are:
  <ul>
  <li> true - Enumerating is enabled. </li>
  <li> false - Enumerating is disabled. </li>
  </ul>"
                        type: boolean
                      isBranchCacheEnabled:
                        description: "Branch Cache optimizes traffic between the NAS server and Branch Office Servers.
  Values are:
  <ul>
  <li> true - Branch Cache is enabled. </li>
  <li> false - Branch Cache is disabled. </li>
  </ul>"
                        type: boolean
                      offlineAvailability:
                        description: "Offline Files store a version of the shared resources on the client computer in the file system cache, a reserved portion of disk space, which the client computer can access even when it is disconnected from the network."
                        $ref: '#/definitions/CifsShareOfflineAvailabilityEnum'
                      umask:
                        description: "The default UNIX umask for new files created on the share."
                        type: string
            cifsShareDelete:
              description: "Parameters used for deleting CIFS shares in the file system, as defined by the cifsShareDelete. <br> <br> <b>Note:</b>  The cifsShareDelete.cifsShare argument is required for this operation."
              type: array
              items:
                description: "Parameters used for deleting a CIFS share when modifying a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  cifsShare:
                    description: "CIFS share to delete, as defined by the cifsShare type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the cifsShare instance."
      tags:
      - storageResource
      description: "Modify a file system."
      operationId: storageResource_modifyFilesystem
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 17. ModifyFilesystem storageResource by id
  /api/instances/storageResource/name:{name}/action/modifyFilesystem:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            description:
              description: "File system description."
              type: string
            replicationParameters:
              description: "Replication settings for the file system, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot protection schedule settings for the file system, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            fsParameters:
              description: "File system settings for the file system, as defined by the fsParameters. <br> <br> <b>Note:</b>  Do not pass the following filesystemParameters arguments to this operation, because their values cannot be changed: <ul> <li>pool</li> <li>nasServer</li> <li>supportedProtocols</li> <li>isFLREnabled</li> </ul> All other fsParameters arguments are optional."
              type: object
              properties:
                pool:
                  description: "Storage pool to create the file system.
  The pool is required in creation requests and must not be passed in modification requests."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                nasServer:
                  description: "NAS server that provides network connectivity to the share from the hosts.
  The NAS server parameter is required in creation request and must not be passed in modification requests."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the nasServer instance."
                supportedProtocols:
                  description: "(Applies to create operations only.)
  Sharing protocols supported by the file
  system."
                  $ref: '#/definitions/FSSupportedProtocolEnum'
                flrVersion:
                  description: "Indicates which File Level Retention (FLR) version is enabled on the file system.
  Values are:
  <ul>
  <li>0 - FLR is OFF on the file system.</li>
  <li>1 - Enterprise is enabled on the file system.</li>
  <li>2 - Compliance is enabled on the file system.</li>
  </ul>"
                  $ref: '#/definitions/FLRVersionEnum'
                flrMinRetention:
                  description: "The shortest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                flrDefaultRetention:
                  description: "The default retention period is used in an FLR-enabled file system when a file is locked and a retention period is not specified.
  The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                flrMaxRetention:
                  description: "The longest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value should be bigger than 0. The value plus the current date should be before date 2106-Feb-07."
                  type: string
                  format: date-time
                isFlrAutoLockEnabled:
                  description: "Users can specify whether to automatically lock files in an FLR-enabled file system, as well as a policy interval for how long to wait after files are modified before the files are automatically locked. When enabled, auto-locked files are set with the default retention period value. This attribute indicates whether automatic lock is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic lock is enabled on the file system.</li>
  <li>false - automatic lock is disabled on the file system.</li>
  </ul>"
                  type: boolean
                isFlrAutoDeleteEnabled:
                  description: "Users can specify whether to automatically delete locked files from an FLR-enabled file system once their retention periods have expired. This value indicates whether automatic delete is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic delete is enabled on the file system.</li>
  <li>false - automatic delete is disabled on the file system.</li>
  </ul>"
                  type: boolean
                flrAutoLockDelay:
                  description: "Indicates how long to wait after files are modified before the files are automatically locked. The default value is 1 hour."
                  type: string
                  format: date-time
                errorThreshold:
                  description: "Percentage of high threshold of occupied space for alert in the file system."
                  type: integer
                warningThreshold:
                  description: "Percentage of medium threshold of occupied space for alert in the file system."
                  type: integer
                infoThreshold:
                  description: "Percentage of low threshold of occupied space for alert in the file system."
                  type: integer
                isThinEnabled:
                  description: "(Applies to create operations only.) 
  Indicates whether to enable thin
  provisioning for file system. Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <b>Note:</b> If you enable thin provisioning for a file system, you cannot
  disable it later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the file system. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced dedup for the file system. Values are:
  <ul>
  <li>true - Enable advanced dedup </li>
  <li>false - Disable advanced dedup(default) </li>
  </ul>"
                  type: boolean
                size:
                  description: "Size of the file system."
                  type: integer
                hostIOSize:
                  description: "Typical write I/O size from the host to the file system."
                  $ref: '#/definitions/HostIOSizeEnum'
                sizeAllocated:
                  description: "Allocated size of the file system."
                  type: integer
                minSizeAllocated:
                  description: "Minimum size allocated of the file system."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the file system, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                isCacheDisabled:
                  description: "Indicates whether caching is disabled. Values are:
  <ul>
  <li>true - Caching is disabled.</li>
  <li>false - Caching is enabled.</li>
  </ul>"
                  type: boolean
                accessPolicy:
                  description: "Access policy."
                  $ref: '#/definitions/AccessPolicyEnum'
                folderRenamePolicy:
                  description: "File system folder rename policies.
  These policy choices control whether directory can be renamed from NFS or SMB clients 
  if at least one file is opened in the directory or in one of its children directory."
                  $ref: '#/definitions/FSRenamePolicyEnum'
                lockingPolicy:
                  description: "Locking policy."
                  $ref: '#/definitions/FSLockingPolicyEnum'
                poolFullPolicy:
                  description: "Behavior to follow when pool is full and a write to this filesystem is attempted. Values are:
  <ul>
  <li>Delete_All_Snaps - All snaps to the File System will be marked for deletion to free up space.</li>
  <li>Fail_Writes      - Writes to the File System will fail.</li>
  </ul>"
                  $ref: '#/definitions/ResourcePoolFullPolicyEnum'
                fileEventSettings:
                  description: "Indicates whether File Event Service is enabled for some protocols on the filesystem."
                  $ref: '#/definitions/fileEventSettings'
            cifsFsParameters:
              description: "CIFS file system settings, as defined by the cifsFilesystemParameters."
              $ref: '#/definitions/cifsFilesystemParameters'
            nfsShareCreate:
              description: "Parameters used for creating NFS shares in the file system, as defined by the nfsShareCreate. <br> <br> <b>Note:</b>  The following nfsShareCreate arguments are required for this operation: <ul> <li>path</li> <li>name</li> </ul> All other nfsShareCreate arguments are optional."
              type: array
              items:
                description: "Parameters used for creating an NFS share when creating or modifying a file
  system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  path:
                    description: "Local path to a location within the file system.
  <br/>
  <br/>
  With NFS, each share must have a unique local path. <font color=#0f0f0f>By
  default, the system creates a share to the root of the file system (top-most
  directory) at file system creation time. </font>This path specifies the unique
  location of the file system on the storage system.
  <br/>
  <br/>
  Before you can create additional shares within an NFS shared folder, you must
  create directories within it from a Linux/UNIX host that is connected to the
  file system. After a directory has been created from a mounted host, you can
  create a corresponding share and set access permissions accordingly."
                    type: string
                  name:
                    description: "Unique name of the NFS share."
                    type: string
                  nfsShareParameters:
                    description: "Common NFS share attributes, as defined by the nfsShareParameters resource
  type."
                    type: object
                    properties:
                      description:
                        description: "NFS share description."
                        type: string
                      isReadOnly:
                        description: "Indicates whether the NFS share is read-only. Values are:
  <ul>
  <li>true - NFS share is read-only.</li>
  <li>false - NFS share is read-write.</li>
  </ul>"
                        type: boolean
                      defaultAccess:
                        description: "Default access level for all hosts accessing the NFS share."
                        $ref: '#/definitions/NFSShareDefaultAccessEnum'
                      minSecurity:
                        description: "Minimal security level that must be provided by a client to mount the NFS share."
                        $ref: '#/definitions/NFSShareSecurityEnum'
                      nfsOwnerUsername:
                        description: "(Applies to NFS shares of VMware NFS storage resources.)
 Default owner of the NFS share associated with the datastore. Required if secure NFS enabled. Attribute minSecurity should be set to Kerberos value. 
 For NFSv3 or NFSv4 without Kerberos, the default owner is root."
                        type: string
                      noAccessHosts:
                        description: "Hosts with no access to the NFS share or its snapshots, as defined by the host
  resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readOnlyHosts:
                        description: "Hosts with read-only access to the NFS share and its snapshots, as defined by
  the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readWriteHosts:
                        description: "Hosts with read-write access to the NFS share and its snapshots, as defined by
  the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readOnlyRootAccessHosts:
                        description: "Hosts with read-only root access to the NFS share and its
  snapshots, as defined by the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      rootAccessHosts:
                        description: "Hosts with read-write root access to the NFS share and its
  snapshots, as defined by the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      noAccessHostsString:
                        description: "Hosts with no access to the NFS share or its snapshots,
  defined as comma-separated list of hostnames, subnets, IPs,
  domains or netgroups."
                        type: string
                      readOnlyHostsString:
                        description: "Hosts with read-only access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readWriteHostsString:
                        description: "Hosts with read-write access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readOnlyRootHostsString:
                        description: "Hosts with read-only root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readWriteRootHostsString:
                        description: "Hosts with read-write root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      anonymousUID:
                        description: "Specifies the user ID of the anonymous account."
                        type: integer
                      anonymousGID:
                        description: "Specifies the group ID of the anonymous account."
                        type: integer
                      exportOption:
                        description: "Specifies the bitmask of various options of the NFS share.
  Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS
  share per host is defined according the hostsString lists.
  Otherwise, the access is defined according the hostID lists.
  </li>
  <li> 0x0002 - noSUID - if set, do not allow access to set
  SUID. Otherwise, allow access.
  </li>
  </ul>"
                        type: integer
            nfsShareModify:
              description: "Parameters used for modifying NFS shares in the file system, as defined by the nfsShareModify. <br> <br> <b>Note:</b>  The nfsShareModify.nfsShare argument is required for this operation. All other nfsShareModify arguments are optional."
              type: array
              items:
                description: "Parameters used for modifying an NFS share when modifying a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  nfsShare:
                    description: "NFS share to modify."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the nfsShare instance."
                  nfsShareParameters:
                    description: "NFS share settings, as defined by the nfsShareParameters resource type."
                    type: object
                    properties:
                      description:
                        description: "NFS share description."
                        type: string
                      isReadOnly:
                        description: "Indicates whether the NFS share is read-only. Values are:
  <ul>
  <li>true - NFS share is read-only.</li>
  <li>false - NFS share is read-write.</li>
  </ul>"
                        type: boolean
                      defaultAccess:
                        description: "Default access level for all hosts accessing the NFS share."
                        $ref: '#/definitions/NFSShareDefaultAccessEnum'
                      minSecurity:
                        description: "Minimal security level that must be provided by a client to mount the NFS share."
                        $ref: '#/definitions/NFSShareSecurityEnum'
                      nfsOwnerUsername:
                        description: "(Applies to NFS shares of VMware NFS storage resources.)
 Default owner of the NFS share associated with the datastore. Required if secure NFS enabled. Attribute minSecurity should be set to Kerberos value. 
 For NFSv3 or NFSv4 without Kerberos, the default owner is root."
                        type: string
                      noAccessHosts:
                        description: "Hosts with no access to the NFS share or its snapshots, as defined by the host
  resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readOnlyHosts:
                        description: "Hosts with read-only access to the NFS share and its snapshots, as defined by
  the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readWriteHosts:
                        description: "Hosts with read-write access to the NFS share and its snapshots, as defined by
  the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      readOnlyRootAccessHosts:
                        description: "Hosts with read-only root access to the NFS share and its
  snapshots, as defined by the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      rootAccessHosts:
                        description: "Hosts with read-write root access to the NFS share and its
  snapshots, as defined by the host resource type."
                        type: array
                        items:
                          description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                          type: object
                          properties:
                            id:
                              type: string
                              description: "Unique identifier of the host instance."
                      noAccessHostsString:
                        description: "Hosts with no access to the NFS share or its snapshots,
  defined as comma-separated list of hostnames, subnets, IPs,
  domains or netgroups."
                        type: string
                      readOnlyHostsString:
                        description: "Hosts with read-only access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readWriteHostsString:
                        description: "Hosts with read-write access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readOnlyRootHostsString:
                        description: "Hosts with read-only root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      readWriteRootHostsString:
                        description: "Hosts with read-write root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
                        type: string
                      anonymousUID:
                        description: "Specifies the user ID of the anonymous account."
                        type: integer
                      anonymousGID:
                        description: "Specifies the group ID of the anonymous account."
                        type: integer
                      exportOption:
                        description: "Specifies the bitmask of various options of the NFS share.
  Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS
  share per host is defined according the hostsString lists.
  Otherwise, the access is defined according the hostID lists.
  </li>
  <li> 0x0002 - noSUID - if set, do not allow access to set
  SUID. Otherwise, allow access.
  </li>
  </ul>"
                        type: integer
            nfsShareDelete:
              description: "Parameters used for deleting an NFS share in the file system, as defined by the nfsShareDelete. <br> <br> <b>Note:</b>  The nfsShareDelete nfsShare argument is required for this operation."
              type: array
              items:
                description: "Parameters used for deleting an NFS share when modifying a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  nfsShare:
                    description: "NFS share to delete."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the nfsShare instance."
            cifsShareCreate:
              description: "Parameters used for creating a CIFS share in the file system, as defined by the cifsShareCreate. <br> <br> <b>Note:</b>  The following cifsShareCreate nfsShare arguments are required for this operation: <ul> <li>path</li> <li>name</li> <li>cifsServer</li> </ul>  All other cifsShareCreate argument values are optional."
              type: array
              items:
                description: "(Applies to SMB (also known as CIFS) file shares.)
  Parameters used for creating a CIFS share when creating or modifying a file
  system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  path:
                    description: "Local path to a location within a file system.
  <br/>
  <br/>
  <font color=#0f0f0f>By default, the system creates a share to the root of
  the file system (top-most directory) at file system creation time. </font>This
  path specifies the unique location of the file system on the storage system.
  CIFS shares allow you to create multiple network shares with the same local
  path. You can specify different host-side access controls for different users,
  while setting up network shares within the file system to access common
  content.
  <br/>
  <br/>
  If you want the CIFS network shares within the same file system to access
  different content, you must first create a share to the root of the file
  system. Then, you can connect from a Windows host, create additional
  directories from Windows, and create corresponding network shares using the
  REST API, Unisphere GUI, or Unisphere CLI."
                    type: string
                  name:
                    description: "Name of the CIFS share unique to NAS server."
                    type: string
                  cifsServer:
                    description: "CIFS server to use for CIFS share creation, as defined by the cifsServer
  type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the cifsServer instance."
                  cifsShareParameters:
                    description: "CIFS share settings, as defined by the cifsShareParameters type."
                    type: object
                    properties:
                      description:
                        description: "CIFS share description."
                        type: string
                      isReadOnly:
                        description: "Indicates whether the CIFS share is read-only. Values are:
  <ul>
  <li>true - CIFS share is read-only.</li>
  <li>false - CIFS share is read-write.</li>
  </ul>"
                        type: boolean
                      isEncryptionEnabled:
                        description: "Indicates whether CIFS encryption for Server Message Block (SMB) 3.0 is
  enabled for the CIFS share. Values are:
  <ul>
  <li>true - CIFS encryption for SMB 3.0 is enabled.
  <li>false - CIFS encryption for SMB 3.0 is disabled.
  </ul>"
                        type: boolean
                      isContinuousAvailabilityEnabled:
                        description: "Indicates whether continuous availability for SMB 3.0 is enabled for the CIFS
  share. Values are:
  <ul>
  <li>true - Continuous availability for SMB 3.0 is enabled for the CIFS share.
  <li>false - Continuous availability for SMB 3.0 is disabled for the CIFS
  share.
  </ul>"
                        type: boolean
                      isACEEnabled:
                        description: "Indicates whether the CIFS share access-level permissions are enabled. Values
  are:
  <ul>
  <li>true - CIFS share access-level permissions are enabled.
  <li>false - CIFS share access-level permissions are disabled.
  </ul>"
                        type: boolean
                      addACE:
                        description: "Users, domain users, or group Security Identifiers (SIDs), 
  and associated access-level permissions, to add to the access list, as defined by
  cifsShareACE resource type."
                        type: array
                        items:
                          description: "Access Control Entry (ACE) settings for CIFS shares.
  <br/>
  <br/>
  This resource type is embedded in the storageResource type."
                          $ref: '#/definitions/cifsShareACE'
                      deleteACE:
                        description: "Users, domain users, or group Security Identifiers (SIDs) to remove from the
  access list."
                        type: string
                      isABEEnabled:
                        description: "Enumerate file with read access and directories with list access in folder listings.
  Values are:
  <ul>
  <li> true - Enumerating is enabled. </li>
  <li> false - Enumerating is disabled. </li>
  </ul>"
                        type: boolean
                      isBranchCacheEnabled:
                        description: "Branch Cache optimizes traffic between the NAS server and Branch Office Servers.
  Values are:
  <ul>
  <li> true - Branch Cache is enabled. </li>
  <li> false - Branch Cache is disabled. </li>
  </ul>"
                        type: boolean
                      offlineAvailability:
                        description: "Offline Files store a version of the shared resources on the client computer in the file system cache, a reserved portion of disk space, which the client computer can access even when it is disconnected from the network."
                        $ref: '#/definitions/CifsShareOfflineAvailabilityEnum'
                      umask:
                        description: "The default UNIX umask for new files created on the share."
                        type: string
            cifsShareModify:
              description: "Parameters used for modifying CIFS shares in the file system, as defined by the cifsShareModify. <br> <br> <b>Note: </b>  The cifsShareModify.cifsShare argument is required for this operation. All other cifsShareModify arguments are optional."
              type: array
              items:
                description: "Parameters used for modifying a CIFS share when modifying a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  cifsShare:
                    description: "CIFS share to modify, as defined by the cifsShare type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the cifsShare instance."
                  cifsShareParameters:
                    description: "CIFS share settings, as defined by the cifsShareParameters type."
                    type: object
                    properties:
                      description:
                        description: "CIFS share description."
                        type: string
                      isReadOnly:
                        description: "Indicates whether the CIFS share is read-only. Values are:
  <ul>
  <li>true - CIFS share is read-only.</li>
  <li>false - CIFS share is read-write.</li>
  </ul>"
                        type: boolean
                      isEncryptionEnabled:
                        description: "Indicates whether CIFS encryption for Server Message Block (SMB) 3.0 is
  enabled for the CIFS share. Values are:
  <ul>
  <li>true - CIFS encryption for SMB 3.0 is enabled.
  <li>false - CIFS encryption for SMB 3.0 is disabled.
  </ul>"
                        type: boolean
                      isContinuousAvailabilityEnabled:
                        description: "Indicates whether continuous availability for SMB 3.0 is enabled for the CIFS
  share. Values are:
  <ul>
  <li>true - Continuous availability for SMB 3.0 is enabled for the CIFS share.
  <li>false - Continuous availability for SMB 3.0 is disabled for the CIFS
  share.
  </ul>"
                        type: boolean
                      isACEEnabled:
                        description: "Indicates whether the CIFS share access-level permissions are enabled. Values
  are:
  <ul>
  <li>true - CIFS share access-level permissions are enabled.
  <li>false - CIFS share access-level permissions are disabled.
  </ul>"
                        type: boolean
                      addACE:
                        description: "Users, domain users, or group Security Identifiers (SIDs), 
  and associated access-level permissions, to add to the access list, as defined by
  cifsShareACE resource type."
                        type: array
                        items:
                          description: "Access Control Entry (ACE) settings for CIFS shares.
  <br/>
  <br/>
  This resource type is embedded in the storageResource type."
                          $ref: '#/definitions/cifsShareACE'
                      deleteACE:
                        description: "Users, domain users, or group Security Identifiers (SIDs) to remove from the
  access list."
                        type: string
                      isABEEnabled:
                        description: "Enumerate file with read access and directories with list access in folder listings.
  Values are:
  <ul>
  <li> true - Enumerating is enabled. </li>
  <li> false - Enumerating is disabled. </li>
  </ul>"
                        type: boolean
                      isBranchCacheEnabled:
                        description: "Branch Cache optimizes traffic between the NAS server and Branch Office Servers.
  Values are:
  <ul>
  <li> true - Branch Cache is enabled. </li>
  <li> false - Branch Cache is disabled. </li>
  </ul>"
                        type: boolean
                      offlineAvailability:
                        description: "Offline Files store a version of the shared resources on the client computer in the file system cache, a reserved portion of disk space, which the client computer can access even when it is disconnected from the network."
                        $ref: '#/definitions/CifsShareOfflineAvailabilityEnum'
                      umask:
                        description: "The default UNIX umask for new files created on the share."
                        type: string
            cifsShareDelete:
              description: "Parameters used for deleting CIFS shares in the file system, as defined by the cifsShareDelete. <br> <br> <b>Note:</b>  The cifsShareDelete.cifsShare argument is required for this operation."
              type: array
              items:
                description: "Parameters used for deleting a CIFS share when modifying a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  cifsShare:
                    description: "CIFS share to delete, as defined by the cifsShare type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the cifsShare instance."
      tags:
      - storageResource
      description: "Modify a file system."
      operationId: storageResource_modifyFilesystem_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 18. ModifyFilesystem storageResource by name
  /api/types/storageResource/action/createVVolDatastore:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name,vvolDatastoreType]
          properties:
            name:
              description: "Unique name of the VVol datastore."
              type: string
            vvolDatastoreType:
              description: "VVol datastore type."
              $ref: '#/definitions/VVolDatastoreTypeEnum'
            description:
              description: "Description of the VVol datastore."
              type: string
            hosts:
              description: "The list of hosts that allowed to access the VVol datastore."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            vvolDatastoreCapabilityProfilesParameters:
              description: "VVol datastore capability profiles parameters, as defined by the vvolDatastoreCapabilityProfilesParameters."
              type: object
              properties:
                addCapabilityProfile:
                  description: "CapabilityProfiles to add to the VVol datastore, as defined by the VVol Datastore resource type."
                  type: array
                  items:
                    description: "Parameters used for creation/modification of a VVol Datastore.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                    type: object
                    properties:
                      capProfile:
                        description: "CapabilityProfile to add to the VVol Datastore, as defined by the VVol Datastore resource type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the capability profile."
                      sizeTotal:
                        description: "Pool allocation size of required CapabilityProfile in required VVol container."
                        type: integer
                modifyCapabilityProfile:
                  description: "CapabilityProfiles, used by the VVol Datastore, support of that should be modified."
                  type: array
                  items:
                    description: "Parameters used for creation/modification of a VVol Datastore.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                    type: object
                    properties:
                      capProfile:
                        description: "CapabilityProfile to add to the VVol Datastore, as defined by the VVol Datastore resource type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the capability profile."
                      sizeTotal:
                        description: "Pool allocation size of required CapabilityProfile in required VVol container."
                        type: integer
                removeCapabilityProfile:
                  description: "CapabilityProfiles to remove from the VVol datastore, as defined by the VVol Datastore resource type."
                  type: array
                  items:
                    description: "An object representing VASA 2.0 SPBM capability profile.
 Capability profiles can be queried, created, modified and deleted via the REST API.
 Capability profiles can then be queried via VASA 2.0 API by vSphere environment and leveraged for policy based provisioning of virtual volumes."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the capability profile."
      tags:
      - storageResource
      description: "Create a VVol datastore."
      operationId: storageResource_createVVolDatastore
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResource:
                    description: "Storage resource instance that represents the new VVol datastore, as defined by the storageResource. <br> <br> <b>Note:</b>  If this method is called asynchronously then the VVol datastore identified by this output parameter may not yet exist on the system after the call of createVVolDatastore() method."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
      summary: 19. CreateVVolDatastore storageResource
  /api/instances/storageResource/{id}/action/modifyVVolDatastore:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Unique name of the VVol datastore."
              type: string
            description:
              description: "Description of the VVol datastore."
              type: string
            hosts:
              description: "The list of hosts that allowed to access the VVol datastore."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            force:
              description: "Specifies whether Virtual Volumes shall be unbound in this case, if host access is removed for some hosts that have associated protocol endpoints with bound virtual volumes."
              type: boolean
            vvolDatastoreCapabilityProfilesParameters:
              description: "VVol datastore capability profiles parameters, as defined by the vvolDatastoreCapabilityProfilesParameters."
              type: object
              properties:
                addCapabilityProfile:
                  description: "CapabilityProfiles to add to the VVol datastore, as defined by the VVol Datastore resource type."
                  type: array
                  items:
                    description: "Parameters used for creation/modification of a VVol Datastore.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                    type: object
                    properties:
                      capProfile:
                        description: "CapabilityProfile to add to the VVol Datastore, as defined by the VVol Datastore resource type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the capability profile."
                      sizeTotal:
                        description: "Pool allocation size of required CapabilityProfile in required VVol container."
                        type: integer
                modifyCapabilityProfile:
                  description: "CapabilityProfiles, used by the VVol Datastore, support of that should be modified."
                  type: array
                  items:
                    description: "Parameters used for creation/modification of a VVol Datastore.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                    type: object
                    properties:
                      capProfile:
                        description: "CapabilityProfile to add to the VVol Datastore, as defined by the VVol Datastore resource type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the capability profile."
                      sizeTotal:
                        description: "Pool allocation size of required CapabilityProfile in required VVol container."
                        type: integer
                removeCapabilityProfile:
                  description: "CapabilityProfiles to remove from the VVol datastore, as defined by the VVol Datastore resource type."
                  type: array
                  items:
                    description: "An object representing VASA 2.0 SPBM capability profile.
 Capability profiles can be queried, created, modified and deleted via the REST API.
 Capability profiles can then be queried via VASA 2.0 API by vSphere environment and leveraged for policy based provisioning of virtual volumes."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the capability profile."
      tags:
      - storageResource
      description: "Modify a VVol datastore."
      operationId: storageResource_modifyVVolDatastore
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 20. ModifyVVolDatastore storageResource by id
  /api/instances/storageResource/name:{name}/action/modifyVVolDatastore:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "Unique name of the VVol datastore."
              type: string
            description:
              description: "Description of the VVol datastore."
              type: string
            hosts:
              description: "The list of hosts that allowed to access the VVol datastore."
              type: array
              items:
                description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the host instance."
            force:
              description: "Specifies whether Virtual Volumes shall be unbound in this case, if host access is removed for some hosts that have associated protocol endpoints with bound virtual volumes."
              type: boolean
            vvolDatastoreCapabilityProfilesParameters:
              description: "VVol datastore capability profiles parameters, as defined by the vvolDatastoreCapabilityProfilesParameters."
              type: object
              properties:
                addCapabilityProfile:
                  description: "CapabilityProfiles to add to the VVol datastore, as defined by the VVol Datastore resource type."
                  type: array
                  items:
                    description: "Parameters used for creation/modification of a VVol Datastore.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                    type: object
                    properties:
                      capProfile:
                        description: "CapabilityProfile to add to the VVol Datastore, as defined by the VVol Datastore resource type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the capability profile."
                      sizeTotal:
                        description: "Pool allocation size of required CapabilityProfile in required VVol container."
                        type: integer
                modifyCapabilityProfile:
                  description: "CapabilityProfiles, used by the VVol Datastore, support of that should be modified."
                  type: array
                  items:
                    description: "Parameters used for creation/modification of a VVol Datastore.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                    type: object
                    properties:
                      capProfile:
                        description: "CapabilityProfile to add to the VVol Datastore, as defined by the VVol Datastore resource type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the capability profile."
                      sizeTotal:
                        description: "Pool allocation size of required CapabilityProfile in required VVol container."
                        type: integer
                removeCapabilityProfile:
                  description: "CapabilityProfiles to remove from the VVol datastore, as defined by the VVol Datastore resource type."
                  type: array
                  items:
                    description: "An object representing VASA 2.0 SPBM capability profile.
 Capability profiles can be queried, created, modified and deleted via the REST API.
 Capability profiles can then be queried via VASA 2.0 API by vSphere environment and leveraged for policy based provisioning of virtual volumes."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the capability profile."
      tags:
      - storageResource
      description: "Modify a VVol datastore."
      operationId: storageResource_modifyVVolDatastore_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 21. ModifyVVolDatastore storageResource by name
  /api/instances/storageResource/{id}/action/estimateReclaimbleSize:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [targetSize]
          properties:
            targetSize:
              description: "The target size to shrink to."
              type: integer
      tags:
      - storageResource
      description: "Estimate the reclaimable size of storage resource for shrink operation with a target size."
      operationId: storageResource_estimateReclaimbleSize
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  reclaimableSize:
                    description: "The estimated reclaimable size."
                    type: integer
      summary: 22. EstimateReclaimbleSize storageResource by id
  /api/instances/storageResource/name:{name}/action/estimateReclaimbleSize:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [targetSize]
          properties:
            targetSize:
              description: "The target size to shrink to."
              type: integer
      tags:
      - storageResource
      description: "Estimate the reclaimable size of storage resource for shrink operation with a target size."
      operationId: storageResource_estimateReclaimbleSize_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  reclaimableSize:
                    description: "The estimated reclaimable size."
                    type: integer
      summary: 23. EstimateReclaimbleSize storageResource by name
  /api/types/storageResource/action/createBulkStandaloneLuns:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [lunCreate]
          properties:
            fastVPParameters:
              description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.) FAST VP settings of created standalone LUNs, as defined by the fastVPParameters."
              $ref: '#/definitions/fastVPParameters'
            blockHostAccess:
              description: "Host access settings for created standalone LUNs, as defined by the blockHostAccess."
              type: array
              items:
                description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                type: object
                properties:
                  host:
                    description: "Host to grant access to LUN, as defined by host type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  accessMask:
                    description: "Host access mask."
                    $ref: '#/definitions/HostLUNAccessEnum'
                  hlu:
                    description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                    type: integer
            snapScheduleParameters:
              description: "Snapshot schedule settings for created standalone LUNs, as defined by the snapScheduleParameters."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            replicationParameters:
              description: "Replication settings for created standalone LUNs, as defined by the replicationParameters."
              $ref: '#/definitions/replicationParameters'
            lunCreate:
              description: "LUN to create, as defined by the lunCreate. <br> <br> <b>Note:</b>  The following lunCreate arguments are required for this operation: <ul> <li>name</li> <li>lunParameters.pool</li> <li>lunParameters.size </ul> All other lunCreate arguments are optional."
              type: array
              items:
                description: "LUN parameters used for creating a LUN when creating or modifying a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  name:
                    description: "LUN name unque to the storage system."
                    type: string
                  description:
                    description: "LUN description."
                    type: string
                  lunParameters:
                    description: "(Required) Settings for the LUN, as defined by the lunParameters resource
  type."
                    type: object
                    properties:
                      pool:
                        description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the pool instance."
                      isThinEnabled:
                        description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                        type: boolean
                      isDataReductionEnabled:
                        description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                        type: boolean
                      isAdvancedDedupEnabled:
                        description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                        type: boolean
                      size:
                        description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                        type: integer
                      fastVPParameters:
                        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                        $ref: '#/definitions/fastVPParameters'
                      defaultNode:
                        description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                        $ref: '#/definitions/NodeEnum'
                      hostAccess:
                        description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                        type: array
                        items:
                          description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                          type: object
                          properties:
                            host:
                              description: "Host to grant access to LUN, as defined by host type."
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: "Unique identifier of the host instance."
                            accessMask:
                              description: "Host access mask."
                              $ref: '#/definitions/HostLUNAccessEnum'
                            hlu:
                              description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                              type: integer
                      ioLimitParameters:
                        description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                        type: object
                        properties:
                          ioLimitPolicy:
                            description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                            type: object
                            properties:
                              id:
                                type: string
                                description: "Unique identifier of the ioLimitPolicy instance."
                      migrationState:
                        description: "Migration state for Destination PowerStore Orchestration."
                        $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Create a number of standalone LUNs."
      operationId: storageResource_createBulkStandaloneLuns
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResources:
                    description: "Storage resource instances that represents the new standalone LUNs, as defined by the storageResource. <br> <br> <b>Note:</b> If this method is called asynchronously then the LUNs identified by this output parameter may yet not exist on the system after the call of createBulkStandaloneLuns method."
                    type: array
                    items:
                      description: "Information about storage resources in the storage system.
  <br/>
  <br/>
  A storage resource<b><i> </i></b>is a specific type of storage entity
  allocated in the storage system for a particular kind of host or application.
  The storage system provides the following types of storage resources:
  <ul>
  <li>LUNs</li>
  <li>Consistency groups</li>
  <li>File systems accessed via NFS and/or CIFS shares.</li>
  <li>VMware NFS datastores</li>
  <li>VMware VMFS datastores</li>
  <li>VVol (file)</li>
  <li>VVol (block)</li>
  </ul>
  All types of storage resource types can be divided into two major groups:
  <ul>
  <li>Block (or LUN based) storage resources: LUNs, consistency groups, VMware VMFS datastores, VVol (block).</li>
  <li>File system based storage resources: File systems, VMware NFS datastores, VVol (file).</li>
  </ul>
  In order to create a storage resource, there must be at least one pool
  configured on the system. For information about configuring pools, see the help
  topic for the pool. To provision file system based storage resource
  there must be at least one nasServer configured on the system."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the storage resource."
      summary: 24. CreateBulkStandaloneLuns storageResource
  /api/instances/storageResource/{id}/action/createLunThinClone:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [snap,name]
          properties:
            snap:
              description: "The reference to the source snapshot object."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the snap instance."
            name:
              description: "Name for the new Thin Clone, unique to the system."
              type: string
            description:
              description: "Description of the Thin Clone."
              type: string
            replicationParameters:
              description: "Replication settings for the Thin Clone."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the Thin Clone."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            lunParameters:
              description: "LUN settings for the Thin clone. Only hostAccess and ioLimitParameters settings are applicable for Thin Clones."
              type: object
              properties:
                pool:
                  description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                isThinEnabled:
                  description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                  type: boolean
                size:
                  description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                defaultNode:
                  description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                  $ref: '#/definitions/NodeEnum'
                hostAccess:
                  description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                  type: array
                  items:
                    description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                    type: object
                    properties:
                      host:
                        description: "Host to grant access to LUN, as defined by host type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the host instance."
                      accessMask:
                        description: "Host access mask."
                        $ref: '#/definitions/HostLUNAccessEnum'
                      hlu:
                        description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                        type: integer
                ioLimitParameters:
                  description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                  type: object
                  properties:
                    ioLimitPolicy:
                      description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the ioLimitPolicy instance."
                migrationState:
                  description: "Migration state for Destination PowerStore Orchestration."
                  $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Create a Standalone LUN Thin Clone."
      operationId: storageResource_createLunThinClone
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResource:
                    description: "Storage resource instance that represents the new Thin Clone."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
      summary: 25. CreateLunThinClone storageResource by id
  /api/instances/storageResource/name:{name}/action/createLunThinClone:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [snap,name]
          properties:
            snap:
              description: "The reference to the source snapshot object."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the snap instance."
            name:
              description: "Name for the new Thin Clone, unique to the system."
              type: string
            description:
              description: "Description of the Thin Clone."
              type: string
            replicationParameters:
              description: "Replication settings for the Thin Clone."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the Thin Clone."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            lunParameters:
              description: "LUN settings for the Thin clone. Only hostAccess and ioLimitParameters settings are applicable for Thin Clones."
              type: object
              properties:
                pool:
                  description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                isThinEnabled:
                  description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                  type: boolean
                size:
                  description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                defaultNode:
                  description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                  $ref: '#/definitions/NodeEnum'
                hostAccess:
                  description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                  type: array
                  items:
                    description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                    type: object
                    properties:
                      host:
                        description: "Host to grant access to LUN, as defined by host type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the host instance."
                      accessMask:
                        description: "Host access mask."
                        $ref: '#/definitions/HostLUNAccessEnum'
                      hlu:
                        description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                        type: integer
                ioLimitParameters:
                  description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                  type: object
                  properties:
                    ioLimitPolicy:
                      description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the ioLimitPolicy instance."
                migrationState:
                  description: "Migration state for Destination PowerStore Orchestration."
                  $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Create a Standalone LUN Thin Clone."
      operationId: storageResource_createLunThinClone_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResource:
                    description: "Storage resource instance that represents the new Thin Clone."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
      summary: 26. CreateLunThinClone storageResource by name
  /api/instances/storageResource/{id}/action/createVmwareLunThinClone:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [snap,name]
          properties:
            snap:
              description: "The reference to the source snapshot object."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the snap instance."
            name:
              description: "Name for the new Thin Clone, unique to the system."
              type: string
            description:
              description: "Description of the Thin clone."
              type: string
            replicationParameters:
              description: "Replication settings for the Thin Clone."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the Thin Clone."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            lunParameters:
              description: "LUN settings for the Thin Clone. Only hostAccess and ioLimitParameters settings are applicable for Thin Clones."
              type: object
              properties:
                pool:
                  description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                isThinEnabled:
                  description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                  type: boolean
                size:
                  description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                defaultNode:
                  description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                  $ref: '#/definitions/NodeEnum'
                hostAccess:
                  description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                  type: array
                  items:
                    description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                    type: object
                    properties:
                      host:
                        description: "Host to grant access to LUN, as defined by host type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the host instance."
                      accessMask:
                        description: "Host access mask."
                        $ref: '#/definitions/HostLUNAccessEnum'
                      hlu:
                        description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                        type: integer
                ioLimitParameters:
                  description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                  type: object
                  properties:
                    ioLimitPolicy:
                      description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the ioLimitPolicy instance."
                migrationState:
                  description: "Migration state for Destination PowerStore Orchestration."
                  $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Create a VMware VMFS datastore Thin Clone."
      operationId: storageResource_createVmwareLunThinClone
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResource:
                    description: "Storage resource instance that represents the new Thin Clone."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
      summary: 27. CreateVmwareLunThinClone storageResource by id
  /api/instances/storageResource/name:{name}/action/createVmwareLunThinClone:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [snap,name]
          properties:
            snap:
              description: "The reference to the source snapshot object."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the snap instance."
            name:
              description: "Name for the new Thin Clone, unique to the system."
              type: string
            description:
              description: "Description of the Thin clone."
              type: string
            replicationParameters:
              description: "Replication settings for the Thin Clone."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the Thin Clone."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            lunParameters:
              description: "LUN settings for the Thin Clone. Only hostAccess and ioLimitParameters settings are applicable for Thin Clones."
              type: object
              properties:
                pool:
                  description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the pool instance."
                isThinEnabled:
                  description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                  type: boolean
                isDataReductionEnabled:
                  description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                  type: boolean
                isAdvancedDedupEnabled:
                  description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                  type: boolean
                size:
                  description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                  type: integer
                fastVPParameters:
                  description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                  $ref: '#/definitions/fastVPParameters'
                defaultNode:
                  description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                  $ref: '#/definitions/NodeEnum'
                hostAccess:
                  description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                  type: array
                  items:
                    description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                    type: object
                    properties:
                      host:
                        description: "Host to grant access to LUN, as defined by host type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the host instance."
                      accessMask:
                        description: "Host access mask."
                        $ref: '#/definitions/HostLUNAccessEnum'
                      hlu:
                        description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                        type: integer
                ioLimitParameters:
                  description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                  type: object
                  properties:
                    ioLimitPolicy:
                      description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier of the ioLimitPolicy instance."
                migrationState:
                  description: "Migration state for Destination PowerStore Orchestration."
                  $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Create a VMware VMFS datastore Thin Clone."
      operationId: storageResource_createVmwareLunThinClone_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResource:
                    description: "Storage resource instance that represents the new Thin Clone."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
      summary: 28. CreateVmwareLunThinClone storageResource by name
  /api/instances/storageResource/{id}/action/createConsistencyGroupThinClone:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [snap,name]
          properties:
            snap:
              description: "The reference to the source snapshot object."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the snap instance."
            name:
              description: "Name for the new Thin Clone, unique to the system."
              type: string
            description:
              description: "Description of the Thin Clone."
              type: string
            replicationParameters:
              description: "Replication settings for the Thin Clone."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the Thin Clone."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            blockHostAccess:
              description: "Host access settings for the Thin Clone."
              type: array
              items:
                description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                type: object
                properties:
                  host:
                    description: "Host to grant access to LUN, as defined by host type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  accessMask:
                    description: "Host access mask."
                    $ref: '#/definitions/HostLUNAccessEnum'
                  hlu:
                    description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                    type: integer
            lunThinCloneCreate:
              type: array
              items:
                description: "Parameters used for creating a LUN Thin Clone.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  parentLun:
                    description: "Parent LUN of Thin Clone."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
                  name:
                    description: "LUN Thin Clone name unique to the storage system."
                    type: string
                  description:
                    description: "LUN Thin Clone description."
                    type: string
                  lunParameters:
                    description: "(Required) Settings for the LUN Thin Clone, as defined by the
  lunParameters resource type."
                    type: object
                    properties:
                      pool:
                        description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the pool instance."
                      isThinEnabled:
                        description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                        type: boolean
                      isDataReductionEnabled:
                        description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                        type: boolean
                      isAdvancedDedupEnabled:
                        description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                        type: boolean
                      size:
                        description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                        type: integer
                      fastVPParameters:
                        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                        $ref: '#/definitions/fastVPParameters'
                      defaultNode:
                        description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                        $ref: '#/definitions/NodeEnum'
                      hostAccess:
                        description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                        type: array
                        items:
                          description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                          type: object
                          properties:
                            host:
                              description: "Host to grant access to LUN, as defined by host type."
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: "Unique identifier of the host instance."
                            accessMask:
                              description: "Host access mask."
                              $ref: '#/definitions/HostLUNAccessEnum'
                            hlu:
                              description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                              type: integer
                      ioLimitParameters:
                        description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                        type: object
                        properties:
                          ioLimitPolicy:
                            description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                            type: object
                            properties:
                              id:
                                type: string
                                description: "Unique identifier of the ioLimitPolicy instance."
                      migrationState:
                        description: "Migration state for Destination PowerStore Orchestration."
                        $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Create a Consistency Group Thin Clone."
      operationId: storageResource_createConsistencyGroupThinClone
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResource:
                    description: "Storage resource instance that represents the new Thin Clone."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
      summary: 29. CreateConsistencyGroupThinClone storageResource by id
  /api/instances/storageResource/name:{name}/action/createConsistencyGroupThinClone:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [snap,name]
          properties:
            snap:
              description: "The reference to the source snapshot object."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the snap instance."
            name:
              description: "Name for the new Thin Clone, unique to the system."
              type: string
            description:
              description: "Description of the Thin Clone."
              type: string
            replicationParameters:
              description: "Replication settings for the Thin Clone."
              $ref: '#/definitions/replicationParameters'
            snapScheduleParameters:
              description: "Snapshot schedule settings for the Thin Clone."
              type: object
              properties:
                snapSchedule:
                  description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the snapSchedule instance."
                isSnapSchedulePaused:
                  description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
                  type: boolean
            blockHostAccess:
              description: "Host access settings for the Thin Clone."
              type: array
              items:
                description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                type: object
                properties:
                  host:
                    description: "Host to grant access to LUN, as defined by host type."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the host instance."
                  accessMask:
                    description: "Host access mask."
                    $ref: '#/definitions/HostLUNAccessEnum'
                  hlu:
                    description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                    type: integer
            lunThinCloneCreate:
              type: array
              items:
                description: "Parameters used for creating a LUN Thin Clone.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
                type: object
                properties:
                  parentLun:
                    description: "Parent LUN of Thin Clone."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the LUN."
                  name:
                    description: "LUN Thin Clone name unique to the storage system."
                    type: string
                  description:
                    description: "LUN Thin Clone description."
                    type: string
                  lunParameters:
                    description: "(Required) Settings for the LUN Thin Clone, as defined by the
  lunParameters resource type."
                    type: object
                    properties:
                      pool:
                        description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the pool instance."
                      isThinEnabled:
                        description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
                        type: boolean
                      isDataReductionEnabled:
                        description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
                        type: boolean
                      isAdvancedDedupEnabled:
                        description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
                        type: boolean
                      size:
                        description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
                        type: integer
                      fastVPParameters:
                        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
                        $ref: '#/definitions/fastVPParameters'
                      defaultNode:
                        description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
                        $ref: '#/definitions/NodeEnum'
                      hostAccess:
                        description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
                        type: array
                        items:
                          description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
                          type: object
                          properties:
                            host:
                              description: "Host to grant access to LUN, as defined by host type."
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: "Unique identifier of the host instance."
                            accessMask:
                              description: "Host access mask."
                              $ref: '#/definitions/HostLUNAccessEnum'
                            hlu:
                              description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
                              type: integer
                      ioLimitParameters:
                        description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
                        type: object
                        properties:
                          ioLimitPolicy:
                            description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
                            type: object
                            properties:
                              id:
                                type: string
                                description: "Unique identifier of the ioLimitPolicy instance."
                      migrationState:
                        description: "Migration state for Destination PowerStore Orchestration."
                        $ref: '#/definitions/DCMigrationStateEnum'
      tags:
      - storageResource
      description: "Create a Consistency Group Thin Clone."
      operationId: storageResource_createConsistencyGroupThinClone_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageResource:
                    description: "Storage resource instance that represents the new Thin Clone."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the storage resource."
      summary: 30. CreateConsistencyGroupThinClone storageResource by name
  /api/instances/storageResource/{id}/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [snap,copyName]
          properties:
            snap:
              description: "The reference to the new source snapshot object. The new source snapshot may be any snap of this storage resource's base storage resource, including the current one."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the snap instance."
            copyName:
              description: "Name of the snapshot copy created before the refresh operation occurs."
              type: string
            force:
              description: "When set, the refresh operation will proceed even if host access is configured on the storage resource."
              type: boolean
      tags:
      - storageResource
      description: "Refresh a Storage Resource.
  Storage resource will be overwritten with a copy of the data from specified snapshot.
  When a thin clone storage resource is refreshed, this will be the new value of its parentSnap property.
  After a snap is taken, named using the copyName parameter, the storage resource will be overwritten with data from the specified snap."
      operationId: storageResource_refresh
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  copy:
                    description: "The resulting snapshot."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the snap instance."
      summary: 31. Refresh storageResource by id
  /api/instances/storageResource/name:{name}/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the storage resource."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [snap,copyName]
          properties:
            snap:
              description: "The reference to the new source snapshot object. The new source snapshot may be any snap of this storage resource's base storage resource, including the current one."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the snap instance."
            copyName:
              description: "Name of the snapshot copy created before the refresh operation occurs."
              type: string
            force:
              description: "When set, the refresh operation will proceed even if host access is configured on the storage resource."
              type: boolean
      tags:
      - storageResource
      description: "Refresh a Storage Resource.
  Storage resource will be overwritten with a copy of the data from specified snapshot.
  When a thin clone storage resource is refreshed, this will be the new value of its parentSnap property.
  After a snap is taken, named using the copyName parameter, the storage resource will be overwritten with data from the specified snap."
      operationId: storageResource_refresh_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  copy:
                    description: "The resulting snapshot."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the snap instance."
      summary: 32. Refresh storageResource by name
  /api/types/storageResourceCapabilityProfile/instances:
    get:
      tags:
      - storageResourceCapabilityProfile
      description: 'Collection query'
      operationId: storageResourceCapabilityProfile_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/storageResourceCapabilityProfile'
      summary: 1. Get all storageResourceCapabilityProfile
  /api/instances/storageResourceCapabilityProfile/{id}:
    get:
      tags:
      - storageResourceCapabilityProfile
      description: 'Instance query'
      operationId: storageResourceCapabilityProfile_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the storage resource capability profile."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/storageResourceCapabilityProfile'
      summary: 2. Get storageResourceCapabilityProfile by id
  /api/types/storageTier/instances:
    get:
      tags:
      - storageTier
      description: 'Collection query'
      operationId: storageTier_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/storageTier'
      summary: 1. Get all storageTier
  /api/instances/storageTier/{id}:
    get:
      tags:
      - storageTier
      description: 'Instance query'
      operationId: storageTier_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the storageTier instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/storageTier'
      summary: 2. Get storageTier by id
  /api/types/storageTier/action/recommendPoolConfiguration:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [pool]
          properties:
            pool:
              description: "Pool for which to return all possible storage tier configurations, as defined by the pool."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the pool instance."
      tags:
      - storageTier
      description: "Return all possible storage tier configurations that can be used to expand the specified pool."
      operationId: storageTier_recommendPoolConfiguration
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  recommendedConfiguration:
                    description: "Recommended storage tier configurations, as defined by the storageTier."
                    type: array
                    items:
                      description: "Set of RAID configurations for each storage tier that can be used for pool expansion."
                      type: object
                      properties:
                        tierType:
                          description: "Tier type."
                          $ref: '#/definitions/TierTypeEnum'
                        raidConfigurations:
                          description: "List of RAID configurations that can be used to expand the specified tier type, 
  as defined by the raidConfiguration type."
                          type: array
                          items:
                            description: "Possible RAID configurations for the pool tier. These configurations have
  the same RAID type (or RAID level) and different stripe widths (or RAID moduluses)."
                            type: object
                            properties:
                              raidType:
                                description: "RAID type (or RAID level) of the RAID configuration."
                                $ref: '#/definitions/RaidTypeEnum'
                              isDefault:
                                description: "Indicates whether the RAID configuration is the default RAID configuration for
  the associated storage tier. Values are:
  <ul>
  <li>true - RAID configuration is the default RAID configuration for the
  associated storage tier.</li>
  <li>false - RAID configuration is not the default RAID configuration for the
  associated storage tier.</li>
  </ul>"
                                type: boolean
                              stripeWidthConfig:
                                description: "List of supported stripe widths (or RAID moduluses) for the RAID type."
                                type: array
                                items:
                                  description: "Possible stripe width (or RAID modulus) values for the specified RAID type and tier type."
                                  $ref: '#/definitions/stripeWidthConfiguration'
      summary: 3. RecommendPoolConfiguration storageTier
  /api/types/storageTier/action/getStorageTierConfiguration:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [tierType,raidType,stripeWidth]
          properties:
            tierType:
              description: "Type of the tier."
              $ref: '#/definitions/TierTypeEnum'
            raidType:
              description: "Preferred RAID type (RAID level) for the storage tier."
              $ref: '#/definitions/RaidTypeEnum'
            stripeWidth:
              description: "Preferred RAID stripe width (RAID modulus) for the tier."
              $ref: '#/definitions/RaidStripeWidthEnum'
      tags:
      - storageTier
      description: "Return all possible RAID configurations for the tier. Applied to traditional pools only."
      operationId: storageTier_getStorageTierConfiguration
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  storageConfiguration:
                    description: "All possible configurations for the tier, 
  as defined by the storageTierConfiguration embedded object."
                    type: object
                    properties:
                      storageTier:
                        description: "Storage tier for which you want to obtain proposed configurations as defined
  by the storageCapability resource type."
                        type: object
                        properties:
                          id:
                            type: string
                            description: "Unique identifier of the storageTier instance."
                      raidType:
                        description: "(Applies to physical deployments only.) RAID type of the proposed storage configuration."
                        $ref: '#/definitions/RaidTypeEnum'
                      stripeWidth:
                        description: "(Applies to physical deployments only.) Stripe width of the proposed storage configuration."
                        $ref: '#/definitions/RaidStripeWidthEnum'
                      disksTotal:
                        description: "(Applies to physical deployments only.) Total number of disks in system that can be configured with the specified disk
  type, RAID type, and stripe width."
                        type: integer
                      sizeTotal:
                        description: "Maximum usable capacity for the specified storage configuration if all
  available disks are used for the configuration."
                        type: integer
                      diskGroupConfigurations:
                        description: "(Applies to physical deployments only.) Possible amounts of disks and capacities for each diskGroup that contains
  disks of type corresponding to storageCapability (NVMe, EFD, SAS, NL-SAS)"
                        type: array
                        items:
                          description: "Set of possible disk selections for a storage tier, given a specified RAID
  type (or RAID Level) and stripe width (or RAID modulus)."
                          type: object
                          properties:
                            diskGroup:
                              description: "Disk group from which to take disks for the storage tier configuration."
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: "Unique identifier of the diskGroup instance."
                            unusedDisks:
                              description: "Number of unused disks."
                              type: integer
                            tierType:
                              description: "Tier type."
                              $ref: '#/definitions/TierTypeEnum'
                            partNumber:
                              description: "Part number for the disks."
                              type: string
                            diskRpm:
                              type: integer
                            advertisedSize:
                              description: "Disk capacity written on the label of the disks."
                              type: integer
                            diskSize:
                              description: "Disk capacity."
                              type: integer
                            raidGroupConfigurations:
                              description: "Comma-separated list of allowed RAID group configurations."
                              type: array
                              items:
                                description: "RAID group configurations for particular tier."
                                $ref: '#/definitions/raidGroupConfiguration'
                            diskTechnology:
                              description: "Disk technology of the disks."
                              $ref: '#/definitions/DiskTechnologyEnum'
                            isDefault:
                              description: "Indicates whether the configuration is the default. Values are:
  <ul>
  <li>Storage tier configuration is the default configuration.</li>
  <li>Storage tier configuration is not the default configuration.>/li>
  </ul>"
                              type: boolean
                            minHotSpareCandidates:
                              description: "Minimum number of hot spares required for existing traditional pool(s) 
  in the disk group. Can be 0 if no traditional pool uses this disk group.
  As a rule one Hot spare is required per 30 disks."
                              type: integer
      summary: 4. GetStorageTierConfiguration storageTier
  /api/types/supportAsset/instances:
    get:
      tags:
      - supportAsset
      description: 'Collection query'
      operationId: supportAsset_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/supportAsset'
      summary: 1. Get all supportAsset
  /api/instances/supportAsset/{id}:
    get:
      tags:
      - supportAsset
      description: 'Instance query'
      operationId: supportAsset_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the supportAsset instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/supportAsset'
      summary: 2. Get supportAsset by id
  /api/instances/supportAsset/name:{name}:
    get:
      tags:
      - supportAsset
      description: 'Instance query'
      operationId: supportAsset_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Localized support asset name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/supportAsset'
      summary: 3. Get supportAsset by name
  /api/types/supportProxy/instances:
    get:
      tags:
      - supportProxy
      description: 'Collection query'
      operationId: supportProxy_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/supportProxy'
      summary: 1. Get all supportProxy
  /api/instances/supportProxy/{id}:
    get:
      tags:
      - supportProxy
      description: 'Instance query'
      operationId: supportProxy_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the support proxy instance.
  
  --eng
  This value is always 0, 
  because at any given time there is only one proxy."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/supportProxy'
      summary: 2. Get supportProxy by id
  /api/instances/supportProxy/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the support proxy instance.
  
  --eng
  This value is always 0, 
  because at any given time there is only one proxy."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            isEnabled:
              description: "Configure the use of a proxy server.
  <br/>
  Values are:
  <ul>
  <li>true - Uses a proxy server</li>
  <li>false - Does not use a proxy server</li>
  </ul>"
              type: boolean
            protocol:
              description: "Protocol used for communications with the proxy server.
  <br/>
  Valid values from 0 to 1 only."
              $ref: '#/definitions/ProxyProtocolEnum'
            address:
              description: "Address of proxy server.
  <br/>
  If a port is not specified the following default ports 
  will be used:
  <ul>
  <li>Protocol = http, Default port = 3128</li>
  <li>Protocol = socks, Default port = 1080</li>
  </ul>"
              type: string
            username:
              description: "User account with permission to access the proxy server."
              type: string
            password:
              description: "User account password for the proxy server."
              type: string
      tags:
      - supportProxy
      description: "Modify support proxy settings.
  <br/>
  Enable, disable or change support proxy options."
      operationId: supportProxy_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify supportProxy by id
  /api/types/supportService/instances:
    get:
      tags:
      - supportService
      description: 'Collection query'
      operationId: supportService_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/supportService'
      summary: 1. Get all supportService
  /api/instances/supportService/{id}:
    get:
      tags:
      - supportService
      description: 'Instance query'
      operationId: supportService_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the supportService instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/supportService'
      summary: 2. Get supportService by id
  /api/instances/supportService/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the supportService instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            supportUsername:
              description: "Username for logging into EMC Support."
              type: string
            supportPassword:
              description: "Password for logging into EMC Support."
              type: string
            isContractReportEnabled:
              type: boolean
            isCloudManagementEnabled:
              description: "Indicates whether Cloud Management is enabled or not."
              type: boolean
      tags:
      - supportService
      description: "Modify the support services associated with a storage system user."
      operationId: supportService_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify supportService by id
  /api/instances/supportService/{id}/action/verifySupportCredentials:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the supportService instance."
        required: true
        type: string
      tags:
      - supportService
      description: "Verify the stored support username and password for logging into EMC Support."
      operationId: supportService_verifySupportCredentials
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. VerifySupportCredentials supportService by id
  /api/types/system/instances:
    get:
      tags:
      - system
      description: 'Collection query'
      operationId: system_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/system'
      summary: 1. Get all system
  /api/instances/system/{id}:
    get:
      tags:
      - system
      description: 'Instance query'
      operationId: system_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the system instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/system'
      summary: 2. Get system by id
  /api/instances/system/name:{name}:
    get:
      tags:
      - system
      description: 'Instance query'
      operationId: system_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "System name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/system'
      summary: 3. Get system by name
  /api/instances/system/{id}/action/failback:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the system instance."
        required: true
        type: string
      tags:
      - system
      description: "Immediately fail back the storage system to the other storage processor."
      operationId: system_failback
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Failback system by id
  /api/instances/system/name:{name}/action/failback:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "System name."
        required: true
        type: string
      tags:
      - system
      description: "Immediately fail back the storage system to the other storage processor."
      operationId: system_failback_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Failback system by name
  /api/instances/system/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the system instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "System name."
              type: string
            uuidBase:
              description: "Base value used to generate UUIDs in the host environment(e.g. OVMS host). This value should be a non-negative number, and not greater than 16385. OpenVMS requires an unique OVMS device UUID for every device visible to an OVMS host, the OVMS device UUID must also be consistent for any given device across all nodes of an OVMS cluster. Dell EMC VNX and Unity systems create the OVMS device UUID by appending the LUN number to the configured Unity or VNX OVMS base UUID. In the situation of multiple storage systems visible to the same OVMS host(s) the storage systems must be configured with unique values which avoid conflicting OVMS device UUIDs. Unity and VNX devices connected to multi-node OVMS clusters should be configured into a consistency group to ensure a consistent OVMS device UUID for the same device across all OVMS cluster nodes."
              type: integer
            isUpgradeCompleted:
              description: "Indicates whether to manually mark an upgrade process completed. This value is automatically set to true by the upgrade provider at the end of the upgrade process and back to false by the first GUI request.  <p> Values are: <ul> <li>true - Mark the upgrade completed.</li> <li>false - Do not mark upgrade completed.</li> </ul> </p> <p> This attribute is required by the GUI to display the upgrade details window on the first login after the upgrade completes. It does not depend on the session. The user who started an upgrade may not see its results, if another user logged in earlier."
              type: boolean
            isEulaAccepted:
              description: "Indicates whether to accept the End User License Agreement (EULA)  for an upgrade.  Once the EULA is accepted, users can upload product licenses and configure the system, or both. Values are: <ul> <li>true - Accept the EULA..</li> <li>false - Do not accept the EULA.</li> </ul>"
              type: boolean
            isAutoFailbackEnabled:
              description: "Indicates whether to enable the automatic failback of NAS servers in the system. Values are: <ul> <li>true - Enable the automatic failback of NAS servers.</li> <li>false - Disable the automatic failback of NAS servers.</li> </ul>"
              type: boolean
      tags:
      - system
      description: "Modify the system configuration."
      operationId: system_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify system by id
  /api/instances/system/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "System name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "System name."
              type: string
            uuidBase:
              description: "Base value used to generate UUIDs in the host environment(e.g. OVMS host). This value should be a non-negative number, and not greater than 16385. OpenVMS requires an unique OVMS device UUID for every device visible to an OVMS host, the OVMS device UUID must also be consistent for any given device across all nodes of an OVMS cluster. Dell EMC VNX and Unity systems create the OVMS device UUID by appending the LUN number to the configured Unity or VNX OVMS base UUID. In the situation of multiple storage systems visible to the same OVMS host(s) the storage systems must be configured with unique values which avoid conflicting OVMS device UUIDs. Unity and VNX devices connected to multi-node OVMS clusters should be configured into a consistency group to ensure a consistent OVMS device UUID for the same device across all OVMS cluster nodes."
              type: integer
            isUpgradeCompleted:
              description: "Indicates whether to manually mark an upgrade process completed. This value is automatically set to true by the upgrade provider at the end of the upgrade process and back to false by the first GUI request.  <p> Values are: <ul> <li>true - Mark the upgrade completed.</li> <li>false - Do not mark upgrade completed.</li> </ul> </p> <p> This attribute is required by the GUI to display the upgrade details window on the first login after the upgrade completes. It does not depend on the session. The user who started an upgrade may not see its results, if another user logged in earlier."
              type: boolean
            isEulaAccepted:
              description: "Indicates whether to accept the End User License Agreement (EULA)  for an upgrade.  Once the EULA is accepted, users can upload product licenses and configure the system, or both. Values are: <ul> <li>true - Accept the EULA..</li> <li>false - Do not accept the EULA.</li> </ul>"
              type: boolean
            isAutoFailbackEnabled:
              description: "Indicates whether to enable the automatic failback of NAS servers in the system. Values are: <ul> <li>true - Enable the automatic failback of NAS servers.</li> <li>false - Disable the automatic failback of NAS servers.</li> </ul>"
              type: boolean
      tags:
      - system
      description: "Modify the system configuration."
      operationId: system_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Modify system by name
  /api/types/systemCapacity/instances:
    get:
      tags:
      - systemCapacity
      description: 'Collection query'
      operationId: systemCapacity_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/systemCapacity'
      summary: 1. Get all systemCapacity
  /api/instances/systemCapacity/{id}:
    get:
      tags:
      - systemCapacity
      description: 'Instance query'
      operationId: systemCapacity_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the systemCapacity instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/systemCapacity'
      summary: 2. Get systemCapacity by id
  /api/types/systemInformation/instances:
    get:
      tags:
      - systemInformation
      description: 'Collection query'
      operationId: systemInformation_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/systemInformation'
      summary: 1. Get all systemInformation
  /api/instances/systemInformation/{id}:
    get:
      tags:
      - systemInformation
      description: 'Instance query'
      operationId: systemInformation_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the systemInformation instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/systemInformation'
      summary: 2. Get systemInformation by id
  /api/instances/systemInformation/{id}/action/sendSiteInfoUpdateDialHome:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the systemInformation instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            siteId:
              type: string
            contactCompany:
              type: string
            streetAddress:
              type: string
            city:
              type: string
            state:
              type: string
            country:
              type: string
      tags:
      - systemInformation
      description: "This method sends a dial home alert to EMC requesting site info update
 in the Intall Base. 
 The site information is now updated automatically, so this method is deprecated."
      deprecated: true
      operationId: systemInformation_sendSiteInfoUpdateDialHome
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. SendSiteInfoUpdateDialHome systemInformation by id
  /api/instances/systemInformation/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the systemInformation instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            contactFirstName:
              type: string
            contactLastName:
              type: string
            contactEmail:
              type: string
            contactPhone:
              type: string
            locationName:
              type: string
            contactMobilePhone:
              type: string
      tags:
      - systemInformation
      description: "Modify cotact and  location information for the storage system displayed in
 Unisphere Central."
      operationId: systemInformation_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify systemInformation by id
  /api/types/systemLimit/instances:
    get:
      tags:
      - systemLimit
      description: 'Collection query'
      operationId: systemLimit_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/systemLimit'
      summary: 1. Get all systemLimit
  /api/instances/systemLimit/{id}:
    get:
      tags:
      - systemLimit
      description: 'Instance query'
      operationId: systemLimit_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the systemLimit instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/systemLimit'
      summary: 2. Get systemLimit by id
  /api/instances/systemLimit/name:{name}:
    get:
      tags:
      - systemLimit
      description: 'Instance query'
      operationId: systemLimit_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Limit name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/systemLimit'
      summary: 3. Get systemLimit by name
  /api/types/systemTime/instances:
    get:
      tags:
      - systemTime
      description: 'Collection query'
      operationId: systemTime_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/systemTime'
      summary: 1. Get all systemTime
  /api/instances/systemTime/{id}:
    get:
      tags:
      - systemTime
      description: 'Instance query'
      operationId: systemTime_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the systemTime instance. Because systemTime is a
  singleton resource type, the value of this field is always 0."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/systemTime'
      summary: 2. Get systemTime by id
  /api/instances/systemTime/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the systemTime instance. Because systemTime is a
  singleton resource type, the value of this field is always 0."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [time,rebootPrivilege]
          properties:
            time:
              description: "New system time."
              type: string
              format: date-time
            rebootPrivilege:
              description: "Indicates whether to reboot the system after modifying the system time. A reboot is required if the time shift exceeds 1000 seconds."
              $ref: '#/definitions/RebootPrivilegeEnum'
      tags:
      - systemTime
      description: "Modify the current system time."
      operationId: systemTime_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify systemTime by id
  /api/types/technicalAdvisory/instances:
    get:
      tags:
      - technicalAdvisory
      description: 'Collection query'
      operationId: technicalAdvisory_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/technicalAdvisory'
      summary: 1. Get all technicalAdvisory
  /api/instances/technicalAdvisory/{id}:
    get:
      tags:
      - technicalAdvisory
      description: 'Instance query'
      operationId: technicalAdvisory_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the technicalAdvisory instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/technicalAdvisory'
      summary: 2. Get technicalAdvisory by id
  /api/types/technicalAdvisory/action/refresh:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      tags:
      - technicalAdvisory
      description: "Check for new Technical Advisories from EMC Online Support."
      operationId: technicalAdvisory_refresh
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Refresh technicalAdvisory
  /api/types/tenant/instances:
    get:
      tags:
      - tenant
      description: 'Collection query'
      operationId: tenant_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/tenant'
      summary: 1. Get all tenant
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name,vlans]
          properties:
            name:
              description: "Name."
              type: string
            uuid:
              description: "UUID of tenant object."
              type: string
            vlans:
              description: "List of VLAN IDs."
              type: array
              items:
                type: integer
      tags:
      - tenant
      description: "Create a tenant."
      operationId: tenant_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new tenant instance."
                    type: string
      summary: 4. Create tenant
  /api/instances/tenant/{id}:
    get:
      tags:
      - tenant
      description: 'Instance query'
      operationId: tenant_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the tenant instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/tenant'
      summary: 2. Get tenant by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the tenant instance."
        required: true
        type: string
      tags:
      - tenant
      description: "Destroy a tenant."
      operationId: tenant_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete tenant by id
  /api/instances/tenant/name:{name}:
    get:
      tags:
      - tenant
      description: 'Instance query'
      operationId: tenant_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "User-specified name of the tenant."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/tenant'
      summary: 3. Get tenant by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified name of the tenant."
        required: true
        type: string
      tags:
      - tenant
      description: "Destroy a tenant."
      operationId: tenant_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete tenant by name
  /api/instances/tenant/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the tenant instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "New tenant name."
              type: string
            vlans:
              description: "List of VLAN IDs to set."
              type: array
              items:
                type: integer
      tags:
      - tenant
      description: "Modify a tenant."
      operationId: tenant_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify tenant by id
  /api/instances/tenant/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "User-specified name of the tenant."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "New tenant name."
              type: string
            vlans:
              description: "List of VLAN IDs to set."
              type: array
              items:
                type: integer
      tags:
      - tenant
      description: "Modify a tenant."
      operationId: tenant_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify tenant by name
  /api/types/treeQuota/instances:
    get:
      tags:
      - treeQuota
      description: 'Collection query'
      operationId: treeQuota_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/treeQuota'
      summary: 1. Get all treeQuota
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [filesystem,path]
          properties:
            filesystem:
              description: "Filesystem instance."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the file system."
            path:
              description: "Path (relative to the root of the file system) of the tree quota."
              type: string
            description:
              description: "Description of the tree quota."
              type: string
            hardLimit:
              description: "Hard limit. <br> The default value 0 means no limitation."
              type: integer
            softLimit:
              description: "Soft limit. <br> The default value 0 means no limitation."
              type: integer
      tags:
      - treeQuota
      description: "Create a tree quota."
      operationId: treeQuota_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "New treeQuota instance."
                    type: string
      summary: 3. Create treeQuota
  /api/instances/treeQuota/{id}:
    get:
      tags:
      - treeQuota
      description: 'Instance query'
      operationId: treeQuota_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the tree quota instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/treeQuota'
      summary: 2. Get treeQuota by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the tree quota instance."
        required: true
        type: string
      tags:
      - treeQuota
      description: "Delete a tree quota."
      operationId: treeQuota_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete treeQuota by id
  /api/instances/treeQuota/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the tree quota instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            description:
              description: "Description."
              type: string
            hardLimit:
              description: "Hard limit. <br> The value 0 means no limitation."
              type: integer
            softLimit:
              description: "Soft limit. <br> The value 0 means no limitation."
              type: integer
      tags:
      - treeQuota
      description: "Modify a tree quota."
      operationId: treeQuota_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify treeQuota by id
  /api/types/udoctorPackage/instances:
    get:
      tags:
      - udoctorPackage
      description: 'Collection query'
      operationId: udoctorPackage_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/udoctorPackage'
      summary: 1. Get all udoctorPackage
  /api/instances/udoctorPackage/{id}:
    get:
      tags:
      - udoctorPackage
      description: 'Instance query'
      operationId: udoctorPackage_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the udoctorPackage instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/udoctorPackage'
      summary: 2. Get udoctorPackage by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the udoctorPackage instance."
        required: true
        type: string
      tags:
      - udoctorPackage
      description: "Delete the udoctorPackage, and the package will not be able to be installed later."
      operationId: udoctorPackage_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete udoctorPackage by id
  /api/instances/udoctorPackage/name:{name}:
    get:
      tags:
      - udoctorPackage
      description: 'Instance query'
      operationId: udoctorPackage_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "File name of the udoctorPackage."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/udoctorPackage'
      summary: 3. Get udoctorPackage by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "File name of the udoctorPackage."
        required: true
        type: string
      tags:
      - udoctorPackage
      description: "Delete the udoctorPackage, and the package will not be able to be installed later."
      operationId: udoctorPackage_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 9. Delete udoctorPackage by name
  /api/instances/udoctorPackage/{id}/action/install:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the udoctorPackage instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            scheduleTime:
              description: "Scheduled date and time to install the udoctorPackage. If not set, the package will be installed immediately."
              type: string
              format: date-time
      tags:
      - udoctorPackage
      description: "Install the udoctorPackage."
      operationId: udoctorPackage_install
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Install udoctorPackage by id
  /api/instances/udoctorPackage/name:{name}/action/install:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "File name of the udoctorPackage."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            scheduleTime:
              description: "Scheduled date and time to install the udoctorPackage. If not set, the package will be installed immediately."
              type: string
              format: date-time
      tags:
      - udoctorPackage
      description: "Install the udoctorPackage."
      operationId: udoctorPackage_install_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Install udoctorPackage by name
  /api/instances/udoctorPackage/{id}/action/cancel:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the udoctorPackage instance."
        required: true
        type: string
      tags:
      - udoctorPackage
      description: "If the package is scheduled for install, and the install has not yet begun, this cancels the scheduled install. The package may still be installed or scheduled for install again later."
      operationId: udoctorPackage_cancel
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Cancel udoctorPackage by id
  /api/instances/udoctorPackage/name:{name}/action/cancel:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "File name of the udoctorPackage."
        required: true
        type: string
      tags:
      - udoctorPackage
      description: "If the package is scheduled for install, and the install has not yet begun, this cancels the scheduled install. The package may still be installed or scheduled for install again later."
      operationId: udoctorPackage_cancel_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Cancel udoctorPackage by name
  /api/types/uncommittedPort/instances:
    get:
      tags:
      - uncommittedPort
      description: 'Collection query'
      operationId: uncommittedPort_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/uncommittedPort'
      summary: 1. Get all uncommittedPort
  /api/instances/uncommittedPort/{id}:
    get:
      tags:
      - uncommittedPort
      description: 'Instance query'
      operationId: uncommittedPort_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the Uncommitted port instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/uncommittedPort'
      summary: 2. Get uncommittedPort by id
  /api/instances/uncommittedPort/name:{name}:
    get:
      tags:
      - uncommittedPort
      description: 'Instance query'
      operationId: uncommittedPort_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Uncommitted port name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/uncommittedPort'
      summary: 3. Get uncommittedPort by name
  /api/types/upgradeSession/instances:
    get:
      tags:
      - upgradeSession
      description: 'Collection query'
      operationId: upgradeSession_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/upgradeSession'
      summary: 1. Get all upgradeSession
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            candidate:
              description: "Candidate software to install in the upgrade session, as defined by the candidateSoftwareVersion resource type."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the candidateSoftwareVersion instance."
            selectedModel:
              description: "Storage processor model to upgrade to in the online or offline hardware upgrade procedure"
              $ref: '#/definitions/SPModelNameEnum'
            pauseBeforeReboot:
              description: "(optional) Flag to tell that session should stop after the 'preinstall' tasks and before first SP reboot."
              type: boolean
            pauseBetweenReboots:
              description: "(optional) Flag to tell that session should stop after the first SP reboot."
              type: boolean
            offline:
              description: "flag to run a disruptive storage processor upgrade. Offline SP upgrade is faster but all data will be unavailable during the proceedure."
              type: boolean
      tags:
      - upgradeSession
      description: "Start a session to upgrade the system software with an uploaded upgrade
  candidate."
      operationId: upgradeSession_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "The new upgrade session."
                    type: string
      summary: 3. Create upgradeSession
  /api/instances/upgradeSession/{id}:
    get:
      tags:
      - upgradeSession
      description: 'Instance query'
      operationId: upgradeSession_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier for the upgradeSession instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/upgradeSession'
      summary: 2. Get upgradeSession by id
  /api/types/upgradeSession/action/verifyUpgradeEligibility:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      tags:
      - upgradeSession
      description: "Validate that the system is in a healthy state. This is required for an
  upgrade and runs automatically when an upgrade is started. You can use this
  operation to perform a system health check at any time."
      operationId: upgradeSession_verifyUpgradeEligibility
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  messages:
                    description: "List of embedded upgradeMessage which contain the info of message's identifier, localized text, severity and so on."
                    type: array
                    items:
                      description: "A message occurrence.
  
  This is also the message object returned in the body of non-2xx return code
  REST responses."
                      type: object
                      properties:
                        errorCode:
                          description: "Error code for this message."
                          type: string
                        messages:
                          description: "List of localized messages."
                          type: array
                          items:
                            description: "List of name value pairs used to embed additional data in an object."
                            $ref: '#/definitions/localizedMessage'
                        severity:
                          description: "Severity level associated with this message."
                          $ref: '#/definitions/SeverityEnum'
                        httpStatus:
                          description: "HTTP status code for this message."
                          type: integer
      summary: 4. VerifyUpgradeEligibility upgradeSession
  /api/instances/upgradeSession/{id}/action/resume:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier for the upgradeSession instance."
        required: true
        type: string
      tags:
      - upgradeSession
      description: "Resume a session that is currently in paused, failed, or failed_lock state."
      operationId: upgradeSession_resume
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Resume upgradeSession by id
  /api/instances/upgradeSession/{id}/action/cancel:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier for the upgradeSession instance."
        required: true
        type: string
      tags:
      - upgradeSession
      description: "Cancel paused or failed upgrade. This will make the upgrade un-resumable, and remove uploaded candidateSoftwareVersion if any."
      operationId: upgradeSession_cancel
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Cancel upgradeSession by id
  /api/instances/upgradeSession/{id}/action/acknowledge:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier for the upgradeSession instance."
        required: true
        type: string
      tags:
      - upgradeSession
      description: "User acknowledges that an upgrade operation is in a succesful or cancelled state."
      operationId: upgradeSession_acknowledge
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Acknowledge upgradeSession by id
  /api/types/urServer/instances:
    get:
      tags:
      - urServer
      description: 'Collection query'
      operationId: urServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/urServer'
      summary: 1. Get all urServer
  /api/instances/urServer/{id}:
    get:
      tags:
      - urServer
      description: 'Instance query'
      operationId: urServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the urServer instance. This value is always 0, because
  the object is a singleton."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/urServer'
      summary: 2. Get urServer by id
  /api/instances/urServer/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the urServer instance. This value is always 0, because
  the object is a singleton."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            address:
              description: "Unisphere Central server IP address."
              type: string
            certificateHash:
              description: "Hash of the existing certificate."
              type: string
            sharedSecret:
              description: "Challenge phrase used by the Unisphere Central server to sign the certificate."
              type: string
      tags:
      - urServer
      description: "Modify storage system registration information."
      operationId: urServer_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify urServer by id
  /api/types/user/instances:
    get:
      tags:
      - user
      description: 'Collection query'
      operationId: user_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/user'
      summary: 1. Get all user
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [name,role,password]
          properties:
            name:
              description: "User name."
              type: string
            role:
              description: "User role."
              type: string
            password:
              description: "Initial password for the user."
              type: string
      tags:
      - user
      description: "Create a local user. When you create a local user, the system automatically
  creates a roleMapping resource for that user, based on the value of the role
  attribute.
  <br/>
  <br/>
  Use the roleMapping resource type to create authentication for LDAP users and
  LDAP groups, as described in the associated help topic."
      operationId: user_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier for the new user."
                    type: string
      summary: 4. Create user
  /api/instances/user/{id}:
    get:
      tags:
      - user
      description: 'Instance query'
      operationId: user_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the user instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/user'
      summary: 2. Get user by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the user instance."
        required: true
        type: string
      tags:
      - user
      description: "Delete a local user. When you delete a local user, the system also deletes the
  roleMapping resource associated with the user."
      operationId: user_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Delete user by id
  /api/instances/user/name:{name}:
    get:
      tags:
      - user
      description: 'Instance query'
      operationId: user_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Name of the user."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/user'
      summary: 3. Get user by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the user."
        required: true
        type: string
      tags:
      - user
      description: "Delete a local user. When you delete a local user, the system also deletes the
  roleMapping resource associated with the user."
      operationId: user_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete user by name
  /api/instances/user/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the user instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            role:
              description: "Role with which to associate the user."
              type: string
            password:
              description: "User's new password."
              type: string
            oldPassword:
              description: "User's existing password."
              type: string
      tags:
      - user
      description: "Change the local user's password or/and role.
  <br/>
  <br/>
  Use the roleMapping resource type to change the access privileges
  for LDAP users and LDAP groups, as described in the associated help topic."
      operationId: user_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Modify user by id
  /api/instances/user/name:{name}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Name of the user."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            role:
              description: "Role with which to associate the user."
              type: string
            password:
              description: "User's new password."
              type: string
            oldPassword:
              description: "User's existing password."
              type: string
      tags:
      - user
      description: "Change the local user's password or/and role.
  <br/>
  <br/>
  Use the roleMapping resource type to change the access privileges
  for LDAP users and LDAP groups, as described in the associated help topic."
      operationId: user_modify_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Modify user by name
  /api/types/userQuota/instances:
    get:
      tags:
      - userQuota
      description: 'Collection query'
      operationId: userQuota_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/userQuota'
      summary: 1. Get all userQuota
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            filesystem:
              description: "The filesystem in which the new user quota will be created."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the file system."
            treeQuota:
              description: "The treeQuota (instead of filesystem) in which the new quota will be created."
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier of the tree quota instance."
            uid:
              description: "User ID of the user."
              type: integer
            unixName:
              description: "Unix Name of the user."
              type: string
            winName:
              description: "Windows Name of the user. The format is 'domain\\user' for the domain user."
              type: string
            hardLimit:
              description: "Hard limit. <br> The default value 0 means no limitations."
              type: integer
            softLimit:
              description: "Soft limit. <br> The default value 0 means no limitations."
              type: integer
      tags:
      - userQuota
      description: "Create a user quota within either a file system or a tree quota. 
  <br> Either the filesystem or treeQuota that will contain the new user quota must be specified.
  <br> Exactly one of uid, unixName or winName must be specified."
      operationId: userQuota_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "New user quota instance."
                    type: string
      summary: 3. Create userQuota
  /api/instances/userQuota/{id}:
    get:
      tags:
      - userQuota
      description: 'Instance query'
      operationId: userQuota_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the user quota instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/userQuota'
      summary: 2. Get userQuota by id
  /api/instances/userQuota/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the user quota instance."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            hardLimit:
              description: "Hard limit. <br> The value 0 means no limitations."
              type: integer
            softLimit:
              description: "Soft limit. <br> The value 0 means no limitations."
              type: integer
      tags:
      - userQuota
      description: "Modify a user quota."
      operationId: userQuota_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Modify userQuota by id
  /api/types/virtualVolume/instances:
    get:
      tags:
      - virtualVolume
      description: 'Collection query'
      operationId: virtualVolume_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/virtualVolume'
      summary: 1. Get all virtualVolume
  /api/instances/virtualVolume/{id}:
    get:
      tags:
      - virtualVolume
      description: 'Instance query'
      operationId: virtualVolume_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the VVol."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/virtualVolume'
      summary: 2. Get virtualVolume by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the VVol."
        required: true
        type: string
      tags:
      - virtualVolume
      description: "Delete a virtual volume. 
 Virtual volumes are managed from VCenter via the VASA API. Delete is available in REST only for extraordinary cases."
      operationId: virtualVolume_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 8. Delete virtualVolume by id
  /api/instances/virtualVolume/name:{name}:
    get:
      tags:
      - virtualVolume
      description: 'Instance query'
      operationId: virtualVolume_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Virtual volume name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/virtualVolume'
      summary: 3. Get virtualVolume by name
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Virtual volume name."
        required: true
        type: string
      tags:
      - virtualVolume
      description: "Delete a virtual volume. 
 Virtual volumes are managed from VCenter via the VASA API. Delete is available in REST only for extraordinary cases."
      operationId: virtualVolume_delete_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 9. Delete virtualVolume by name
  /api/instances/virtualVolume/{id}/action/createSnap:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the VVol."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: string
      tags:
      - virtualVolume
      description: "Create a snapshot of an existing Virtual Volume."
      operationId: virtualVolume_createSnap
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  snapVVolId:
                    description: "Id of snapshot VVol."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the VVol."
      summary: 4. CreateSnap virtualVolume by id
  /api/instances/virtualVolume/name:{name}/action/createSnap:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Virtual volume name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: string
      tags:
      - virtualVolume
      description: "Create a snapshot of an existing Virtual Volume."
      operationId: virtualVolume_createSnap_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  snapVVolId:
                    description: "Id of snapshot VVol."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the VVol."
      summary: 5. CreateSnap virtualVolume by name
  /api/instances/virtualVolume/{id}/action/restore:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the VVol."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [snapVVolId]
          properties:
            snapVVolId:
              description: "Id of snapshot VVol."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the VVol."
      tags:
      - virtualVolume
      description: "Restore the data in the specified virtual volume to the specified one of its snapshots."
      operationId: virtualVolume_restore
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 6. Restore virtualVolume by id
  /api/instances/virtualVolume/name:{name}/action/restore:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "Virtual volume name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [snapVVolId]
          properties:
            snapVVolId:
              description: "Id of snapshot VVol."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the VVol."
      tags:
      - virtualVolume
      description: "Restore the data in the specified virtual volume to the specified one of its snapshots."
      operationId: virtualVolume_restore_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 7. Restore virtualVolume by name
  /api/types/virusChecker/instances:
    get:
      tags:
      - virusChecker
      description: 'Collection query'
      operationId: virusChecker_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/virusChecker'
      summary: 1. Get all virusChecker
  /api/instances/virusChecker/{id}:
    get:
      tags:
      - virusChecker
      description: 'Instance query'
      operationId: virusChecker_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/virusChecker'
      summary: 2. Get virusChecker by id
  /api/instances/virusChecker/{id}/action/modify:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          properties:
            isEnabled:
              description: "Indicates whether the anti-virus service is enabled on this NAS server.
  Value are:
  <ul>
  <li>true - Anti-virus service is enabled. Each file created or modified by an SMB client 
  is scanned by the third-party anti-virus servers. If a virus is detected, the access to the 
  file system is denied. If third-party anti-virus servers are not available, the access to the 
  file systems is denied to prevent potential viruses propagation.</li>
  <li>false - Anti-virus service is disabled. File systems of the NAS servers are
  available for access without virus checking</li>
  </ul>"
              type: boolean
      tags:
      - virusChecker
      description: "Modify the Virus Checker settings."
      operationId: virusChecker_modify
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 3. Modify virusChecker by id
  /api/types/vlanInfo/instances:
    get:
      tags:
      - vlanInfo
      description: 'Collection query'
      operationId: vlanInfo_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/vlanInfo'
      summary: 1. Get all vlanInfo
  /api/instances/vlanInfo/{id}:
    get:
      tags:
      - vlanInfo
      description: 'Instance query'
      operationId: vlanInfo_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the vlanInfo instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/vlanInfo'
      summary: 2. Get vlanInfo by id
  /api/types/vm/instances:
    get:
      tags:
      - vm
      description: 'Collection query'
      operationId: vm_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/vm'
      summary: 1. Get all vm
  /api/instances/vm/{id}:
    get:
      tags:
      - vm
      description: 'Instance query'
      operationId: vm_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique instance id."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/vm'
      summary: 2. Get vm by id
  /api/instances/vm/name:{name}:
    get:
      tags:
      - vm
      description: 'Instance query'
      operationId: vm_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Friendly name of VM displayed on vCenter."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/vm'
      summary: 3. Get vm by name
  /api/types/vmDisk/instances:
    get:
      tags:
      - vmDisk
      description: 'Collection query'
      operationId: vmDisk_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/vmDisk'
      summary: 1. Get all vmDisk
  /api/instances/vmDisk/{id}:
    get:
      tags:
      - vmDisk
      description: 'Instance query'
      operationId: vmDisk_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique instance ID."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/vmDisk'
      summary: 2. Get vmDisk by id
  /api/instances/vmDisk/name:{name}:
    get:
      tags:
      - vmDisk
      description: 'Instance query'
      operationId: vmDisk_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "Friendly name of VM disk displayed on vCenter."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/vmDisk'
      summary: 3. Get vmDisk by name
  /api/types/vmwareNasPEServer/instances:
    get:
      tags:
      - vmwareNasPEServer
      description: 'Collection query'
      operationId: vmwareNasPEServer_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/vmwareNasPEServer'
      summary: 1. Get all vmwareNasPEServer
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [nasServer,fileInterfaces]
          properties:
            nasServer:
              description: "NAS server associated with the NAS VMware Protocol Endpoint Server."
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  description: "Unique identifier of the nasServer instance."
            fileInterfaces:
              description: "A list of file IP interfaces, associated with NAS server, that will be used by NAS VMware Protocol Endpoint Server."
              type: array
              items:
                description: "Information about network interfaces in the storage system. These interfaces
  control access to Windows (CIFS) and UNIX/Linux (NFS) file storage."
                type: object
                required: [id]
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the fileInterface instance."
      tags:
      - vmwareNasPEServer
      description: "Create a new NAS VMware Protocol Endpoint Server. The id is returned upon success."
      operationId: vmwareNasPEServer_create
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 'Created'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                type: object
                properties:
                  id:
                    description: "Id of created instance."
                    type: string
      summary: 3. Create vmwareNasPEServer
  /api/instances/vmwareNasPEServer/{id}:
    get:
      tags:
      - vmwareNasPEServer
      description: 'Instance query'
      operationId: vmwareNasPEServer_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of NAS VMware Protocol Endpoint Server."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/vmwareNasPEServer'
      summary: 2. Get vmwareNasPEServer by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of NAS VMware Protocol Endpoint Server."
        required: true
        type: string
      tags:
      - vmwareNasPEServer
      description: "Delete an existing NAS VMware Protocol Endpoint Server."
      operationId: vmwareNasPEServer_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. Delete vmwareNasPEServer by id
  /api/types/vmwarePE/instances:
    get:
      tags:
      - vmwarePE
      description: 'Collection query'
      operationId: vmwarePE_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/vmwarePE'
      summary: 1. Get all vmwarePE
  /api/instances/vmwarePE/{id}:
    get:
      tags:
      - vmwarePE
      description: 'Instance query'
      operationId: vmwarePE_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of VMware protocol endpoint."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/vmwarePE'
      summary: 2. Get vmwarePE by id
  /api/instances/vmwarePE/name:{name}:
    get:
      tags:
      - vmwarePE
      description: 'Instance query'
      operationId: vmwarePE_get_byName
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: name
        in: path
        description: "VMware protocol endpoint name."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/vmwarePE'
      summary: 3. Get vmwarePE by name
  /api/instances/vmwarePE/{id}/action/modifyScsiPe:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of VMware protocol endpoint."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [lunID]
          properties:
            lunID:
              description: "New LUN ID to set."
              type: integer
      tags:
      - vmwarePE
      description: "Modify SCSI PE."
      operationId: vmwarePE_modifyScsiPe
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 4. ModifyScsiPe vmwarePE by id
  /api/instances/vmwarePE/name:{name}/action/modifyScsiPe:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: name
        in: path
        description: "VMware protocol endpoint name."
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [lunID]
          properties:
            lunID:
              description: "New LUN ID to set."
              type: integer
      tags:
      - vmwarePE
      description: "Modify SCSI PE."
      operationId: vmwarePE_modifyScsiPe_byName
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. ModifyScsiPe vmwarePE by name
  /api/types/x509Certificate/instances:
    get:
      tags:
      - x509Certificate
      description: 'Collection query'
      operationId: x509Certificate_getALL
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/orderby'
      - $ref: '#/parameters/groupby'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/with_entrycount'
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI for collection query.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List of hyperlinks for collection query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self,first,prev,next,last]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              entryCount:
                type: integer
                minimum: 0
                description: Number of instances in the complete list. This component is used at the collection level only, and is only returned if the with_entrycount query parameter is set to true.
              contents:
                $ref: '#/definitions/x509Certificate'
      summary: 1. Get all x509Certificate
  /api/instances/x509Certificate/{id}:
    get:
      tags:
      - x509Certificate
      description: 'Instance query'
      operationId: x509Certificate_get
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/compact'
      - $ref: '#/parameters/fields'
      - name: id
        in: path
        description: "Unique identifier of the x509Certificate instance."
        required: true
        type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              '@base':
                type: string
                format: url
                description: The base URI to query one instance.
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              links:
                type: array
                description: List one hyperlink for instance query.
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      enum: [self]
                      description: Relationship name.
                    href:
                      type: string
                      format: url
                      description: Link URI. This gets appended to the value of "@base" to create the full link.
              contents:
                $ref: '#/definitions/x509Certificate'
      summary: 2. Get x509Certificate by id
    delete:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - name: id
        in: path
        description: "Unique identifier of the x509Certificate instance."
        required: true
        type: string
      tags:
      - x509Certificate
      description: "Delete an X.509 certificate."
      operationId: x509Certificate_delete
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '204':
          description: 'No Content'
      summary: 5. Delete x509Certificate by id
  /api/types/x509Certificate/action/importCertificateByString:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/timeout'
      - in: body
        name: body
        required: true
        schema:
          type: "object"
          required: [certificateString,type,service]
          properties:
            certificateString:
              description: "Certificate string to import the certificate. The certificate string can be PEM-encoded, and can contain the encrypted private key string to associate with the certificate.  Note: Line feeds in the PEM-encoded string must be replaced by '&#92;n' characters."
              type: string
            type:
              description: "Certificate type."
              $ref: '#/definitions/CertificateTypeEnum'
            service:
              description: "Service with which the certificate is associated."
              $ref: '#/definitions/ServiceTypeEnum'
            scope:
              description: "Scope of the certificate."
              type: object
              properties:
                nasServer:
                  description: "NAS Server with which the certificate is associated."
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier of the nasServer instance."
            passphrase:
              description: "Passphrase used to decrypt the private key. This argument is required if the string contains a private key."
              type: string
      tags:
      - x509Certificate
      description: "Import an X.509 certificate by string."
      operationId: x509Certificate_importCertificateByString
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  id:
                    description: "Unique identifier of the new x509Certificate instance."
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier of the x509Certificate instance."
      summary: 3. ImportCertificateByString x509Certificate
  /api/instances/x509Certificate/{id}/action/exportCertificateByString:
    post:
      parameters:
      - $ref: '#/parameters/X-EMC-REST-CLIENT'
      - $ref: '#/parameters/EMC-CSRF-TOKEN'
      - $ref: '#/parameters/language'
      - name: id
        in: path
        description: "Unique identifier of the x509Certificate instance."
        required: true
        type: string
      tags:
      - x509Certificate
      description: "Export an X.509 certificate by string."
      operationId: x509Certificate_exportCertificateByString
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: Date and time the response was generated.
              contents:
                type: object
                properties:
                  certificateString:
                    description: "Certificate string for the PEM-encoded certificate. Note: Line feeds in the PEM-encoded string will be replaced by '&#92;n' characters."
                    type: string
      summary: 4. ExportCertificateByString x509Certificate by id
definitions:
  aclUser:
    type: object
    x-tags:
      - ~Appendix
    description: "A user associated with a CIFS share level ACL."
    properties:
      id:
        description: "Unique instance id."
        type: string
      sid:
        description: "Windows user id."
        type: string
      domainName:
        description: "Windows domain name."
        type: string
      userName:
        description: "User name."
        type: string
  alert:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about alerts generated by the storage system.
  <br/>
  <br/>
  Alerts are usually events that require attention from the system
  administrator. Most, although not all, alerts indicate that there is a problem
  with the storage system. For example, you might receive an alert telling you that
  a drive has faulted, or that the storage system is running out of space.
  <br/>
  <br/>
  For information about configuring alerts, see the Help topics for the
  alertConfig and AlertConfigSNMPTarget resource types.
  <br/>
  <br/>
  <b>Some of the user-visible attributes in this object should be changed to
  eng-only.</b>"
    properties:
      id:
        description: "Unique identifier of the alert instance."
        type: string
      timestamp:
        description: "Date and time when the alert event occurred, in Greenwich Mean Time (GMT)"
        type: string
        format: date-time
      severity:
        description: "Severity level of the alert."
        $ref: '#/definitions/SeverityEnum'
      component:
        description: "System component that caused the alert. This field can be empty in cases where
  the alert is not specific to any component. For example, this field will be
  empty for log messages that become alerts without associated health state
  changes."
        $ref: '#/definitions/resourceRef'
      messageId:
        description: "Message identifier for the alert in the message catalog. This identifier is
  used for localization purposes."
        type: string
      message:
        description: "Localized alert message."
        type: string
      descriptionId:
        description: "Description identifier for the alert in the message catalog. This identifier
  is used to identify a description of the alert condition."
        type: string
      description:
        description: "Localized description of the alert condition."
        type: string
      resolutionId:
        description: "Unique identifier of the help topic for the alert."
        type: string
      resolution:
        description: "URI that points to a Help topic containing resolution information for the
  alert."
        type: string
      isAcknowledged:
        description: "Indicates whether the alert is acknowledged."
        type: boolean
      state:
        description: "The state of the alert."
        $ref: '#/definitions/AlertStateEnum'
  alertConfig:
    type: object
    x-tags:
      - ~Appendix
    description: "Alert configuration information.
  <br/>
  <b>Note:</b> SNMP trap destinations are defined by the alertConfigSNMPTarget
  resource type."
    properties:
      id:
        description: "Unique identifier of the alertConfig instance. This value is always 0, because
  there is only one occurrence of this resource type."
        type: string
      locale:
        description: "Language in which the system sends email alerts."
        $ref: '#/definitions/LocaleEnum'
      isThresholdAlertsEnabled:
        description: "Indicates whether pool space usage percent threshold alerts functionality is enabled, 
  notice that this flag will be ignored and alerts will be sent always when it is thin provisioned and oversubscribed. Values are:
  <br/>
  <br/>
  <ul>
  <li>true - The pool space usage related alerts will be shown to the user when pool space usage percent reaches the threshold.</li>
  <br/>
  <br/>
  <li>false - The pool space usage related alerts will not be shown to the user when pool space usage percent reaches the threshold.</li>
  </ul>"
        type: boolean
      emailFromAddress:
        description: "The email from address which is used when sending alert emails."
        type: string
      minSNMPTrapNotificationSeverity:
        description: "Minimum severity level for SNMP trap alerts."
        $ref: '#/definitions/SeverityEnum'
      callHomeSuppressionStartTime:
        description: "Date and time when the call home suppression was started. The start time is current system time when user set the suppressionEndTime from null to a valid time. This is available only when callHomeSuppressionEndTime is set."
        type: string
        format: date-time
      callHomeSuppressionEndTime:
        description: "Date and time when the call home suppression will end. The total suppression window (the difference between suppressionStartTime and suppressionEndTime) should be more than 1 hour and less than 48 hours.
If this value is not null then call home suppression is enabled, otherwise call home suppression is disabled."
        type: string
        format: date-time
  alertConfigSNMPTarget:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the Simple Network Management Protocol  (SNMP) destinations
  used by alerts.
  <br/>
  The system uses SNMP to transfer system alerts as traps to an SNMP
  destination host. Traps are asynchronous messages that notify the SNMP
  destination when system and user events occur."
    properties:
      id:
        description: "Unique identifier of the alertConfigSNMPTarget instance."
        type: string
      address:
        description: "Host address and port for the SNMP destination. The default UDP port number is
  162."
        type: string
      version:
        description: "SNMP version used to send the traps or informs."
        $ref: '#/definitions/SNMPVersionEnum'
      community:
        description: "Community string used by SNMP v2c, not applicable for SNMP v3."
        type: string
      username:
        description: "Username used to access the SNMP destination."
        type: string
      authProto:
        description: "Protocol used to authenticate access to the SNMP destination."
        $ref: '#/definitions/SNMPAuthProtocolEnum'
      privacyProto:
        description: "Protocol used to enable privacy on the SNMP destination. The privacy protocol
  encrypts the SNMP packets."
        $ref: '#/definitions/SNMPPrivacyProtocolEnum'
  alertEmailConfig:
    type: object
    x-tags:
      - ~Appendix
    description: "Alert email configuration information. Each email address will receive alerts that meet the criteria.
  <br/>
  <br/>"
    properties:
      id:
        description: "Unique identifier of the alert email configuration."
        type: string
      emailAddress:
        description: "Destination email address."
        type: string
      minNotificationSeverity:
        description: "Minimum severity level for alerts sent to this email address."
        $ref: '#/definitions/SeverityEnum'
  archive:
    type: object
    x-tags:
      - ~Appendix
    description: "Performance archive files in the storage system. <br/>
 <br/>
 Archive file contains performance data for a pre-defined set of metrics in
 the selected time range. Your service provider may request this file in order
 to analyze performance issues."
    properties:
      id:
        description: "Archive id."
        type: string
      name:
        description: "Archive file name."
        type: string
      startTime:
        description: "Archive start time."
        type: string
        format: date-time
      endTime:
        description: "Archive end time."
        type: string
        format: date-time
      size:
        description: "Archive file size."
        type: integer
  autodownloadSoftwareVersion:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about software upgrade and disk firmware images auto-downloaded to the
  storage system."
    properties:
      id:
        description: "Unique identifier of the autodownloadSoftwareVersion instance."
        type: string
      version:
        description: "Version of the autodownloaded software."
        type: string
      name:
        description: "File name of the autodownloaded software."
        type: string
      type:
        description: "Type of the autodownloaded software."
        $ref: '#/definitions/AutodownloadSoftwareTypeEnum'
  basicSystemInfo:
    type: object
    x-tags:
      - ~Appendix
    description: "Provides unauthenticated access to system model, system name, software
  version, and API version information. This is a singleton resource type."
    properties:
      id:
        description: "Unique identifier of the basicSystemInfo instance."
        type: string
      model:
        description: "Model name of this storage system. This value comes from the model attribute of
  the system resource."
        type: string
      name:
        description: "Name of this storage system. This value comes from the name attribute of the
  system resource."
        type: string
      softwareVersion:
        description: "Software version of this storage system. This value comes from the version
  attribute of the installedSoftwareVersion resource."
        type: string
      apiVersion:
        description: "Latest version of the REST API that this storage system supports."
        type: string
      earliestApiVersion:
        description: "Earliest version of the REST API that this storage system supports."
        type: string
  battery:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies to physical deployments only.) Information about batteries in the storage system."
    properties:
      id:
        description: "Unique identifier of the battery instance."
        type: string
      health:
        description: "Health information for the battery, as defined by the health resource type."
        $ref: '#/definitions/health'
      needsReplacement:
        description: "Indicates whether the battery needs replacement. Values are:
  <ul>
  <li>true - Battery needs replacement.</li>
  <li>false - Battery does not need replacement.</li>
  </ul>"
        type: boolean
      parent:
        description: "Resource type and unique identifier of the battery's parent enclosure."
        $ref: '#/definitions/resourceRef'
      slotNumber:
        description: "Slot number where the battery is located in the parent enclosure."
        type: integer
      name:
        description: "Battery name."
        type: string
      manufacturer:
        description: "Manufacturer of the battery."
        type: string
      model:
        description: "Manufacturer's model number for the battery."
        type: string
      firmwareVersion:
        description: "Firmware version number for the battery."
        type: string
      emcPartNumber:
        description: "EMC part number for the battery."
        type: string
      emcSerialNumber:
        description: "EMC serial number for the battery."
        type: string
      vendorPartNumber:
        description: "Vendor part number for the battery."
        type: string
      vendorSerialNumber:
        description: "Vendor serial number for the battery."
        type: string
      parentStorageProcessor:
        description: "Parent Storage Processor of the battery."
        $ref: '#/definitions/storageProcessor'
  candidateSoftwareVersion:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about system software upgrades and language packs uploaded to the
  storage system and available to install."
    properties:
      id:
        description: "Unique identifier of the candidateSoftwareVersion instance."
        type: string
      version:
        description: "Version of the candidate software."
        type: string
      revision:
        description: "Revision number of the candidate software."
        type: integer
      releaseDate:
        description: "Release date of the candidate software."
        type: string
        format: date-time
      type:
        description: "Type of the candidate software."
        $ref: '#/definitions/UpgradeTypeEnum'
      rebootRequired:
        description: "Package requires reboot of bo5th SPs, one at a time, with services remaining available."
        type: boolean
      canPauseBeforeReboot:
        description: "Package can utilize the 'pause' feature allowing the user to choose their disruptive window."
        type: boolean
  capabilityProfile:
    type: object
    x-tags:
      - ~Appendix
    description: "An object representing VASA 2.0 SPBM capability profile.
 Capability profiles can be queried, created, modified and deleted via the REST API.
 Capability profiles can then be queried via VASA 2.0 API by vSphere environment and leveraged for policy based provisioning of virtual volumes."
    properties:
      id:
        description: "Unique identifier of the capability profile."
        type: string
      vmwareUUID:
        description: "Automatically generated unique identifier of the capability profile exposed via VASA 2.0 protocol.  It will conform to RFC 3151 section 1.1."
        type: string
      name:
        description: "The name of the capability profile."
        type: string
      description:
        description: "Capability profile description."
        type: string
      pool:
        description: "The storage pool the capability profile is associated with."
        $ref: '#/definitions/pool'
      driveTypes:
        description: "Supported drive types for the capability profile."
        type: array
        items:
          $ref: '#/definitions/DiskTierEnum'
      fastCacheStates:
        description: "Supported fast cache states for the capability profile."
        type: array
        items:
          $ref: '#/definitions/FastCacheStateEnum'
      raidTypes:
        description: "Supported RAID types for the capability profile."
        type: array
        items:
          $ref: '#/definitions/RaidTypeEnum'
      spaceEfficiencies:
        description: "Supported space efficiency choices for the capability profile."
        type: array
        items:
          $ref: '#/definitions/SpaceEfficiencyEnum'
      tieringPolicies:
        description: "Supported tiering policies for the capability profile."
        type: array
        items:
          $ref: '#/definitions/TieringPolicyEnum'
      serviceLevels:
        description: "Supported service level for the capability profile."
        type: array
        items:
          $ref: '#/definitions/ServiceLevelEnum'
      usageTags:
        description: "Associated usage tags for the capability profile."
        type: array
        items:
          type: string
      inUse:
        description: "Whether any virtual volumes have been created using this capability profile."
        type: boolean
      health:
        description: "Health information for the capability profile, as defined by the health resource type."
        $ref: '#/definitions/health'
  cifsServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about SMB server of a NAS server.
  You can configure one SMB server per NAS server.
  <br/>
  <br/>
  SMB, which stands for Server Message Block, is a protocol for sharing files and communications 
  abstractions such as named pipes and mail slots between computers. Most usage of SMB involves 
  computers running Microsoft Windows. Others vendors implementing SMB are Samba, MacOS.. 
  SMB was also known as Common Internet File System (CIFS).
  <br/>
  <br/>
  An SMB server is created each time Windows shares are enabled on the NAS server. 
  An SMB server could be created as a standalone server or as a server that belongs to a 
  Windows domain (Active Directory). In that case, DNS must be enabled on the NAS server.
  The credentials of an administrator of the domain are required to join that domain. 
  An NTP server must be defined also, to prevent authentication errors caused by 
  unsynchronized clocks."
    properties:
      id:
        description: "Unique identifier of the cifsServer instance."
        type: string
      name:
        description: "User-specified name for the SMB server."
        type: string
      description:
        description: "Description of the SMB server."
        type: string
      netbiosName:
        description: "Computer Name of the SMB server in Windows network."
        type: string
      domain:
        description: "Domain name where SMB server is registered in Active Directory, if applicable."
        type: string
      lastUsedOrganizationalUnit:
        description: "Last used organizational unit of the SMB server in Active Directory, if applicable."
        type: string
      workgroup:
        description: "(Applies to stand-alone SMB servers.) Windows network workgroup for the SMB server."
        type: string
      isStandalone:
        description: "Indicates whether the SMB server is standalone.
  Values are:
  <ul>
  <li>true - SMB server is standalone.</li>
  <li>false - SMB server is joined to the Active Directory.</li>
  </ul>"
        type: boolean
      health:
        description: "Health information for the SMB server, as defined by the health resource type."
        $ref: '#/definitions/health'
      nasServer:
        description: "NAS server that exposes file systems using the SMB server."
        $ref: '#/definitions/nasServer'
      fileInterfaces:
        description: "Interfaces that use the SMB protocol to serve the NAS server's file systems."
        type: array
        items:
          $ref: '#/definitions/fileInterface'
      smbcaSupported:
        description: "Indicates whether the SMB server supports continuous availability.
  Values are:
  <ul>
  <li>true - SMB server supports continuous availability.</li>
  <li>false - SMB server does not support continuous availability.</li>
  </ul>"
        type: boolean
      smbMultiChannelSupported:
        description: "Indicates whether the SMB 3.0+ multichannel feature is supported.
  Values are:
  <ul>
  <li>true - SMB 3.0+ multichannel is supported.</li>
  <li>false - SMB 3.0+ multichannel is not supported.</li>
  </ul>"
        type: boolean
      smbProtocolVersions:
        description: "Supported SMB protocols, such as 1.0, 2.0, 2.1, 3.0, and so on."
        type: array
        items:
          type: string
  cifsShare:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about Common Internet File System (CIFS) shares in the storage
  system.
  <br/>
  <br/>
  CIFS shares use the CIFS protocol to provide an access point for configured
  Windows hosts to access file system storage. The system uses Active Directory
  to authenticate user and user group access to the share.
  <br/>
  <br/>
  <b>Note: </b>To manage CIFS shares for snaps, use the operations for this
  resource type. To manage CIFS shares for file systems, use the applicable
  operations for the  storageResource resource type, as described in the help
  topic for that resource type."
    properties:
      id:
        description: "Unique identifier of the cifsShare instance."
        type: string
      type:
        description: "The type of CIFS Share."
        $ref: '#/definitions/CIFSTypeEnum'
      filesystem:
        description: "(Applies to CIFS shares that are not snaps.) Parent file system associated
  with the CIFS share, as defined by the filesystem resource type.
  <br/>
  <br/>
  If the CIFS share is a snapshot, the value of this attribute is null."
        $ref: '#/definitions/filesystem'
      snap:
        description: "(Applies to CIFS shares of snapshots.) Parent file system snap associated
  with the CIFS share, as defined by the snap resource type.
  <br/>
  <br/>
  If the CIFS share is not a snapshot, the value of this attribute is null."
        $ref: '#/definitions/snap'
      isReadOnly:
        description: "Indicates whether the CIFS share is read-only. Values are:
  <ul>
  <li>true - CIFS share is read-only.</li>
  <li>false - CIFS share is read-write.</li>
  </ul>"
        type: boolean
      name:
        description: "CIFS share name."
        type: string
      path:
        description: "Local path to a location within a file system.
  <br/>
  <br/>
  <font color=#0f0f0f>By default, the system creates a share to the root of
  the file system (top-most directory) at file system creation time. </font>This
  path specifies the unique location of the file system on the storage system.
  CIFS shares allow you to create multiple network shares with the same local
  path. You can specify different host-side access controls for different users,
  while setting up network shares within the file system to access common
  content.
  <br/>
  <br/>
  If you want the CIFS network shares within the same file system to access
  different content, you must first create a share to the root of the file
  system. Then, you can connect from a Windows host, create additional
  directories from Windows, and create corresponding network shares using the
  REST API, Unisphere GUI, or Unisphere CLI."
        type: string
      exportPaths:
        description: "List of export paths which can be used to mount and access share.
  The list is a combination of above name with all the IP addresses of the SMB server."
        type: array
        items:
          type: string
      description:
        description: "User defined CIFS share description."
        type: string
      creationTime:
        description: "Date and time when the CIFS share was created."
        type: string
        format: date-time
      modifiedTime:
        description: "Date and time when the CIFS share was last modified."
        type: string
        format: date-time
      isContinuousAvailabilityEnabled:
        description: "Indicates whether continuous availability for Server Message Block (SMB) 3.0
  is enabled for the CIFS share.
  Values are:
  <ul>
  <li> true - Continuous availability for SMB 3.0 is enabled for the CIFS share. </li>
  <li> false - Continuous availability for SMB 3.0 is disabled for the CIFS share. </li>
  </ul>"
        type: boolean
      isEncryptionEnabled:
        description: "Indicates whether CIFS encryption for Server Message Block (SMB) 3.0 is
  enabled at the shared folder level.
  Values are:
  <ul>
  <li> true - CIFS encryption for SMB 3.0 is enabled. </li>
  <li> false - CIFS encryption for SMB 3.0 is disabled. </li>
  </ul>"
        type: boolean
      isACEEnabled:
        description: "Indicates whether the CIFS share access-level permissions are enabled. 
  Values are:
  <ul>
  <li> true - CIFS share access-level permissions are enabled. </li>
  <li> false - CIFS share access-level permissions are disabled. </li>
  </ul>"
        type: boolean
      isABEEnabled:
        description: "Access-based Enumeration filters the list of available files and folders on a server to include only those, that the requesting user has access to.
  Values are:
  <ul>
  <li> true - Enumerating is enabled. </li>
  <li> false - Enumerating is disabled. </li>
  </ul>"
        type: boolean
      isBranchCacheEnabled:
        description: "BranchCache optimization technology copies content from your main office or hosted cloud content servers and caches the content at branch office locations, allowing client computers at branch offices to access the content locally rather than over the WAN.
  Values are:
  <ul>
  <li> true - BranchCache is enabled. </li>
  <li> false - BranchCache is disabled. </li>
  </ul>"
        type: boolean
      isDFSEnabled:
        description: "Distributed File System allows administrators to group shared folders located on different servers by transparently connection them to one or more DFS namespaces. DFS simplifies the process of moving data from one file server to another.
  Values are:
  <ul>
  <li> true - DFS is enabled. </li>
  <li> false - DFS is disabled. </li>
  </ul>"
        type: boolean
      offlineAvailability:
        description: "Whether the system supports the Offline Files feature, which allows user to configure the CIFS client use files from the share even when not connected.
  Values are:
  <ul>
  <li> true - Offline Files feature is supported. </li>
  <li> false - Offline Files feature is not supported. </li>
  </ul>"
        $ref: '#/definitions/CifsShareOfflineAvailabilityEnum'
      umask:
        description: "The default UNIX umask for new files created on the share. If not specified the umask defaults to 022."
        type: string
  configCaptureResult:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about Configuration Capture results in the storage system.
  <br/>
  <br/>
  Configuration Capture is a service feature which creates a snapshot of the current system configuration. 
  It captures all of the necessary data for business intelligence analysis, helping diagnose issues.
  <br/>
  <br/>"
    properties:
      id:
        description: "Unique identifier of the configCaptureResult instance."
        type: string
      name:
        description: "File name of the configCaptureResult instance."
        type: string
      creationTime:
        description: "Date and time when the configCaptureResult file was created."
        type: string
        format: date-time
      size:
        description: "Size of the configCaptureResult file."
        type: integer
  coreDump:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about core dumps currently available on the storage system.
  <br/>
  <br/>
  Core dumps consist of the recorded state of the working memory which can server as useful debugging aids.
  These are available so that, if requested, you can download and send them to your service provider.
  <br/>
  <br/>"
    properties:
      id:
        description: "Unique identifier of the core dump instance."
        type: string
      name:
        description: "Name of the core dump instance."
        type: string
      creationTime:
        description: "Core dump creation time."
        type: string
        format: date-time
      size:
        description: "Estimated size of the dump tar file."
        type: integer
  crl:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about all Certificate Revocation Lists (CRLs) installed on the storage system.
  The CRL format is described in RFC 5280."
    properties:
      id:
        description: "Unique identifier of the crl instance."
        type: string
      service:
        description: "Service with which the CRL is associated."
        $ref: '#/definitions/ServiceTypeEnum'
      scope:
        description: "Scope of the CRL."
        $ref: '#/definitions/certificateScope'
      version:
        description: "CRL version."
        type: integer
      crlNumber:
        description: "CRL number. This is equivalent to a serial number for the CRL."
        type: string
      signatureAlgorithm:
        description: "CRL signature algorithm."
        $ref: '#/definitions/SignatureAlgoTypeEnum'
      issuer:
        description: "Name of the CRL issuer."
        type: string
      thisUpdate:
        description: "Date and time when the CRL was issued."
        type: string
        format: date-time
      nextUpdate:
        description: "Date and time when the next CRL will be issued."
        type: string
        format: date-time
      certificates:
        description: "List of revoked certificates."
        type: array
        items:
          $ref: '#/definitions/revokedCertificate'
      deltaCRLIndicator:
        description: "Delta CRL indicator.
  The value of this attribute is based on the delta CRL extension,
  which is a CRL number. This value can be blank."
        type: string
  dae:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about Disk Array Enclosure (DAE) components in the storage system."
    properties:
      id:
        description: "Unique identifier of the dae instance."
        type: string
      health:
        description: "Health information for the DAE, as defined by the health resource type."
        $ref: '#/definitions/health'
      needsReplacement:
        description: "Indicates whether the DAE needs replacement. Values are:
  <ul>
  <li>true - DAE needs replacement.</li>
  <li>false - DAE does not need replacement.</li>
  </ul>"
        type: boolean
      parent:
        description: "Resource type and unique identifier of the DAE's parent enclosure."
        $ref: '#/definitions/resourceRef'
      slotNumber:
        description: "The enclosure number or position where the DAE is located on the bus."
        type: integer
      name:
        description: "DAE name."
        type: string
      manufacturer:
        description: "Manufacturer of the DAE."
        type: string
      model:
        description: "Manufacturer's model  number for the DAE."
        type: string
      emcPartNumber:
        description: "EMC part number for the DAE."
        type: string
      emcSerialNumber:
        description: "EMC serial number for the DAE."
        type: string
      vendorPartNumber:
        description: "Vendor part number for the DAE."
        type: string
      vendorSerialNumber:
        description: "Vendor serial number for the DAE."
        type: string
      enclosureType:
        description: "DAE enclosure type."
        $ref: '#/definitions/EnclosureTypeEnum'
      busId:
        description: "Identifier of the bus used by the DAE."
        type: integer
      driveTypes:
        description: "Disk type of the disks in the DAE."
        type: array
        items:
          $ref: '#/definitions/DiskTypeEnum'
      currentPower:
        description: "Current amount of power used by the DAE."
        type: integer
      avgPower:
        description: "Average amount of power used by the DAE. The system uses a one hour window of
  30-second samples to determine this value."
        type: integer
      maxPower:
        description: "Maximum amount of power used by the DAE. The system uses a one hour window of
  30-second samples to determine this value."
        type: integer
      currentTemperature:
        description: "Current temperature of the DAE."
        type: integer
      avgTemperature:
        description: "Average temperature of the DAE. The system uses a one hour window of 30-second
  samples to determine this value."
        type: integer
      maxTemperature:
        description: "Maximum temperature of the DAE. The system uses a one hour window of 30-second
  samples to determine this value."
        type: integer
      currentSpeed:
        description: "Current speed of the DAE SAS disk connection."
        type: integer
      maxSpeed:
        description: "Maximum speed of the DAE SAS disk connection. The system uses a one hour
  window of 30-second samples to determine this value."
        type: integer
      parentSystem:
        description: "Parent system of the Disk Array Enclosure (DAE)."
        $ref: '#/definitions/system'
  dataCollectionResult:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about Data Collection results in the storage system.
  <br/>
  <br/>
  Data Collection is a service feature used for gathering system logs,
  customer configurations, system statistics and runtime data from storage system.
  <br/>
  <br/>"
    properties:
      id:
        description: "Unique identifier of the dataCollectionResult instance."
        type: string
      name:
        description: "File name of the dataCollectionResult instance."
        type: string
      creationTime:
        description: "Date and time when the dataCollectionResult file was created."
        type: string
        format: date-time
      profile:
        description: "Profile of the dataCollectionResult file."
        $ref: '#/definitions/DataCollectionProfileEnum'
      size:
        description: "Size of the dataCollectionResult file."
        type: integer
  datastore:
    type: object
    x-tags:
      - ~Appendix
    description: "Represents a VMware Datastore that is discovered via vCenter or ESXi."
    properties:
      id:
        description: "Unique instance id."
        type: string
      storageResource:
        description: "storageResource that hosts the datastore."
        $ref: '#/definitions/storageResource'
      name:
        description: "Friendly name of datastore displayed on vCenter."
        type: string
      format:
        description: "Format of datastore."
        $ref: '#/definitions/DatastoreTypeEnum'
      host:
        description: "The host that owns this datastore."
        $ref: '#/definitions/host'
      sizeTotal:
        description: "Size of the datastore in bytes reported by vCenter. Could be different from size of the associated storage resource."
        type: integer
      sizeUsed:
        description: "Used size of the datastore (in bytes) as reported by vCenter. This may be different from the used size of the associated storage resource.
  For VMware VMFS datastores, this provides information about the actual hosted file system allocation size."
        type: integer
  dhsmConnection:
    type: object
    x-tags:
      - ~Appendix
    description: "When doing cloud archiving, the Cloud Tiering Applicance (a.k.a CTA) is responsible 
 for moving the local data to cloud. On the other direction, when we need to bring the 
 data back to local, DHSM server will read the data back via a pipe so called dhsm connection.
 This class represents this dhsm connection 
 @author wangt23"
    properties:
      id:
        description: "Unique instance id."
        type: string
      mode:
        description: "Mode of the connection."
        $ref: '#/definitions/DhsmConnectionModeEnum'
      readPolicy:
        description: "The read policy when Unity recall data from secondary storage.
 <ul>
  <li>full-recalls the whole file to Unity on read request before the data is returned.</li>
  <li>passthrough-retrieves data without recalling the data to Unity</li>
  <li>partial-recalls only the blocks required to satisfy the client read request.</li>
  <li>none-specifies no override</li>
  </ul>"
        $ref: '#/definitions/RecallPolicyEnum'
      secondaryUrl:
        description: "Url of the secondary storage. If secondary storage is NFS or CIFS, this URL should point to them directly. 
 If the secondary is cloud or Centera, this Url should point to CTA."
        type: string
      secondaryPort:
        description: "Port of the secondary storage server, only applicable when secondary url points to CTA."
        type: integer
      localPort:
        description: "Local port of the DHSM connections"
        type: integer
      secondaryUsername:
        description: "Defines the username the storage array uses if HTTP digest authentication is required by the secondary storage."
        type: string
      timeout:
        description: "Connection timeout when the connection is established to the secondary storage.
 If recall does not return within the timeout, the NAS server will try another DhsmConnection."
        type: integer
      filesystem:
        description: "File system on which the connection is created."
        $ref: '#/definitions/filesystem'
  dhsmServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the ASA/DHSM server of a NAS server. 
  You can configure one ASA/DHSM server per NAS server.
  <br/>
  <br/>
  ASA stands for Advanced Storage Access. ASA allows VMware administrators to manage 
  appropriately configured host configurations by taking advantage of advanced file 
  operations that optimize NFS storage utilization.
  Once ASA is enabled on the NAS server, EMC's VSI Unified Storage Management tool can be 
  utilized for the following:
  <ul>
  <li>Simplifying the process of creating NFS datastores,</li>
  <li>Compressing virtual machines in NFS datastores,</li>
  <li>Reducing the amount of storage consumed by virtual machines by using data reduction and 
  Fast Clone technologies. The cloning functions include fast clones (thin copy/snaps) of 
  Virtual Machine Disk (VMDF) files and full clones (full copy) of Virtual Machine 
  Disk (VMDF) files.</li>
  </ul>"
    properties:
      id:
        description: "Unique identifier of the dhsmServer instance"
        type: string
      nasServer:
        description: "NAS server that is configured with these DHSM settings."
        $ref: '#/definitions/nasServer'
      username:
        description: "User name for authentication to the DHSM/ASA server."
        type: string
      isHTTPSEnabled:
        description: "Require SSL (HTTPS) for DHSM requests to this DHSM server."
        type: boolean
  disk:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the drives's attributes in the storage
  system."
    properties:
      id:
        description: "Unique identifier of the drive instance."
        type: string
      health:
        description: "Health information of the drive instance as defined by the
  health resource type."
        $ref: '#/definitions/health'
      needsReplacement:
        description: "Indicates whether drive replacement is needed. Values are:
  <ul>
  <li> true - Drive replacement is needed.</li>
  <li>false - No drive replacement is needed.</li>
  </ul>"
        type: boolean
      parent:
        description: "Resource type and unique identifier for the drive's parent
  enclosure."
        $ref: '#/definitions/resourceRef'
      slotNumber:
        description: "Slot where the drive is located in the parent enclosure."
        type: integer
      estimatedEOL:
        description: "Estimated remaining life of drive, based on past use. Applies only to flash drives."
        type: string
        format: date-time
      busId:
        description: "Identifier of the bus used by the drive."
        type: integer
      name:
        description: "Drive name. Modifiable for virtual drives only."
        type: string
      manufacturer:
        description: "Drive manufacturer."
        type: string
      model:
        description: "Manufacturer model number."
        type: string
      version:
        description: "Manufacturer version number."
        type: string
      emcPartNumber:
        description: "EMC part number."
        type: string
      emcSerialNumber:
        description: "EMC serial number."
        type: string
      tierType:
        description: "Drive type."
        $ref: '#/definitions/TierTypeEnum'
      diskGroup:
        description: "Disk group is the group that the drive belongs to and as
  defined by the diskGroup resource type."
        $ref: '#/definitions/diskGroup'
      rpm:
        description: "Revolutions Per Minute (RPMs)."
        type: integer
      isSED:
        description: "Indicates whether the drive is a Self-Encrypting Drive (SED).
  <ul>
  <li> true - Drive is a SED. </li>
  <li>false - Drive is not a SED.</li>
  </ul>"
        type: boolean
      currentSpeed:
        description: "Current speed."
        type: integer
      maxSpeed:
        description: "Maximum speed."
        type: integer
      pool:
        description: "Pool that the drive belongs, as defined by the pool resource
  type."
        $ref: '#/definitions/pool'
      isInUse:
        description: "Indicates whether the drive contains user-written data.
  Values are:
  <ul>
  <li> true - Drive contains user-written data.</li>
  <li>false - Drive does not contain user-written data.</li>
  </ul>"
        type: boolean
      isFastCacheInUse:
        description: "(Applies if FAST Cache is supported on the system and the corresponding license is installed.)
  Indicates whether the drive is used by the FAST Cache. Values are:
  <ul>
  <li> true - Drive is used by the FAST Cache.</li>
  <li>false - Drive is not used by the FAST Cache.</li>
  </ul>"
        type: boolean
      size:
        description: "Usable capacity."
        type: integer
      rawSize:
        description: "Raw (unformatted) capacity."
        type: integer
      vendorSize:
        description: "Vendor capacity of the drive as written on the drive label."
        type: integer
      wwn:
        description: "World Wide Name (WWN) of the drive."
        type: string
      diskTechnology:
        description: "Drive technology."
        $ref: '#/definitions/DiskTechnologyEnum'
      parentDae:
        description: "Parent Disk Array Enclosure (DAE) of the disk as defined by the
  dae resource type."
        $ref: '#/definitions/dae'
      parentDpe:
        description: "Parent Disk Processor Enclosure (DPE) of the drive, as
  defined by the dpe resource type."
        $ref: '#/definitions/dpe'
      bank:
        description: "Bank where the drive is located in the parent enclosure."
        type: string
      bankSlotNumber:
        description: "Bank slot where the drive is located in the parent enclosure."
        type: integer
      bankSlot:
        description: "Combination of the bank and slot name where the drive is
  located in the parent enclosure."
        type: string
  diskGroup:
    type: object
    x-tags:
      - ~Appendix
    description: "Disk groups classify the drives in the system into groups
  with equivalent storage characteristics. These
  characteristics include drive type, capacity, and rotational
  speed.
  <br/>
  <br/>
  The system uses disk groups for creating pools."
    properties:
      id:
        description: "Unique identifier of the diskGroup instance."
        type: string
      name:
        description: "Disk group name."
        type: string
      emcPartNumber:
        description: "EMC part number of the drives."
        type: string
      tierType:
        description: "Drive type."
        $ref: '#/definitions/TierTypeEnum'
      diskTechnology:
        description: "Drive technology of the drives in the disk group. There are
  two hard drive technologies: SAS and NL-SAS, and flash drive
  technologies are MLC (Multi-Level Cell) and TLC
  (Triple-Level Cell). MLC drives are referred to as SAS Flash 2
  in this API and TLC are referred to as SAS Flash 3.
  <br/>
  SAS hard drives have greater performance, throughput and less
  latency than NL-SAS drives.
  <br/>"
        $ref: '#/definitions/DiskTechnologyEnum'
      isFASTCacheAllowable:
        description: "Indicates whether or not drives from this diskGroup are valid to use for FASTCache.
  Values are:
  <ul>
  <li> true - Drives may be used in FASTCache.</li>
  <li> false - Drives may not be used in FASTCache.</li>"
        type: boolean
      diskSize:
        description: "The capacity of each drive."
        type: integer
      advertisedSize:
        description: "Capacity written on the label of the drives in the disk
  group."
        type: integer
      rpm:
        description: "For non-Flash drives, the rotational speed in revolutions per minute (RPM)."
        type: integer
      speed:
        description: "Interface speed of the drives in the disk group."
        type: integer
      totalDisks:
        description: "Total number of drives in the disk group."
        type: integer
      minHotSpareCandidates:
        description: "Minimum number of hot spares required for traditional pools for the disk group.
  As a rule one Hot spare is required per 30 drives."
        type: integer
      hotSparePolicyStatus:
        description: "Status of the hot spare policy for the disk group."
        $ref: '#/definitions/HotSparePolicyStatusEnum'
      unconfiguredDisks:
        description: "The number of unconfigured drives in disk group.
 Determined by subtracting the number of drives in use by pools, FAST Cache and the number of drives reserved for pools that are in the process of being created or extended from the total number of drives.
 Hot spares are not included in the determination of this value."
        type: integer
      configuredTraditionalPoolDisks:
        description: "The number of configured drives used by traditional pools."
        type: integer
      traditionalUnconfiguredDrives:
        description: "The number of traditional unconfigured  drive in this disk group."
        type: integer
      traditionalTotalDrives:
        description: "The number of traditional total drives in this disk group."
        type: integer
      configuredFastCacheDisks:
        description: "The number of configured drives used by FAST Cache."
        type: integer
      disksPastEOL:
        description: "The number of drives past EOL (end of life)."
        type: integer
      disksWithEOLLess30Days:
        description: "The number of drives in disk group with EOL (end of life) less than 30 days."
        type: integer
      disksWithEOLLess60Days:
        description: "The number of drives in disk group with EOL (end of life) less than 60 days."
        type: integer
      disksWithEOLLess90Days:
        description: "The number of drives in disk group with EOL (end of life) less than 90 days."
        type: integer
      disksWithEOLLess180Days:
        description: "The number of drives in disk group with EOL (end of life) less than 180 days."
        type: integer
  dnsServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Domain Name System (DNS) settings.
  <p/>
  A Domain Name System (DNS) is a hierarchical system responsible for converting
  domain names to their corresponding IP addresses. The system uses DNS services
  to resolve network names and IP addresses for the network services it needs
  (for example, for NTP and SMTP servers), and to obtain IP addresses for hosts
  addressed by network names rather than IP addresses.
  <p/>
  During the initial system configuration process you must specify the network
  address of at least one DNS server for resolving hostnames to IP addresses.
  Later, you can add, delete, or change DNS server settings.
  <p/>
  You can configure multiple DNS server domains to specify each domain and IP
  address of the DNS servers for the system to use. By default, the system uses
  the top entry in the list as the current DNS server. The remaining list
  provides a hierarchy of DNS servers to use if the first-choice server becomes
  unavailable. If the first DNS server in the list becomes unavailable, the
  system proceeds to the next DNS server in the list, and so on. You can also
  specify default DNS server addresses to indicate which addresses the system
  will use first.
  <p/>
  DNS server addresses are grouped under DNS server domains. Each domain is
  identified by a domain identifier.
  <p/>
  <b>Important:</b> You must configure at least one valid DNS server entry in
  the domain for the system. Deleting the last DNS server entry can disrupt
  network communication to the device, and potentially interrupt
  communication between the system and the hosts that use its storage resources."
    properties:
      id:
        description: "Unique identifier of the dnsServer instance.
  This is a singleton resource, so the id is always 0."
        type: string
      domain:
        description: "Name of the DNS domain."
        type: string
      addresses:
        description: "Prioritized list of up to three IP addresses of name servers for the domain."
        type: array
        items:
          type: string
      origin:
        description: "Source of the DNS server addresses."
        $ref: '#/definitions/DNSServerOriginEnum'
  dpe:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about Disk Processor Enclosures (DPEs) in the storage system."
    properties:
      id:
        description: "Unique identifier of the dpe instance."
        type: string
      health:
        description: "Health information for the DPE, as defined by the health resource type."
        $ref: '#/definitions/health'
      needsReplacement:
        description: "Indicates whether the DPE needs replacement. Values are:
  <ul>
  <li>true - DPE needs replacement.</li>
  <li>false - DPE does not need replacement.</li>
  </ul>"
        type: boolean
      parent:
        description: "Resource type and unique identifier of the DPE's parent enclosure."
        $ref: '#/definitions/resourceRef'
      slotNumber:
        description: "The enclosure number or position where the DPE is located on the bus."
        type: integer
      name:
        description: "DPE name."
        type: string
      manufacturer:
        description: "Manufacturer of the DPE."
        type: string
      model:
        description: "Manufacturer's model number for the DPE."
        type: string
      emcPartNumber:
        description: "EMC part number for the DPE."
        type: string
      emcSerialNumber:
        description: "EMC serial number for the DPE."
        type: string
      vendorPartNumber:
        description: "Vendor part number for the DPE."
        type: string
      vendorSerialNumber:
        description: "Vendor serial number for the DPE."
        type: string
      enclosureType:
        description: "DPE enclosure type."
        $ref: '#/definitions/EnclosureTypeEnum'
      busId:
        description: "Identifier of the SAS bus used by the DPE."
        type: integer
      driveTypes:
        description: "Disk type of the disks in the DPE."
        type: array
        items:
          $ref: '#/definitions/DiskTypeEnum'
      currentPower:
        description: "Current amount of power used by the DPE."
        type: integer
      avgPower:
        description: "Average amount of power used by the DPE. The system uses a one hour window of
  30-second samples to determine this value."
        type: integer
      maxPower:
        description: "Maximum amout of power used by the DPE. The system uses a one hour window of
  30-second samples to determine this value."
        type: integer
      currentTemperature:
        description: "Current temperature of the DPE."
        type: integer
      avgTemperature:
        description: "Average temperature of the DPE. The system uses a one hour window of 30-second
  samples to determine this value."
        type: integer
      maxTemperature:
        description: "Maximum temperature of the DPE. The system uses a one hour window of 30-second
  samples to determine this value."
        type: integer
      currentSpeed:
        description: "Current speed of the DPE SAS disk connection."
        type: integer
      maxSpeed:
        description: "Maximum speed of the DPE SAS disk connection. The system uses a one hour
  window of 30-second samples to determine this value."
        type: integer
      parentSystem:
        description: "Parent system of the Disk Processor Enclosure (DPE)."
        $ref: '#/definitions/system'
  encryption:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the data encryption of the storage system."
    properties:
      id:
        description: "Unique identifier of the encryption instance."
        type: string
      encryptionMode:
        description: "Encryption mode of the array. At present only Controller Based Encryption (CBE) mode is supported."
        $ref: '#/definitions/EncryptionModeEnum'
      encryptionStatus:
        description: "Encryption status."
        $ref: '#/definitions/EncryptionStatusEnum'
      encryptionPercentage:
        description: "Percentage of storage (in-place data) encrypted on the array.  The percentage value will range
  from 0.00 to 100.  Once the encryption is activated on the array, encryption percentage will not dip
  as the new data is written because the new data will be encrypted on the fly."
        type: number
        format: float
      keyManagerBackupKeyStatus:
        description: "Key store back up status."
        $ref: '#/definitions/KeyManagerBackupKeysStatusEnum'
      kmipStatus:
        description: "Key Management Interoperability Protocol (KMIP) compliant
 external key management feature status.
 Once enabled, this feature enables the storage system to interact with 
 external key management servers that are KMIP compliant for key
 management associated with Data at Rest Encryption."
        $ref: '#/definitions/KmipStatusEnum'
  esrsParam:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the EMC Remote Support (ESRS) configuration<br/>
  <br/>
  Unity Remote Support is enabled with the EMC&#8217;s leading remote 
  support platform: EMC Secure Remote Support (ESRS). ESRS is a remote 
  monitoring and support 
  feature that provides authorized personnel with EMC remote access capabilities 
  to storage systems via a secure and encrypted tunnel. The secure 
  tunnel that ESRS establishes between the storage system and 
  systems on the EMC network can be used to transfer files out 
  to the storage system or back to EMC.<br/>
  <br/>
  ESRS provides the following features in providing an end-to-end 
  remote support solution:<br/>
  <br/>
  <ul>
  <li>Automation - IP based connection enables fast remote diagnosis 
  and repair of potential problems before an impact to business 
  operations is noticed.</li>
  <li>Authentication - Advanced security features such as AES 256-bit 
  encryption and RSA digital certificates ensure data privacy.</li>
  <li>Authorization - Customizable policies that you control include 
  the ability to allow or deny remote support sessions.</li>
  <li>Audit - Detailed audit capabilities enable compliance with regulatory 
  and internal business requirements.</li>
  </ul>
  <br/>
  ESRS offers two remote support solutions:<br/>
  <ul>
  <li>Integrated solution, which uses ESRS Virtual Edition (ESRS V3) technology integrated 
  into the storage system to connect with EMC</li>
  <li>Centralized solution, which uses the ESRS Virtual Edition 
  (ESRS V3) to connect with EMC</li>
  </ul>
  <br/>
  Setting up Remote Support requires:
  <br/>
  <ul>
  <li>An installed EMC Support license</li>
  <li>Valid support credentials</li>
  <li>A configured DNS server</li>
  </ul>
  <br/>
  For information about ESRS components and setup, go to the 
  support website.<br/>
  Note that all proxy configuration for integrated support is now available from the supportProxy 
  object. These properties proxyIsEnabled,proxyStatus,proxyAddress,proxyIsHTTP,proxyUserName
   are deprecated and will be removed in a future release.

 <br/>
 <br/>
  <b>Examples</b>
  <br/>
  <br/>
  <html>
  <head>
  <style>
  div.examplebox
  {
    background-color: #eff5fa; 
    width: 600px; 
    padding: 5px; 
    border: 2px solid black;
  }
  </style>
  </head>
  <body>
  <br/>
  <b>Series operations need to perform to enable Integrated Remote Support</b><br/>
  <br/>
  Step 1: Accept EULA. The EULA must be accepted before any other configurations.
  <div class='examplebox'>
  <p>
  POST /api/instances/esrsParam/0/action/modify <br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;isEsrsVeEulaAccepted&quot; : &quot;true&quot;<br/>
  }<br/>
  </p>
  </div>
  <br/>
  <br/>
  Step 2: Update contact infomation in systemInformation object. EMC will use this information to contact end user when errors detected.
  <div class='examplebox'>
  <p>
  POST /api/instances/systemInformation/0/action/modify <br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactFirstName&quot; : &quot;Jill&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactLastName&quot; : &quot;Valentine&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactCompany&quot; : &quot;Umbrella Corporation&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactEmail&quot; : &quot;jill.valentine&#64;umbrella.com&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;contactPhone&quot; : &quot;111-111-1111&quot;<br/>
  }<br/>
  </p>
  </div>
  <br/>
  <br/>
  Step 3: Set proxy server if the user wants to configure Integrated Remote Support with a proxy server. This step can be skipped if user doesn't want to use proxy server. 
  <div class='examplebox'>
  <p>
  POST /api/instances/supportProxy/0/action/modify <br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;isEnabled&quot; : &quot;true&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;address&quot; : &quot;10.105.221.123:1080&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;protocol&quot; : &quot;1&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;username&quot; : &quot;darthv&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;password&quot; : &quot;password&quot;<br/>
  }<br/>
  </p>
  </div>
  <br/>
  <br/>
  Step 4: Validate Network connectivity between Integrated Remote Support client and EMC servers.
  <div class='examplebox'>
  <p>
  POST /api/instances/esrsParam/0/action/checkNetwork <br/>
  { <br/>
  }<br/>
  </p>
  </div>
  <br/>
  <br/>
  Following steps are try to get the available sites for the current system, select the correct one and set it into Integrated Remote Support client.<br/>
  Step 5: Request for an access code. This access code will be used later to get the available sites.
  <div class='examplebox'>
  <p>
  POST /api/instances/esrsParam/0/action/requestAccessCode <br/>
  { <br/>
  }<br/>
  </p>
  </div>
  <br/>
  <br/>
  Step 6: Validate the access code.
  <div class='examplebox'>
  <p>
  POST /api/instances/esrsParam/0/action/validateAccessCode <br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;accessCode&quot; : &quot;243857&quot;<br/>
  }<br/>
  </p>
  </div>
  <br/>
  <br/>
  Step 7: Set siteId. Select the correct site id from the returned sites in previous request.
  <div class='examplebox'>
  <p>
  POST /api/instances/esrsParam/0/action/modify <br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;false&quot;<br/>
  }<br/>
  </p>
  </div>
  <br/>
  <br/>
  Now, Integration Remote Support is enabled.
  <br/>
  <br/>
  <b>Disabling Integrated Remote Support</b><br/>
  <br/>
  If a proxy server or Policy Manager are enabled, they will 
  automatically be disabled.<br/>
  <br/>
  <div class='examplebox'>
  <p>
  POST /api/instances/esrsParam/0/action/modify <br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;false&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;false&quot;<br/>
  }<br/>
  </p>
  </div>
  <br/>
  <br/>
  <b>Checking the Integrated Remote Support status</b><br/>
  <br/>
  <div class='examplebox'>
  <p>
  GET /api/types/esrsParam/instances?fields=enabled,isCentralized <br/>
  <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;content&quot;:<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;{<br/>
           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;false&quot;,<br/>
           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;status&quot; : 2<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;}<br/>
  <br/>
  </p>
  </div>
  <br/>
  <br/>
  <b>Checking the Integrated Remote Support configuration</b><br/>
  <br/>
  <div class='examplebox'>
  <p>
  GET /api/types/esrsParam/instances?fields=enabled,isCentralized,status,
  statusDescription::&#64;enum(status)<br/>
  <br/>
  Sample response:<br/>
  <br/>
  &quot;content&quot;:<br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;false&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;status&quot; : &quot;2&quot;<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;statusDescription&quot; : &quot;connected&quot;<br/>
  }<br/>
  <br/>
  The statusDescription attribute is a calculated attribute that translates the 
  normalized status value into a user friendly string.<br/>
  </p>
  </div>
  <br/>
  <br/>
  <b>Enabling Centralized Remote Support</b><br/>
  <br/>
  <div class='examplebox'>
  <p>
  POST /api/instances/esrsParam/0/action/modify <br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;true&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;esrsVeAddress&quot; : &quot;10.105.221.123&quot;<br/>
  }<br/>
  </p>
  </div>
  <br/>
  <br/>
  <b>Modifying the Centralized Remote Support appliance</b><br/>
  <br>
  This example disconnects the storage system from the current ESRS VE appliance and
  reconnects it to a new one.<br/>
  <br/>
  <div class='examplebox'>
  <p>
  POST /api/instances/esrsParam/0/action/modify <br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;true&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;esrsVeAddress&quot; : &quot;myveserver.acme.com:2135&quot;<br/>
  }<br/>
  </p>
  </div>
  <br/>
  <br/>
  <b>Disabling Centralized Remote Support</b><br/>
  <br/>
  <div class='examplebox'>
  <p>
  POST /api/instances/esrsParam/0/action/modify <br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;false&quot;<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;true&quot;,<br/>
  }<br/>
  </p>
  </div>
  </body>
  </html>
  <br/>
  <br/>
      *  <br/>
  <br/>
  <b>Switching between Integrated and Centralized Remote Support</b><br/>
  <br/>
  This example assumes that Integrated Remote Support is enabled. It will 
  be disabled before the Centralized Remote Support is enabled.<br/>
  <br/>
  <div class='examplebox'>
  <p>
  POST /api/instances/esrsParam/0/action/modify <br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;enabled&quot; : &quot;true&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;isCentralized&quot; : &quot;true&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;esrsVeAddress&quot; : &quot;10.105.221.123&quot;<br/>
  }<br/>
  </p>
  </div>"
    properties:
      id:
        description: "Unique identifier of the Remote Support instance.<br/>
  <br/>
  
  --eng
  This value is always 0, 
  because at any given time there can only one remote support 
  solution enabled."
        type: string
      enabled:
        description: "Indicates whether Remote Support is enabled<br/>
  <br/>
  Values are:<br/>
  <ul>
  <li>true - Remote Support is enabled.</li>
  <li>false - Remote Support is disabled.</li>
  </ul>
  <br/>
  See <i>isCentralized</i> to view 
  the type of Remote Support."
        type: boolean
      isCentralized:
        description: "Indicates the type of Remote Support that is configured<br/>
  <br/>
  Values are:<br/>
  <ul>
  <li>true - Centralized Remote Support is configured</li>
  <li>false - Integrated Remote Support is configured</li>
  </ul>
  <br/>
  This attribute is not valid if <i>enabled</i> is <i>false</i>."
        type: boolean
      status:
        description: "Remote Support status"
        $ref: '#/definitions/EsrsStatusEnum'
      esrsVeAddress:
        description: "Centralized Remote Support ESRS VE appliance."
        type: string
      secondaryEsrsVeAddress:
        description: "Secondary Centralized Remote Support ESRS VE appliance."
        type: string
      siteId:
        description: "EMC id of site where the system is located."
        type: string
      esrsConfigStatus:
        description: "ESRS Configuration status<br/>"
        $ref: '#/definitions/EsrsConfigStatusEnum'
      isEsrsVeEulaAccepted:
        description: "Indicates whether the ESRS VE End User License Agreement (EULA) has been accepted.<br/>
  <br/>
  Values are:<br/>
  <ul>
  <li>true - The ESRS VE EULA has been accepted.</li>
  <li>false - The ESRS VE EULA has not been accepted.</li>
  </ul>"
        type: boolean
      serviceLevel:
        description: "ESRS configuration level<br/>"
        $ref: '#/definitions/EsrsLevelEnum'
  esrsPolicyManager:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the EMC Remote Support (ESRS) policy manager configuration<br/>
  <br/>
  The storage system Remote Support is enabled with the EMC&#8217;s leading remote 
  support platform: EMC Secure Remote Support (ESRS). ESRS is a remote 
  monitoring and support 
  feature that provides authorized EMC remote access capabilities 
  to the storage systems via a secure and encrypted tunnel. The secure 
  tunnel that ESRS establishes between the storage system and 
  systems on the EMC network can be used to transfer files out 
  to the storage system or back to EMC.<br/>
  <br/>
  ESRS policy manager is run on a dedicated server which allows customers
   to control remote sessions and define customized ESRS policy.
  
 <br/>
  <b>Examples</b>
  <br/>
  <br/>
  <html>
  <head>
  <style>
  div.examplebox
  {
    background-color: #eff5fa;
    width: 600px;
    padding: 5px;
    border: 2px solid black;
  }
  </style>
  </head>
  <body>
  <br/>
  <br/>
  <b>Checking the ESRS policy manager setting</b><br/>
  <br/>
  <div class='examplebox'>
  <p>
  GET /api/types/esrsPolicyManager/instances?fields=id,isEnabled,address,useHTTPS,sslStrength,proxyIsEnabled,proxyAddress,proxyUseSocks,proxyUserName<br/>
  <br/>
  Sample response:<br/>
  <br/>
  &quot;content&quot;:<br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;isEnabled&quot; : &quot;true&quot;<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;address&quot; : &quot;10.244.237.79:9443&quot;<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;useHTTPS&quot; : &quot;true&quot;<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;sslStrength&quot; : &quot;2&quot;<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;proxyIsEnabled&quot; : &quot;false&quot;<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;proxyUseSocks&quot; : &quot;true&quot;<br/>
  }<br/>
  <br/>
  </p>
  </div>
  <br/>
  <br/>
  <b>Configuring ESRS VE with a Policy Manager</b><br/>
  <br/>
  This example uses the default port and default protocol (socks, secure)<br/>
  <br/>
  <div class='examplebox'>
  <p>
  POST /api/instances/esrsPolicyManager/0/action/modify <br/>
  { <br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;isEnabled&quot; : &quot;true&quot;,<br/>
      &nbsp;&nbsp;&nbsp;&nbsp;&quot;address&quot; : &quot;10.105.221.123&quot;,<br/>
  }<br/>
  </p>
  </div>
  <br/>
  <br/>
  </p>
  </div>
  </body>
  </html>"
    properties:
      id:
        description: "Unique identifier of the ESRS Policy Manager.<br/>
  <br/>
  
  --eng
  This value is always 0, 
  because at any given time there can only one remote support 
  solution enabled."
        type: string
      isEnabled:
        description: "Indicates whether Integrated Remote Support is configured
  to use a Policy Manager<br/>
  <br/>
  The Policy Manager is installed on customer-supplied server or servers. It
  enables customizable control of remote access to customer devices and maintains
  an audit log of remote connections.<br/>
  <br/>
  Values are:<br/>
  <ul>
  <li>true - Policy Manager is configured</li>
  <li>false - Policy Manager is not configured</li>
  </ul>"
        type: boolean
      address:
        description: "Address and port of Remote Support Policy Manager.<br/>"
        type: string
      useHTTPS:
        description: "Protocol used for communications with the 
  Integrated Remote Support Policy Manager<br/>
  <br/>
  Values are:<br/>
  <ul>
  <li>true - Protocol is https (default, secure)</li>
  <li>false - Protocol is http</li>
  </ul>"
        type: boolean
      sslStrength:
        description: "When useHTTPS is true, the policy manager SSL strength.<br/>"
        $ref: '#/definitions/SSLStrengthEnum'
      proxyIsEnabled:
        description: "Indicates whether the Integrated Remote Support Policy Manager 
  is using a proxy server to access the Internet<br/>
  <br/>
  Values are:<br/>
  <ul>
  <li>true - Policy Manager uses a proxy server</li>
  <li>false - Policy Manager does not use a proxy server</li>
  </ul>
  <br/>
  <br/>
  This attribute is only valid if <i>isEnabled</i> is <i>true</i>."
        type: boolean
      proxyAddress:
        description: "Integrated Remote Support Policy Manager proxy Server.<br/>
  <br/>
  If a port is not specified the following default ports 
  will be used:
  <ul>
  <li>Protocol = http, Default port = 3128</li>
  <li>Protocol = socks, Default port = 1080</li>
  </ul>"
        type: string
      proxyUseSocks:
        description: "Protocol used for communications with the Integrated
  Remote Support Policy Manager proxy Server<br/>
  <br/>
  Values are:
  <ul>
  <li>true - Protocol is socks (default, secure)</li>
  <li>false - Protocol is http</li>
  </ul>"
        type: boolean
      proxyUserName:
        description: "User account with permission to access the Integrated
  Remote Support Policy Manager proxy server.<br/>"
        type: string
  ethernetPort:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about Ethernet ports in the storage system."
    properties:
      id:
        description: "Unique identifier of the Ethernet port instance."
        type: string
      health:
        description: "Health information for the Ethernet port, as defined by the health resource type."
        $ref: '#/definitions/health'
      storageProcessor:
        description: "SP on which the Ethernet port directly or indirectly resides, as defined by the storageProcessor resource type."
        $ref: '#/definitions/storageProcessor'
      needsReplacement:
        description: "Indicates whether the Ethernet port needs replacement. Values are:
  <ul>
  <li>true - Ethernet port needs replacement.</li>
  <li>false - Ethernet port does not need replacement.</li>
  </ul>"
        type: boolean
      name:
        description: "User-specified Ethernet port name."
        type: string
      portNumber:
        description: "Physical Ethernet port sequence number."
        type: integer
      speed:
        description: "Current link speed of the Ethernet port."
        $ref: '#/definitions/EPSpeedValuesEnum'
      mtu:
        description: "Maximum Transmission Unit (MTU) packet size that the Ethernet port can transmit. The default is 1500 bytes per packet."
        type: integer
      minMtu:
        description: "Lower limit for Maximum Transmisson Unit (MTU) packet size that can be setup on the Ethernet port. The default is 1280 bytes per packet."
        type: integer
      maxMtu:
        description: "Upper limit for Maximum Transmisson Unit (MTU) packet size that can be setup on the Ethernet port. The default is 9216 bytes per packet."
        type: integer
      connectorType:
        description: "Physical connector type."
        $ref: '#/definitions/ConnectorTypeEnum'
      bond:
        description: "Indicates whether the Ethernet port is used in a link aggregation. Values are:
  <ul>
  <li>true - Ethernet port is used in a link aggregation.</li>
  <li>false - Ethernet port is not used in a link aggregation.</li>
  </ul>"
        type: boolean
      isLinkUp:
        description: "Indicates whether the Ethernet port has link.
  (Applies if the Ethernet port is configured with a link.) Indicates whether the Ethernet port's link is up. Values are:
  <ul>
  <li>true - Link is up.</li>
  <li>false - Link is down.</li>
  <ul>"
        type: boolean
      macAddress:
        description: "MAC address of the Ethernet port."
        type: string
      isRSSCapable:
        description: "Indicates whether the Ethernet port supports Receive Side Scaling (RSS).
  Values are:
  <ul>
  <li>true - Ethernet port supports RSS.</li>
  <li>false - Ethernet port does not support RSS.</li>
  </ul>"
        type: boolean
      isRDMACapable:
        description: "Indicates whether the Ethernet port supports Remote Direct Memory Access
  (RDMA). Values are:
  <ul>
  <li>true - Ethernet port supports RDMA.</li>
  <li>false - Ethernet port does not support RDMA.</li>
  </ul>"
        type: boolean
      requestedSpeed:
        description: "Link speed requested by the user."
        $ref: '#/definitions/EPSpeedValuesEnum'
      parentIOModule:
        description: "(Applies if the Ethernet port resides on an I/O module.) Parent I/O module of the Ethernet port, as defined by the ioModule resource type."
        $ref: '#/definitions/ioModule'
      parentStorageProcessor:
        description: "(Applies if the Ethernet port resides directly on an SP.) Parent SP of the Ethernet port, as defined by the storageProcessor resource type."
        $ref: '#/definitions/storageProcessor'
      supportedSpeeds:
        description: "Available speed values."
        type: array
        items:
          $ref: '#/definitions/EPSpeedValuesEnum'
      requestedMtu:
        description: "MTU size requested by the user."
        type: integer
      parent:
        description: "Resource type and identifier of the Ethernet port's parent enclosure, as defined by the resourceRef resource type."
        $ref: '#/definitions/resourceRef'
      sfpSupportedSpeeds:
        description: "SFP (the small form-factor pluggable) supported speeds of the Ethernet port."
        type: array
        items:
          $ref: '#/definitions/SFPSpeedValuesEnum'
      sfpSupportedProtocols:
        description: "SFP (the small form-factor pluggable) supported protocols of the Ethernet port."
        type: array
        items:
          $ref: '#/definitions/SFPProtocolValuesEnum'
  event:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the events reported by the storage system.
  <br/>
  <br/>
  The system monitors and reports on a variety of system events. It collects the
  events and writes them to the user log, which contains a record for each event.
  <br/>
  <br/>
  The health and alert providers promote some events to be alerts, which are
  usually events that require attention from the system administrator.  For
  information about alerts, see the Help topic for the alert resource type.
  <br/>
  <br/>
  <b>In the username attribute, is the value N/A or blank if a user did not
  cause the event or the account is unavailable?</b>"
    properties:
      id:
        description: "Unique identifier of the event instance."
        type: string
      node:
        description: "Storage Processor that generated the event."
        $ref: '#/definitions/NodeEnum'
      creationTime:
        description: "<ol>
  <li>Date and time when the event was created.</li>
  </ol>"
        type: string
        format: date-time
      severity:
        description: "Severity of the event."
        $ref: '#/definitions/SeverityEnum'
      messageId:
        description: "Identifier of the message, without arguments or localization."
        type: string
      arguments:
        description: "Arguments in the event message."
        type: array
        items:
          type: string
      message:
        description: "Localized description of the event's cause or effects."
        type: string
      username:
        description: "If a user caused the event, and the user account still exists, the user associated with the event."
        type: string
      category:
        description: "Event category."
        $ref: '#/definitions/EventCategoryEnum'
      source:
        description: "System component that caused the event. This information is intended for
  service personnel."
        type: string
  fan:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies to physical deployments only.) Information about the fans in the storage system."
    properties:
      id:
        description: "Unique identifier of the fan instance."
        type: string
      health:
        description: "Health information for the fan, as defined by the health resource type."
        $ref: '#/definitions/health'
      parent:
        description: "Resource type and identifier of the fan's parent enclosure."
        $ref: '#/definitions/resourceRef'
      slotNumber:
        description: "Slot where the fan is located in the parent enclosure."
        type: integer
      name:
        description: "Fan name."
        type: string
      emcPartNumber:
        description: "EMC part number for the fan."
        type: string
      emcSerialNumber:
        description: "EMC serial number for the fan."
        type: string
      manufacturer:
        description: "Manufacturer of the fan."
        type: string
      model:
        description: "Manufacturer's model number for the fan."
        type: string
      vendorPartNumber:
        description: "Vendor part number for the fan."
        type: string
      vendorSerialNumber:
        description: "Vendor serial number for the fan."
        type: string
      needsReplacement:
        description: "Indicates whether the fan needs replacement. Values are:
  <ul>
  <li>true - Fan needs replacement.</li>
  <li>false - Fan does not need replacement.</li>
  </ul>"
        type: boolean
      parentDpe:
        description: "Parent Disk Processor Enclosure (DPE) of the fan."
        $ref: '#/definitions/dpe'
      parentDae:
        description: "Parent Disk Array Enclosure (DAE) of the fan."
        $ref: '#/definitions/dae'
  fastCache:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about FAST Cache in the storage system.  FAST
  Cache uses Flash drives to cache data in storage system to
  accelerate access to data. (Applies if FAST Cache is
  supported on the system and the corresponding license is
  installed.)"
    properties:
      id:
        description: "Unique identifier of the FAST Cache instance."
        type: string
      health:
        description: "Health information for the FAST Cache, as defined by the
  health resource type."
        $ref: '#/definitions/health'
      sizeTotal:
        description: "FAST Cache total size."
        type: integer
      sizeFree:
        description: "Size of logical cache available."
        type: integer
      numberOfDisks:
        description: "Total number of drives in FAST Cache."
        type: integer
      raidLevel:
        description: "RAID type of the internal RAID Groups in FAST Cache."
        $ref: '#/definitions/RaidTypeEnum'
      raidGroups:
        description: "List of all FAST Cache RAID Groups."
        type: array
        items:
          $ref: '#/definitions/raidGroupCache'
  fastVP:
    type: object
    x-tags:
      - ~Appendix
    description: "System FAST VP settings. 
 
 FAST VP allows performing automatic data relocation between tiers and rebalancing within a tier to improve storage performance. 
 Currently there three types of relocations supported:
 <br/>
 <li>Scheduled relocations</li>
 <li>Manual relocations</li>
 <li>Rebalancing</li>
 <br/>
 Scheduled relocations are started according the schedule defined in this resource. Individual pools can be included to
 or excluded from the scheduled relocation process.
 <br/>
 Manual relocations can be performed on demand for each particular pool. 
 <br/>
 Rebalancing is performed automatically on a pool extend event.
 <br/>
 The FAST VP object represents the status of scheduled relocation processes and allows to view or modify the scheduled relocation parameters. 
 It also provides a means to pause or resume all the FAST VP relocation and rebalancing processes currently running on the system."
    properties:
      id:
        description: "Unique instance id."
        type: string
      status:
        description: "FAST VP status. The possible values are 'Active' or 'Paused'."
        $ref: '#/definitions/FastVPStatusEnum'
      relocationRate:
        description: "Relocation Rate to perform scheduled relocations."
        $ref: '#/definitions/FastVPRelocationRateEnum'
      isScheduleEnabled:
        description: "Indicates whether FAST VP scheduled relocations are enabled."
        type: boolean
      scheduleDays:
        description: "Days of week to run scheduled relocations."
        type: array
        items:
          $ref: '#/definitions/DayOfWeekEnum'
      scheduleStartTime:
        description: "Time of day to start scheduled relocation."
        type: string
        format: date-time
      scheduleEndTime:
        description: "Time of day at which scheduled relocation should end."
        type: string
        format: date-time
      sizeMovingDown:
        description: "Current estimate of the amount of data that the next scheduled relocation will move to a lower tier."
        type: integer
      sizeMovingUp:
        description: "Current estimate of the amount of data that the next scheduled relocation will move to a higher tier."
        type: integer
      sizeMovingWithin:
        description: "Current estimate of the amount of data that the next scheduled relocation will rebalance within a tier."
        type: integer
      relocationDurationEstimate:
        description: "Based on current amounts of data to move, this is the current estimate of how long a scheduled relocation would take."
        type: string
        format: date-time
  fcPort:
    type: object
    x-tags:
      - ~Appendix
    description: "Fibre Channel (FC) front end port settings. Applies if the FC protocol is supported on the system and the corresponding license is installed."
    properties:
      id:
        description: "Unique identifier of the fcPort instance."
        type: string
      health:
        description: "Health information for the FC port, as defined by the health resource type."
        $ref: '#/definitions/health'
      parent:
        description: "Resource type and unique identifier of the FC port's enclosure, as defined by the resourceRef resource type."
        $ref: '#/definitions/resourceRef'
      slotNumber:
        description: "Physical location of the FC port."
        type: integer
      wwn:
        description: "World Wide Name (WWN) of the FC port."
        type: string
      availableSpeeds:
        description: "Available data transmission speed values for the FC port."
        type: array
        items:
          $ref: '#/definitions/FcSpeedEnum'
      currentSpeed:
        description: "Current data transmission speed of the FC port."
        $ref: '#/definitions/FcSpeedEnum'
      requestedSpeed:
        description: "Data transmission speed requested by the user."
        $ref: '#/definitions/FcSpeedEnum'
      sfpSupportedSpeeds:
        description: "SFP (the small form-factor pluggable) supported speeds of the FC port."
        type: array
        items:
          $ref: '#/definitions/SFPSpeedValuesEnum'
      sfpSupportedProtocols:
        description: "SFP (the small form-factor pluggable) supported protocols of the FC port."
        type: array
        items:
          $ref: '#/definitions/SFPProtocolValuesEnum'
      connectorType:
        description: "Physical connector type."
        $ref: '#/definitions/ConnectorTypeEnum'
      storageProcessor:
        description: "SP on which the FC port directly or indirectly resides, as defined by the storageProcessor resource type."
        $ref: '#/definitions/storageProcessor'
      needsReplacement:
        description: "Indicates whether the FC port needs replacement. Values are:
  <ul>
  <li>true - FC port needs replacement.</li>
  <li>false - FC port does not need replacement.</li>
  </ul>"
        type: boolean
      nPortId:
        description: "Port on the node host or storage device used with FC point-to-point or FC switched fabric topologies."
        type: integer
      name:
        description: "FC port name."
        type: string
      parentIOModule:
        description: "(Applies if the FC port resides on an I/O module.) Parent I/O module of the FC port, as defined by the ioModule resource type."
        $ref: '#/definitions/ioModule'
      parentStorageProcessor:
        description: "(Applies if the FC port resides directly on an SP.) Parent SP of the FC port, as defined by the storageProcessor resource type."
        $ref: '#/definitions/storageProcessor'
      portRepCapabilities:
        description: "FC port replication capability."
        type: array
        items:
          $ref: '#/definitions/PortRepCapabilityEnum'
      sfpSupportedMode:
        description: "SFP (the small form-factor pluggable) supported mode of the FC port."
        $ref: '#/definitions/SFPSupportedModeEnum'
  feature:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about features on the storage system."
    properties:
      id:
        description: "Unique identifier of the feature instance."
        type: string
      name:
        description: "Feature name."
        type: string
      state:
        description: "State of the feature."
        $ref: '#/definitions/FeatureStateEnum'
      reason:
        description: "Reason for the feature to be in a state other than enabled. If state is enabled, reason is not applicable."
        $ref: '#/definitions/FeatureReasonEnum'
      license:
        description: "License that enables the feature, as defined by the license resource type.
  An empty value indicates that the feature is not license-based."
        $ref: '#/definitions/license'
  fileDNSServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Domain Name System (DNS) settings object of NAS server.
  You can configure one DNS settings object per NAS server.
  <br/>
  A Domain Name System (DNS) is a hierarchical system responsible for converting
  domain names to their corresponding IP addresses. NAS server's DNS settings should allow 
  DNS resolution of all names within SMB server's domain in order for SMB protocol 
  to operate normally within an Active Directory domain.</p>"
    properties:
      id:
        description: "Unique identifier of the DNS object."
        type: string
      nasServer:
        description: "Associated NAS server instance that uses this DNS object.
  Only one DNS object per NAS server is supported."
        $ref: '#/definitions/nasServer'
      addresses:
        description: "Prioritized list of one to three IPv4 and/or IPv6 addresses of DNS server(s) for the domain."
        type: array
        items:
          type: string
      domain:
        description: "Mandatory name of the DNS domain, where NAS Server does host names lookup when
  FQDN is not specified in the request."
        type: string
      replicationPolicy:
        description: "Replication policy of the DNS object."
        $ref: '#/definitions/ReplicationPolicyEnum'
      sourceParameters:
        description: "The DNS parameters of the source NAS server."
        $ref: '#/definitions/fileDNSServerSourceParameters'
  fileEventsPool:
    type: object
    x-tags:
      - ~Appendix
    description: "File Event Service pool is a pool of remote File Event Service servers (machines that run VEE and are capable to handle
  event notificatons from the NAS Server). NAS Server can have one or several (up to three) File Event Service pools.
  The File Event Service  pool servers are responsible for: 
  - maintaining a topology and state mapping of all consumer applications
  - delivering event type and associated event metadata through the publishing agent API"
    properties:
      id:
        description: "Unique identifier of the File Event Service Pool instance."
        type: string
      eventsPublisher:
        description: "Associated File Event Service identifier."
        $ref: '#/definitions/fileEventsPublisher'
      name:
        description: "Name assigned to the set of Windows servers where File Event Service  software is installed."
        type: string
      servers:
        description: "Addresses of the File Event Service servers."
        type: array
        items:
          type: string
      sourceServers:
        description: "For replication destination NAS servers, the list of File Event Service servers from the corresponding source NAS server."
        type: array
        items:
          type: string
      preEvents:
        description: "The list of pre-events. The NAS server sends request event notification to CEPA server before 
  such event occurs and processes the response."
        type: array
        items:
          $ref: '#/definitions/FileEventTypesEnum'
      postEvents:
        description: "The list of post-evenets. The NAS server sends notification after such event occrus."
        type: array
        items:
          $ref: '#/definitions/FileEventTypesEnum'
      postErrorEvents:
        description: "The list of post-error events. The NAS server sends notification if such event generates an error."
        type: array
        items:
          $ref: '#/definitions/FileEventTypesEnum'
      replicationPolicy:
        description: "Replication policy of the Events Pool."
        $ref: '#/definitions/ReplicationPolicyEnum'
  fileEventsPublisher:
    type: object
    x-tags:
      - ~Appendix
    description: "File Event Service is a mechanism whereby applications can register to receive event notification and
  context from sources such as VNX(e). File Event Service is a part of VNX Event Enabler Framework (VEE).
  VEE provides the working environment for the CAVA and CEPA (Common Event Publishing Agent) facilities.
  The event publishing agent delivers to the application both event notification and associated context
  in one message. Context may consist of file metadata or directory metadata needed to decide business policy.
  The CEPA sub-facilities include:
  - Auditing.A mechanism for delivering post-events to registered consumer
  applications in a synchronous manner. Events are delivered individually in real-time.
  - CQM.A mechanism for delivering pre-events to registered consumer applications in
  a synchronous manner. Events are delivered individually in real-time, allowing the
  consumer application to exercise business policy on the event.
  - VCAPS.A mechanism for delivering post-events in asynchronous mode. The delivery
  cadence is based on a time period or a number of events.
  - MessageExchange.A mechanism for delivering post-events in asynchronous mode,
  when needed, without consumer use of the CEPA API. Events are published from
  CEPA to the RabbitMQ CEE_Events exchange. A consumer application creates a queue
  for itself in the exchange from which it can retrieve events."
    properties:
      id:
        description: "Unique identifier of the File Event Service instance."
        type: string
      nasServer:
        description: "Associated NAS server identifier."
        $ref: '#/definitions/nasServer'
      isEnabled:
        description: "State of File Event Servce is currently enabled."
        type: boolean
      health:
        description: "Health information for the File Event Service, as defined by the health resource type."
        $ref: '#/definitions/health'
      heartbeat:
        description: "Time interval to scan each CEPA server (in seconds) for online/offline status."
        type: string
        format: date-time
      timeout:
        description: "Timeout in ms while attempting to send event to a CEPA server to determine that is offline."
        type: string
        format: date-time
      postEventPolicy:
        description: "The fault tolerance policy for handling post-events."
        $ref: '#/definitions/FileEventsPublisherFTLevelTypeEnum'
      denyAccessWhenAllServersOffline:
        description: "Behaviour when the File Event Service server did not answer.
  Values are:
  <ul>
  <li> false - indicates that nothing changes with I/O in case of File Event Service server is offline. </li>
  <li> true - indicates that all I/O is denied in case of File Event Service server is offline. </li>
  </ul>"
        type: boolean
      username:
        description: "Name of a Windows user allowing Events Publishing to connect to CEPA servers. To ensure that a secure
  connection (via Microsoft RPC protocol) is used disable HTTP by setting isHttpEnabled to false."
        type: string
      isHttpEnabled:
        description: "Indicates whether connection to CEPA servers via HTTP is enabled. Default is true (enabled). When enabled, connection via HTTP is attempted first. 
  If HTTP connection is disabled, or the connection fails, then connection through MSRPC is attempted if all CEPP server(s) are defined by FQDN. 
  The SMB account of the NAS server in the AD comain is used to make the connection via MSRPC. 
  Note that HTTP connections should only be used on secure networks, as it is neither SSL nor authenticated."
        type: boolean
      port:
        description: "When HTTP is used to connect to the CEPA server(s), the port number to use. Default port number is 12228."
        type: integer
  fileInterface:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about network interfaces in the storage system. These interfaces
  control access to Windows (CIFS) and UNIX/Linux (NFS) file storage."
    properties:
      id:
        description: "Unique identifier of the fileInterface instance."
        type: string
      nasServer:
        description: "NAS server to which the network interface belongs, as defined by the nasServer
  resource type."
        $ref: '#/definitions/nasServer'
      ipPort:
        description: "Physical port or link aggregation on the storage processor on which the
  network interface is running, as defined by the ethernetPort resource type."
        $ref: '#/definitions/ipPort'
      health:
        description: "Health of the network interface, as defined by the health resource type."
        $ref: '#/definitions/health'
      ipAddress:
        description: "IP address of the network interface."
        type: string
      ipProtocolVersion:
        description: "IP protocol version of the network interface."
        $ref: '#/definitions/IpProtocolVersionEnum'
      netmask:
        description: "IPv4 netmask for the network interface, if it uses an IPv4 address."
        type: string
      v6PrefixLength:
        description: "IPv6 prefix length for the interface, if it uses an IPv6 address."
        type: integer
      gateway:
        description: "IPv4 or IPv6 gateway address for the network interface."
        type: string
      vlanId:
        description: "Virtual Local Area Network (VLAN) identifier for the interface. The interface
  uses the identifier to accept packets that have matching VLAN tags.
  <p/>
  Values are 1 - 4094."
        type: integer
      macAddress:
        description: "MAC address of the Ethernet port used for the network interface."
        type: string
      name:
        description: "Network interface name."
        type: string
      role:
        description: "Role of the network interface."
        $ref: '#/definitions/FileInterfaceRoleEnum'
      isPreferred:
        description: "Indicates whether the network interface is a preferred interface for file-based storage.
  See documentation of preferredInterfaceSettings for details."
        type: boolean
      replicationPolicy:
        description: "Replication policy of the network interface."
        $ref: '#/definitions/ReplicationPolicyEnum'
      sourceParameters:
        description: "The network interface parameters of the source NAS server."
        $ref: '#/definitions/fileInterfaceSourceParameters'
      isDisabled:
        description: "Indicates whether the network interface is disabled."
        type: boolean
  fileKerberosServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the Kerberos service used by the storage system for secure connections.
  You can configure one Kerberos settings object per NAS server.
  <br/>
  Kerberos is a distributed authentication service designed to provide strong
  authentication with secret-key cryptography. It works on the basis of 'tickets' that allow
  nodes communicating over a non-secure network to prove their identity in a secure
  manner. When configured to act as a secure NFS server, the NAS server uses the
  RPCSEC_GSS security framework and Kerberos authentication protocol to verify users and
  services. You can configure a secure NFS environment for a multiprotocol NAS server or
  one that supports Unix-only shares. In this environment, user access to NFS file systems
  is granted based on Kerberos principal names."
    properties:
      id:
        description: "Unique identifier of the Kerberos instance."
        type: string
      nasServer:
        description: "NAS server that is configured with these Kerberos settings."
        $ref: '#/definitions/nasServer'
      realm:
        description: "Kerberos Realm."
        type: string
      addresses:
        description: "Fully Qualified domain names of the Kerberos Key Distribution Center (KDC) servers."
        type: array
        items:
          type: string
      portNumber:
        description: "KDC servers TCP port. Default: 88."
        type: integer
  fileLDAPServer:
    type: object
    x-tags:
      - ~Appendix
    description: "The LDAP settings object for the NAS Server.
 You can configure one LDAP settings object per NAS server.
 <br/>
 The Lightweight Directory Access Protocol (LDAP) is an application protocol for querying
 and modifying directory services running on TCP/IP networks. LDAP provides central
 management for network authentication and authorization operations by helping to
 centralize user and group management across the network.
 
 NAS server can use LDAP as a Unix Directory Service to map users, retrieve netgroups,
 and build a Unix credential. When an initial LDAP configuration is applied, the system checks
 for the type of LDAP server. It can be an Active Directory schema, iPlanet schema,
 or an RFC 2307 schema."
    properties:
      id:
        description: "Unique identifier of the ldapServer instance."
        type: string
      nasServer:
        description: "NAS server that is configured with these LDAP settings."
        $ref: '#/definitions/nasServer'
      authority:
        description: "Name of the LDAP authority.
  Base Distinguished Name (BDN) of the root of the LDAP directory tree. The
  system uses the DN to bind to the LDAP service and locate in the LDAP
  directory tree to begin a search for information.
  <br/>
  <br/>
  The base DN can be expressed as a fully-qualified domain name or in X.509
  format by using the attribute dc=. For example, if the fully-qualified domain
  name is mycompany.com, the base DN is expressed as dc=mycompany,dc=com."
        type: string
      profileDN:
        description: "For an iPlanet LDAP server, specifies the DN of the entry with the configuration profile."
        type: string
      serverAddresses:
        description: "IP addresses of the associated LDAP servers."
        type: array
        items:
          type: string
      portNumber:
        description: "The TCP/IP port used by the NAS server to connect to the LDAP servers.
  Default value for LDAP is 389 and LDAPS is 636."
        type: integer
      authenticationType:
        description: "Type of authentication for the LDAP server."
        $ref: '#/definitions/AuthenticationTypeEnum'
      protocol:
        description: "Type of LDAP protocol."
        $ref: '#/definitions/LDAPProtocolEnum'
      verifyServerCertificate:
        description: "Indicates whether Certification Authority certificate is used to verify the LDAP server
  certificate for secure SSL connections. 
  Values are:
  <ul>
  <li> true - verifies LDAP server's certificate. </li>
  <li> false - doesn't verify LDAP server's certificate. </li>
  </ul>"
        type: boolean
      bindDN:
        description: "Bind Distinguished Name (DN) to be used when binding."
        type: string
      isCifsAccountUsed:
        description: "Indicates whether CIFS authentication is used to authenticate to the LDAP server.
  Values are:
  <ul>
  <li> true - Indicates that the CIFS settings are used for Kerberos authentication. </li>
  <li> false - Indicates that Kerberos uses its own settings. </li>
  </ul>"
        type: boolean
      principal:
        description: "Specifies the principal name for Kerberos authentication."
        type: string
      realm:
        description: "Specifies the realm name for Kerberos authentication."
        type: string
      schemeType:
        description: "LDAP server scheme type."
        $ref: '#/definitions/SchemeTypeEnum'
      replicationPolicy:
        description: "Indicates the status of the LDAP servers addresses list in the NAS server operating as
 a replication destination. When a replicated LDAP servers list is created on
 the source NAS server, it is automatically synchronized to the destination."
        $ref: '#/definitions/ReplicationPolicyEnum'
      sourceParameters:
        description: "For replication destination NAS servers, information about the corresponding source NAS server's LDAP settings."
        $ref: '#/definitions/fileLDAPServerSourceParameters'
  fileNDMPServer:
    type: object
    x-tags:
      - ~Appendix
    description: "The NDMP server for the NAS Server.
 You can configure one NDMP server per NAS server.
 <br/>
  The Network Data Management Protocol (NDMP) provides a standard for backing up file
  servers on a network. NDMP allows centralized applications to back up file servers that
  run on various platforms and platform versions. NDMP reduces network congestion by
  isolating control path traffic from data path traffic, which permits centrally managed and
  monitored local backup operations.
  Storage systems support NDMP v2-v4 over the network. Direct-attach NDMP is not supported. 
  This means that the tape drives need to be connected to a media server, and the NAS server 
  communicates with the media server over the network. NDMP has an advantage when using 
  multiprotocol file systems because it backs up the Windows ACLs as well as the UNIX security 
  information."
    properties:
      id:
        description: "Unique instance id."
        type: string
      nasServer:
        description: "NAS server that is configured with these NDMP settings."
        $ref: '#/definitions/nasServer'
      username:
        description: "User name for accessing the NDMP server."
        type: string
  fileNISServer:
    type: object
    x-tags:
      - ~Appendix
    description: "The NIS settings object for the NAS Server.
 You can configure one NIS settings object per NAS server.
 <br/>
 The Network Information Service (NIS) consists of a directory service protocol for
 maintaining and distributing system configuration information, such as user and group
 information, hostnames etc."
    properties:
      id:
        description: "Unique identifier of the nisServer instance."
        type: string
      nasServer:
        description: "NAS server that is configured with these NIS settings."
        $ref: '#/definitions/nasServer'
      addresses:
        description: "Prioritized list of one to ten NIS server IP addresses for the domain."
        type: array
        items:
          type: string
      domain:
        description: "Name of the NIS server domain."
        type: string
      replicationPolicy:
        description: "Indicates the status of the NIS servers addresses list in the NAS server operating as
 a replication destination. When a replicated NIS servers list is created on
 the source NAS server, it is automatically synchronized to the destination."
        $ref: '#/definitions/ReplicationPolicyEnum'
      sourceParameters:
        description: "For replication destination NAS servers, information about the corresponding source NAS server's NIS settings."
        $ref: '#/definitions/fileNISServerSourceParameters'
  filesystem:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the underlying file system associated with the file system 
  and VMware NFS storage resources in the storage system.<br/>
  <br/>
  <b>Note:</b> To manage file systems and VMware NFS datastores, use the applicable 
  operations for the storageResource object, as described in the help topic 
  for that resource type.<br/>"
    properties:
      id:
        description: "Unique identifier of the file system."
        type: string
      health:
        description: "Health information for the file system, as defined by the health resource
  type."
        $ref: '#/definitions/health'
      name:
        description: "File system name unique to the NAS server."
        type: string
      description:
        description: "File system description."
        type: string
      type:
        description: "File system type."
        $ref: '#/definitions/FilesystemTypeEnum'
      sizeTotal:
        description: "File system size that the system presents to the host or end user."
        type: integer
      sizeUsed:
        description: "Size of used space in the file system by the user files."
        type: integer
      sizeAllocated:
        description: "Size of pool space allocated for the file system:
  <ul>
  <li>For a thin-provisioned file system, this as a rule is less than the value of the
  sizeTotal attribute and slightly greater than or equal to the value of the sizeUsed
  attribute.</li>
  <li>For a not thin-provisioned file system, this is approximately equal to the value of the
  attribute sizeTotal.</lki>
  </ul>
  This measurement does not include space reserved for snapshots."
        type: integer
      sizePreallocated:
        description: "Space reserved from the pool by the file system, for future needs to make writes more efficient.
  The pool may be able to reclaim some of this if space is running low."
        type: integer
      sizeAllocatedTotal:
        description: "Total pool space used in the pool for the file system. This include the allocated 
  space and allocations for snaps and metadata."
        type: integer
      minSizeAllocated:
        description: "<ul>
  <li>For a thin-provisioned file system, this is the minimum allocated size to which the file system can be auto-shrunk.</li>
  <li>This attribute does not apply for a thick-provisioned file system</li>
  </ul>
  This measurement does not include space reserved for snapshots."
        type: integer
      isReadOnly:
        description: "Indicates whether the file system is read-only.
  Values are:
  <ul>
  <li>true - File system is read-only.</li>
  <li>false - File system is read-write.</li>
  </ul>"
        type: boolean
      isThinEnabled:
        description: "Indicates whether the file system is thin-provisioned. 
  Values are:
  <ul>
  <li>true - File system is thin-provisioned.</li>
  <li>false - File system is thick-provisoned.</li>
  </ul>"
        type: boolean
      isDataReductionEnabled:
        description: "True if data reduction is enabled, only applies when isThinEnabled is true."
        type: boolean
      dataReductionSizeSaved:
        description: "Storage element saved space by data reduction, which includes savings from compression and deduplication."
        type: integer
      dataReductionPercent:
        description: "Data reduction percentage is the percentage of the data that does not consume storage - the savings due to data reduction. 
  For example, if 1 TB of data is stored in 250 GB, the data reduction percentage is 75%. 75% data reduction percentage is equivalent 
  to a 4:1 data reduction ratio."
        type: integer
      dataReductionRatio:
        description: "Data reduction ratio.
  The data reduction ratio is the ratio between the size of the data and the amount of storage actually consumed. 
  For example, 1TB of data consuming 250GB would have a ration of 4:1. A 4:1 data reduction ratio is equivalent to a 75% data reduction percentage."
        type: number
        format: float
      isAdvancedDedupEnabled:
        description: "True if data reduction is enabled, only applies when isThinEnabled is true."
        type: boolean
      storageResource:
        description: "Storage resource to which the file system belongs, as defined by the
  storageResource."
        $ref: '#/definitions/storageResource'
      flrVersion:
        description: "Indicates which File Level Retention (FLR) version is enabled on the file system.
  Values are:
  <ul>
  <li>0 - FLR is OFF on the file system.</li>
  <li>1 - Enterprise is enabled on the file system.</li>
  <li>2 - Compliance is enabled on the file system.</li>
  </ul>"
        $ref: '#/definitions/FLRVersionEnum'
      isFlrProtected:
        description: "Indicates whether the file system is protected because it contains at least one protected file.
  Values are:
  <ul>
  <li>true - file system contains at least one protected file.</li>
  <li>false - file system doesn't contain protected file.</li>
  </ul>"
        type: boolean
      flrSoftwareClock:
        description: "Indicates file level retention software clock value. It is file system clock used to track the retention date. It is initialized when an FLR-enabled file system is first mounted on a NAS Server."
        type: string
        format: date-time
      flrProtectedMaxRetention:
        description: "Indicates maximum date and time that has been set on any locked file in an FLR-enabled file system. It is a string with a DateTime value that can extend beyond DateTime limitation of no long than 2038 year. Searching and filtering will use string ordering rather than time ordering."
        type: string
      flrMinRetention:
        description: "The shortest period for which files on an FLR-enabled file system can be locked and protected from deletion."
        type: string
        format: date-time
      flrDefaultRetention:
        description: "The default retention period is used in an FLR-enabled file system when a file is locked and a retention period is not specified. The REST get value 40000 for this parameter means infinite days."
        type: string
        format: date-time
      flrMaxRetention:
        description: "The longest period for which files on an FLR-enabled file system can be locked and protected from deletion. The REST get value 40000 for this parameter means infinite days."
        type: string
        format: date-time
      isFlrAutoLockEnabled:
        description: "Users can specify whether to automatically lock files in an FLR-enabled file system, as well as a policy interval for how long to wait after files are modified before the files are automatically locked. When enabled, auto-locked files are set with the default retention period value. This attribute indicates whether automatic lock is enabled on the file system. 
  Values are:
  <ul>
  <li>true - automatic lock is enabled on the file system.</li>
  <li>false - automatic lock is disabled on the file system.</li>
  </ul>"
        type: boolean
      isFlrAutoDeleteEnabled:
        description: "Users can specify whether to automatically delete locked files from an FLR-enabled file system once their retention periods have expired. This value indicates whether automatic delete is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic delete is enabled on the file system.</li>
  <li>false - automatic delete is disabled on the file system.</li>
  </ul>"
        type: boolean
      flrAutoLockDelay:
        description: "Indicates how long to wait after files are modified before the files are automatically locked. The default value is 1 hour."
        type: string
        format: date-time
      errorThreshold:
        description: "When this used space percentage is exceeded, an error severity alert will be triggered on this filesystem.
  If the threshold value is set as 0, the alert is disabled.
  The default errorThreshold is 95.
  The value warningThreshold is between infoThreshold and errorThreshold."
        type: integer
      warningThreshold:
        description: "When this used space percentage is exceeded, a warning severity alert will be triggered on this filesystem.
  If the threshold value is set as 0, the alert is disabled.
  The default warningThreshold is 75.
  The value warningThreshold is between infoThreshold and errorThreshold."
        type: integer
      infoThreshold:
        description: "When this used space percentage is exceeded, an info severity alert will be triggered on this filesystem.
  If the threshold value is set as 0, the alert is disabled.
  The default infoThreshold is 0.
  The value warningThreshold is between infoThreshold and errorThreshold."
        type: integer
      isCIFSSyncWritesEnabled:
        description: "(SMB (also known as CIFS) file systems) Indicates whether the synchronous writes option is enabled
  on the file system. 
  Values are:
  <ul>
  <li>true - Synchronous writes option is enabled on the file system.</li>
  <li>false - Synchronous writes option is disabled on the file system.</li>
  </ul>"
        type: boolean
      pool:
        description: "Storage pool in which file system is allocated, as defined by the pool object."
        $ref: '#/definitions/pool'
      isCIFSOpLocksEnabled:
        description: "(SMB (also known as CIFS) file systems) Indicates whether opportunistic file locking is enabled on
  the file system. 
  Values are:
  <ul>
  <li>true - Opportunistic file locking is enabled on the file system.</li>
  <li>false - Opportunistic file locking is disabled on the file system.</li>
  </ul>"
        type: boolean
      nasServer:
        description: "NAS server that provides network connectivity to the file system from the
  hosts."
        $ref: '#/definitions/nasServer'
      isCIFSNotifyOnWriteEnabled:
        description: "(SMB (also known as CIFS) file systems) Indicates whether notifications on file writes are enabled
  on the file system. 
  Values are:
  <ul>
  <li>true - Notifications on file writes are enabled on the file system.</li>
  <li>false - Notifications on file writes are disabled on the file system.</li>
  </ul>"
        type: boolean
      isCIFSNotifyOnAccessEnabled:
        description: "(SMB (also known as CIFS) file systems) Indicates whether notifications on file access are enabled
  on the file system. 
  Values are:
  <ul>
  <li>true - Notifications on file access are enabled on the file system.</li>
  <li>false - Notifications on file access are disabled on the file system.</li>
  </ul>"
        type: boolean
      cifsNotifyOnChangeDirDepth:
        description: "(SMB (also known as CIFS) file systems) Lowest directory level to which the enabled notifications
  apply, if any."
        type: integer
      tieringPolicy:
        description: "(Applies if a FAST VP license is installed.) FAST VP tiering policy for the
  file system."
        $ref: '#/definitions/TieringPolicyEnum'
      supportedProtocols:
        description: "Protocols supported by the file system."
        $ref: '#/definitions/FSSupportedProtocolEnum'
      metadataSize:
        description: "Size of file system metadata."
        type: integer
      metadataSizeAllocated:
        description: "Size of pool space allocated for file system metadata."
        type: integer
      perTierSizeUsed:
        description: "Sizes of space allocations by the file system on the tiers of multi-tier storage pool.
  This list will have the same length as the tiers list on this file system's pool, and the entries will correspond to those tiers.
  <br>
  Multi-tier storage pools can be created on a system with the FAST VP license installed."
        type: array
        items:
          type: integer
      snapsSize:
        description: "Size of space used by file system snapshots."
        type: integer
      snapsSizeAllocated:
        description: "Size of pool space allocated for file system snapshots."
        type: integer
      snapCount:
        description: "Number of file system snapshots."
        type: integer
      isSMBCA:
        description: "Indicates whether or not SMB 3.0 is enabled. 
  Values are:
  <ul>
  <li>true - SMB 3.0 is enabled.</li>
  <li>false - SMB 3.0 is disabled.</li>
  </ul>"
        type: boolean
      accessPolicy:
        description: "Access policies which are supported by file system."
        $ref: '#/definitions/AccessPolicyEnum'
      folderRenamePolicy:
        description: "Rename policies which are supported by file system.
  These policy choices control whether directory can be renamed from NFS or SMB clients 
  if at least one file is opened in the directory or in one of its children directory."
        $ref: '#/definitions/FSRenamePolicyEnum'
      lockingPolicy:
        description: "Locking policies which are supported by file system.
  These policy choices control whether the NFSv4 range locks must be honored.
  Because NFSv3 is advisory by design, this policy allows specifying whether the NFSv4 locking feature behaves like NFSv3
  in order to be backward compatibilty with applications expecting an advisory locking scheme."
        $ref: '#/definitions/FSLockingPolicyEnum'
      format:
        description: "File system format."
        $ref: '#/definitions/FSFormatEnum'
      hostIOSize:
        description: "Typical write I/O size from the host to the file system."
        $ref: '#/definitions/HostIOSizeEnum'
      poolFullPolicy:
        description: "File system behavior to follow when pool is full and a write to this filesystem is attempted."
        $ref: '#/definitions/ResourcePoolFullPolicyEnum'
      fileEventSettings:
        description: "Indicates whether File Event Service is enabled for some protocols on the filesystem."
        $ref: '#/definitions/fileEventSettings'
  fsnPort:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies if link aggregation is supported.)
  In a GUI it is available on General Settings - 'Link aggregation & FSN' page.
  <p/>
  Fail-Safe Network (FSN) is a high-availability feature that extends link failover into the
  network by providing a switch-level redundancy. An FSN appears as a single link with a single
  MAC address and potentially multiple IP addresses. An FSN can be built from Ethernet Ports and
  non-FSN link aggregations, or combination of them. Only one connection in an FSN is active
  at a time. Port with active connection is the Active Port. Unity always uses the primary connection,
  if available. Port with primary connection is the Primary Port. If the primary connection fails,
  Unity automatically switches to one of the standby connections. When the primary connection is
  available again, an FSN automatically switches back to the primary connection.
  <p/>
  <b>Note: </b>If you want to include either Ethernet Ports or link aggregations in an FSN Port,
  configure them before creating an FSN.
  <p/>
  <b>Note: </b>You can aggregate only Ethernet Ports and link aggregations with the same MTU size
  and not included in another FSN Port.
  <p/>
  <b>Note: </b>You can not add an Ethernet Port to FSN if there are iSCSI portals on it.
  <p/>
  The features of an FSN Port are as follows:
  <ul>
  <li>FSN component devices do not have to be the same device type. A single FSN Port
  can include Fast Ethernet devices or link aggregations, or a combination of these types,
  all on the same Unity.</li>
  <li>There can be a maximum of four devices in a FSN.</li>
  <li>Only one component device of an FSN Port is active at a time.</li>
  <li>If all the connections in FSN Port fail, the link is down.</li>
  </ul>
  <p/>
  The Unisphere online Help provides more details on FSN configuring."
    properties:
      id:
        description: "Unique identifier of an fsnPort instance."
        type: string
      name:
        description: "Name for an fsnPort. This name contains a name of parentStorageProcessor.
  For example, 'SP A FSN Port 0 1'."
        type: string
      shortName:
        description: "Short name for an fsnPort. This name doesn't contains a name of parentStorageProcessor
  and it's short form of name of fsnPort object. For example, 'FSN Port 0 1'."
        type: string
      activePort:
        description: "Active Port of an fsnPort. Active Port is port with active connection.
  Read-only field."
        $ref: '#/definitions/ipPort'
      primaryPort:
        description: "Primary Port of a fail-safe network connection.
  Only one port of an FSN is active at a time, and this Primary Port will be active whenever it is operating correctly.
  The Primary Port is required to create an fsnPort, and it will be the Primary Port for the lifetime of the fsnPort.
  The fsnPort's MAC address will be the same as the Primary Port's MAC address."
        $ref: '#/definitions/ipPort'
      secondaryPorts:
        description: "List of secondary ports (Ethernet Ports and / or Link Aggregations),
  one of which will be activated during any failure of the primary port."
        type: array
        items:
          $ref: '#/definitions/ipPort'
      mtuSize:
        description: "Maximum transmission unit (MTU) packet size for the linked ports, in bytes."
        type: integer
      minMtuSize:
        description: "Minimum configurable limit on Maximum transmission unit (MTU) packet size for the linked ports, in bytes."
        type: integer
      maxMtuSize:
        description: "Maximum configurable limit on Maximum transmission unit (MTU) packet size for the linked ports, in bytes."
        type: integer
      macAddress:
        description: "MAC address of an fsnPort."
        type: string
      isLinkUp:
        description: "Indicates whether an fsnPort has a link."
        type: boolean
      health:
        description: "Health information for an fsnPort, as defined by the health resource type."
        $ref: '#/definitions/health'
      storageProcessor:
        description: "SP on which the FSN Port resides, as defined by the storageProcessor resource type."
        $ref: '#/definitions/storageProcessor'
  ftpServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the File Transfer Protocol (FTP) and Secure File Transfer 
  Protocol (SFTP) servers of a NAS server. 
  <br/>
  <br/>
  You can configure one FTP server and one SFTP server per NAS server. 
  File Transfer Protocol (FTP) is a standard network protocol used to transfer 
  files from one host to another host over a TCP-based network, such as the Internet. 
  For secure transmission that encrypts the username, password, and content, FTP is secured 
  with SSH (SFTP). 
  <br/>
  <br/>
  You can activate an FTP server and SFTP server independently on each NAS server.
  The FTP and SFTP clients are authenticated using credentials defined on a Unix name
  server (such as an NIS server or a LDAP server) or a Windows domain. 
  Windows user names need to be entered using the 'username@domain' or
  'domain\\username' formats.
  Each FTP and SFTP must have a home directory defined in the name server that
  must be accessible on the NAS server. 
  FTP allows also clients to connect as anonymous users."
    properties:
      id:
        description: "Unique identifier of the ftpServer instance."
        type: string
      nasServer:
        description: "NAS server that is configured with the FTP server."
        $ref: '#/definitions/nasServer'
      isFtpEnabled:
        description: "Indicates whether the FTP server is enabled on the NAS server specified in the nasServer 
 attribute. Values are:
 <ul>
 <li> true - FTP server is enabled on the specified NAS server.</li>
 <li> false - FTP server is disabled on the specified NAS server.</li>
 </ul>"
        type: boolean
      isSftpEnabled:
        description: "Indicates whether the SFTP server is enabled on the NAS server specified in the nasServer
 attribute. Values are:
 <ul>
 <li> true - SFTP server is enabled on the specified NAS server.</li>
 <li> false - SFTP server is disabled on the specified NAS server.</li>
 </ul>"
        type: boolean
      isCifsUserEnabled:
        description: "Indicates whether FTP and SFTP clients can be authenticated using a CIFS user name.
 These user names are defined in a Windows domain controller, and their formats are user@domain or domain\\user. 
 Values are:
 <ul>
 <li> true - CIFS user names are accepted for authentication.</li>
 <li> false - CIFS user names are not accepted for authentication.</li>
 </ul>"
        type: boolean
      isUnixUserEnabled:
        description: "Indicates whether FTP and SFTP clients can be authenticated using a Unix user name.
 Unix user names are defined in LDAP or NIS servers. Values are:
 <ul>
 <li> true - Unix user names are accepted for authentication.</li>
 <li> false - Unix user names are not accepted for authentication.</li>
 </ul>"
        type: boolean
      isAnonymousUserEnabled:
        description: "Indicates whether FTP clients can be authenticated anonymously.
 Values are:
 <ul>
 <li> true - Anonymous user name is accepted.</li>
 <li> false - Anonymous user name is not accepted.</li>
 </ul>"
        type: boolean
      isHomedirLimitEnabled:
        description: "Indicates whether an FTP or SFTP user's area is limited to his or her home directory..
 For information about CIFS home directories, see <i>Using a VNXe3200 System with CIFS File Systems</i>, 
 which is available on the <a href='http://support.emc.com'>EMC Online Support</a> website.
 Values are:
 <ul>
 <li> true - An FTP or SFTP user can access his or her own home directory only.</li>
 <li> false - FTP and SFTP users can access any NAS server directory, according to NAS server permissions.</li>
 </ul>"
        type: boolean
      defaultHomedir:
        description: "(Applies when the value of isHomedirLimitEnabled is false.) Default directory of FTP and SFTP clients who 
 have a home directory that is not defined or accessible.
 This parameter is an absolute path relative to the root of the NAS server."
        type: string
      welcomeMsg:
        description: "Welcome message displayed on the console of FTP and SFTP clients before their authentication.
 The length of this message is limited to 511 bytes, and the length of each line is limited to 80 bytes."
        type: string
      motd:
        description: "Message of the day displayed on the console of FTP clients after their authentication.
 The length of this message is limited to 511 bytes, and the length of each line is limited to 80 bytes."
        type: string
      isAuditEnabled:
        description: "Indicates whether the activity of FTP and SFTP clients is tracked in audit files.
 Values are:
 <ul>
 <li> true - FTP/SFTP activity is tracked.</li>
 <li> false - FTP/SFTP activity is not tracked.</li>
 </ul>"
        type: boolean
      auditDir:
        description: "(Applies when the value of isAuditEnabled is true.) Directory of FTP/SFTP audit files.
 This parameter is an absolute path relative to the root of the NAS server."
        type: string
      auditMaxSize:
        description: "(Applies when the value of isAuditEnabled is true.) Maximum size of  
  FTP/SFTP audit files."
        type: integer
      hostsList:
        description: "Allowed or denied hosts, depending on the value of the isAllowHost attribute. 
 A host is defined using its IP address. Subnets using CIDR notation are also supported.
 <ul>
 <li>If allowed hosts exist, only those hosts and no others can connect to the NAS server through FTP or SFTP.</li>
 <li>If denied hosts exist, they always have access denied to the NAS server through FTP or SFTP.</li>
 <li>If the list is empty, there is no restriction to NAS server access through FTP or SFTP based on the host IP.</li>
 </ul>"
        type: array
        items:
          type: string
      usersList:
        description: "Allowed or denied users, depending on the value of the isAllowUser attribute. 
 <ul>
 <li>If allowed users exist, only those users and no others can connect to the NAS server through FTP or SFTP.</li>
 <li>If denied users exist, they have always access denied to the NAS server through FTP or SFTP.</li>
 <li>If the list is empty, there is no restriction to the NAS server access through FTP or SFTP based on the user name.</li>
 </ul>"
        type: array
        items:
          type: string
      groupsList:
        description: "Allowed or denied user groups, depending on the value of the isAllowGroup attribute.
 <ul>
 <li>If allowed groups exist, only users who are members of these groups and no others can connect to the NAS server through FTP or SFTP.</li>
 <li>If denied groups exist, all users who are members of those groups have always access denied to the NAS server through FTP or SFTP.</li>
 <li>If the list is empty, there is no restriction to the NAS server access through FTP or SFTP based on the user group.</li>
 </ul>"
        type: array
        items:
          type: string
      isAllowHost:
        description: "Indicates whether the hostsList attribute contains allowed or denied hosts.
  Values are:
  <ul>
  <li> true - hostsList contains allowed hosts.</li>
  <li> false - hostsList contains denied hosts.</li>
  </ul>"
        type: boolean
      isAllowUser:
        description: "Indicates whether the usersList attribute contains allowed or denied users.
  Values are:
  <ul>
  <li> true - usersList contains allowed users.</li>
  <li> false - usersList contains denied users.</li>
  </ul>"
        type: boolean
      isAllowGroup:
        description: "Indicates whether the groupsList attribute contains allowed or denied user groups.
  Values are:
  <ul>
  <li> true - groupsList contains allowed user groups.</li>
  <li> false - groupsList contains denied user groups.</li>
  </ul>"
        type: boolean
  host:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about host configuration on a storage system. A host's
  configuration is the logical connection through which the host or application
  can access storage resources."
    properties:
      id:
        description: "Unique identifier of the host instance."
        type: string
      health:
        description: "Health information for the host, as defined by the health resource type."
        $ref: '#/definitions/health'
      name:
        description: "Host name:
  <ul>
  <li>For an automatically-managed ESXi server through vCenter, this is the
  display name in the vCenter GUI.</li>
  <li>For a manually-created host, this is the host name entered by the
  user.</li>
  </ul>"
        type: string
      description:
        description: "Host description."
        type: string
      type:
        description: "Type of host configuration."
        $ref: '#/definitions/HostTypeEnum'
      osType:
        description: "Operating system running on the host."
        type: string
      hostUUID:
        description: "(Applies to VCenter server and ESXi host configurations only.) Universal Unique Identifier (UUID) of the host."
        type: string
      hostPushedUUID:
        description: "(Applies to VCenter server and ESXi host configurations only.) Pushed UUID of the host."
        type: string
      hostPolledUUID:
        description: "(Applies to VCenter server and ESXi host configurations only.) Polled UUID of the host."
        type: string
      lastPollTime:
        description: "(Applies to hosts on ESXi servers only.) Indicates the date and time when the
  storage array received the host configuration data from the ESXi server."
        type: string
        format: date-time
      autoManageType:
        description: "Indicates how the host is managed."
        $ref: '#/definitions/HostManageEnum'
      registrationType:
        description: "Indicates how initiators are registered to the host."
        $ref: '#/definitions/HostRegistrationTypeEnum'
      hostContainer:
        description: "(Applies to VCenter server and ESXi host configurations only.) Identifier of
  the parent host container, as defined by the hostContainer resource type."
        $ref: '#/definitions/hostContainer'
      fcHostInitiators:
        description: "Identifiers of the Fibre Channel initiators associated with the host, as
  defined by the hostInitiator resource type."
        type: array
        items:
          $ref: '#/definitions/hostInitiator'
      iscsiHostInitiators:
        description: "Identifiers of the iSCSI initiators associated with the host, as defined by
  the hostInitiator resource type."
        type: array
        items:
          $ref: '#/definitions/hostInitiator'
      hostIPPorts:
        description: "Identifiers of the network ports associated with the host, as defined by the
  hostIPPort resource type."
        type: array
        items:
          $ref: '#/definitions/hostIPPort'
      storageResources:
        description: "Identifiers of the storage resources used by the host, as defined by the
  storageResource resource type."
        type: array
        items:
          $ref: '#/definitions/storageResource'
      hostLUNs:
        description: "(Applies to iSCSI and Fibre Channel host configurations only.) Identifiers of
  the LUNs accessible by the host, as defined by the hostLUN resource type."
        type: array
        items:
          $ref: '#/definitions/hostLUN'
      isNfsv4Supported:
        description: "(Applies to VCenter server and ESXi host configurations only.) Flag indicating whether ESXi host supports NFSv4."
        type: boolean
      nfsUsername:
        description: "(Applies to VCenter server and ESXi host configurations only.) NFS user authentication information configured on the ESXi host.
 The same username should be configured on the VMware NAS datastore to enable secure NFS access with Kerberos."
        type: string
      tenant:
        description: "Information about the tenant to which the host is assigned."
        $ref: '#/definitions/tenant'
      hostGroup:
        description: "Identifiers of the host group the host belongs to."
        $ref: '#/definitions/hostGroup'
  hostContainer:
    type: object
    x-tags:
      - ~Appendix
    description: "A vCenter or a stand alone ESXi container for managed VMs.
  <br/>
  ESXi hosts that are discovered via vCenter are available as host objects."
    properties:
      id:
        description: "Unique instance id."
        type: string
      lastPollTime:
        description: "Last time rescan was performed."
        type: string
        format: date-time
      port:
        description: "Port number."
        type: integer
      name:
        description: "Alias."
        type: string
      type:
        description: "Type of this host container."
        $ref: '#/definitions/HostContainerTypeEnum'
      address:
        description: "Can be IPv4, IPv6 and host name."
        type: string
      description:
        description: "Description."
        type: string
      productName:
        description: "Name of the host container."
        type: string
      productVersion:
        description: "Version of the host container."
        type: string
      health:
        description: "Health information."
        $ref: '#/definitions/health'
      hosts:
        description: "Vector of ids of embedded potential hosts."
        type: array
        items:
          $ref: '#/definitions/host'
      vasaProviderState:
        description: "Indicates storage system's VASA vendor provider state on the vCenter."
        $ref: '#/definitions/VasaProviderStateEnum'
  hostGroup:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about host group on a storage system.
  A host group contains a set of hosts for quicker attaching/detaching LUNs and customizing Host LUN IDs.
  It supports attaching all hosts in host group to LUNs by adding LUNs to host group;
  detaching all hosts in host group from LUNs by removing LUNs from host group;
  adding hosts to host group to attach to the LUNs in host group;
  customizing Host LUN IDs."
    properties:
      id:
        description: "Unique identifier of the host group instance."
        type: string
      name:
        description: "Name of the host group."
        type: string
      description:
        description: "Host group description."
        type: string
      type:
        description: "Host group type."
        $ref: '#/definitions/HostGroupTypeEnum'
      hosts:
        description: "Hosts associated with this host group."
        type: array
        items:
          $ref: '#/definitions/host'
      hostGroupLUNs:
        description: "Identifiers of the LUNs accessible by the host group, as defined by the hostGroupLUN resource type."
        type: array
        items:
          $ref: '#/definitions/hostGroupLUN'
      hostGroupVmwareLUNs:
        description: "Identifiers of the VMware VMFS datastores accessible by the host group, as defined by the hostGroupVmwareLUNs resource type."
        type: array
        items:
          $ref: '#/definitions/hostGroupVmwareLUN'
      health:
        description: "Health information for the host group, as defined by the health resource type."
        $ref: '#/definitions/health'
  hostGroupLUN:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the LUNs to which a host group has access."
    properties:
      id:
        description: "Unique identifier of the hostGroupLUN instance."
        type: string
      hostGroup:
        description: "Information about the host group that has access to the LUN, as
  defined by the host resource type."
        $ref: '#/definitions/hostGroup'
      hostCountForLunAccess:
        description: "Number of hosts that have access to the LUN."
        type: integer
      hostCountForNoLunAccess:
        description: "Number of hosts that have no access to the LUN."
        type: integer
      lun:
        description: "LUN, as defined by the lun resource type."
        $ref: '#/definitions/lun'
      defaultHlu:
        description: "The default Host LUN ID to be assigned to host when a host that has no access to this LUN is added to the host group."
        type: integer
  hostGroupVmwareLUN:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the VMware VMFS datastores to which a host group has access."
    properties:
      id:
        description: "Unique identifier of the hostGroupVmwareLUN instance."
        type: string
      hostGroup:
        description: "Information about the host group that has access to the VMware VMFS datastore, as
  defined by the host resource type."
        $ref: '#/definitions/hostGroup'
      hostCountForVmwareLunAccess:
        description: "Number of hosts that have access to the VMware VMFS datastore."
        type: integer
      hostCountForNoVmwareLunAccess:
        description: "Number of hosts that have no access to the VMware VMFS datastore."
        type: integer
      storageResource:
        description: "VMware VMFS datastore, as defined by the storageResource type."
        $ref: '#/definitions/storageResource'
      defaultHlu:
        description: "The default Host LUN ID to be assigned to host when a host that has no access to this VMware VMFS datastore is added to the host group."
        type: integer
  hostIPPort:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the host's IP settings."
    properties:
      id:
        description: "Unique identifier of the hostIPPort instance."
        type: string
      name:
        description: "Port name."
        type: string
      type:
        description: "IP address type."
        $ref: '#/definitions/HostPortTypeEnum'
      address:
        description: "IP address or network name of the port."
        type: string
      netmask:
        description: "(Applies to IPV4 only.) Subnet mask for the IP address, if any."
        type: string
      v6PrefixLength:
        description: "(Applies to IPV6 only.) Subnet mask length."
        type: integer
      isIgnored:
        description: "(Applies to NFS access only.) Indicates whether the port should be ignored when storage access is granted to
  the host. Values are:
  <ul>
  <li>true - Ignore the port when granting storage access to the host.</li>
  <li>false - Include the port when granting storage access to the host.</li>
  </ul>"
        type: boolean
      host:
        description: "Identifier of the associated host, as defined by the host resource type."
        $ref: '#/definitions/host'
  hostInitiator:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about host initiators in the storage system.
  <br/>
  <br/>
  After you create a host configuration for controlling host access to storage
  on the system, you need to create a host
  initiator for each host configuration that accesses iSCSI or Fibre Channel (FC)
  storage. The initiator connects the host to the target iSCSI or FC node on the system.
  <br/>
  <br/>
  Initiator-based registration allows you to register the initiator to a host
  without having to manage individual paths. By default, when an initiator is
  registered to a host, all of its paths, including those specified after the
  registration takes place, are automatically granted access to any storage
  provisioned for the host."
    properties:
      id:
        description: "Unique identifier of the hostInitiator instance."
        type: string
      health:
        description: "Health information for the host initiator, as defined by the health resource
  type."
        $ref: '#/definitions/health'
      type:
        description: "Host initiator type."
        $ref: '#/definitions/HostInitiatorTypeEnum'
      initiatorId:
        description: "Host initiator name:
  <ul>
  <li>For an iSCSI initiator, this is the iSCSI Qualified Name (IQN). </li>
  <li>For an FC initiator, this is the Worldwide Name (WWN).</li>
  </ul>"
        type: string
      parentHost:
        description: "Information about the host to which the host initiator is assigned, as defined
  by the host resource type."
        $ref: '#/definitions/host'
      isIgnored:
        description: "Indicates whether the host initiator should be included when storage access is
  granted to the host. Values are:
  <ul>
  <li>true - Do not include the host initiator when storage is granted to the
  associated host.</li>     
  <li>false - Include the host initiator when storage is granted to the
  associated host.</li>
  </ul>"
        type: boolean
      nodeWWN:
        description: "(Applies to FC initiators only.) Node Worldwide Name (WWN) of the initiator."
        type: string
      portWWN:
        description: "(Applies to FC initiators only.) Port Worldwide Name (WWN) of the initiator."
        type: string
      chapUserName:
        description: "(Applies to iSCSI initiators only.) CHAP user name. By default, this is the
  host initiator's iSCSI Qualified Name (IQN)."
        type: string
      isChapSecretEnabled:
        description: "(Applies to iSCSI initiators only.) Indicates whether CHAP authentication is
  enabled for the host initiator. Values are:
  <ul>
  <li>true - CHAP authentication is enabled.</li>
  <li>false - CHAP authentication is disabled.</li>
  </ul>"
        type: boolean
      paths:
        description: "Host initiator paths, as defined by the hostInitiatorPath resource type."
        type: array
        items:
          $ref: '#/definitions/hostInitiatorPath'
      iscsiType:
        description: "(Applies to iSCSI initiators only.) iSCSI initiator type."
        $ref: '#/definitions/HostInitiatorIscsiTypeEnum'
      isBound:
        description: "(Applies to iSCSI initiators only.) Indicates whether the iSCSI initiator is
  bound to an IP address. This is only applicable to hardware-dependent adapter
  devices. Values are:
  <ul>
  <li>true - iSCSI initiator is bound to an IP address.</li>
  <li>false - iSCSI initiator is not bound to an IP address.</li>
  </ul>"
        type: boolean
      initiatorSourceType:
        description: "Initiator source type."
        $ref: '#/definitions/HostInitiatorSourceTypeEnum'
      failoverMode:
        description: "Fail-over mode."
        $ref: '#/definitions/HostInitiatorFailoverModeEnum'
      isLunZEnabled:
        description: "If lunZ is enabled."
        type: boolean
      isArraySerialNumber:
        description: "If true, array serial number, otherwise LUN serial number will be used for Unit Serial Number in Vital Product Data Page 0x80 in SCSI-3 interface."
        type: boolean
      onWhiteList:
        description: "If true, the initiator in on the white list, Otherwise not on the white list."
        type: boolean
  hostInitiatorPath:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about host initiator paths in the storage system. Each initiator
  can be associated with multiple initiator paths."
    properties:
      id:
        description: "Unique identifier of the hostInitiatorPath instance."
        type: string
      registrationType:
        description: "Indicates how the initiator in the path was registered to the host."
        $ref: '#/definitions/HostInitiatorPathTypeEnum'
      isLoggedIn:
        description: "Indicates whether the host initiator is logged into the storage system. Values
  are:
  <ul>
  <li>true - Host initiator is logged into the storage system.</li>
  <li>false - Host initiator is not logged into the storage system.</li>
  </ul>"
        type: boolean
      hostPushName:
        description: "(Applies when the value of the registrationType attribute is set to ESXAuto.)
  Name of the host that is automatically associated with the initiator path
  through host push."
        type: string
      sessionIds:
        description: "(Applies to iSCSI paths only.) Session identifiers in the host initiator path."
        type: array
        items:
          type: string
      initiator:
        description: "Host initiator associated with the host initiator path, as defined by the
  hostInitiator resource type."
        $ref: '#/definitions/hostInitiator'
      fcPort:
        description: "(Applies to Fibre Channel paths only.) Target Fibre Channel port, as defined
  by the fcPort resource type."
        $ref: '#/definitions/fcPort'
      iscsiPortal:
        description: "(Applies to iSCSI paths only.) iSCSI portal, as defined by the iscsiPortal
  resource type."
        $ref: '#/definitions/iscsiPortal'
  hostLUN:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the LUNs and LUN snapshots to which a host has access."
    properties:
      id:
        description: "Unique identifier of the hostLUN instance."
        type: string
      host:
        description: "Information about the host that has access to the LUN or LUN snapshot, as
  defined by the host resource type."
        $ref: '#/definitions/host'
      type:
        description: "Indicates whether this instance of the hostLUN resource type represents a LUN
  or LUN snapshot."
        $ref: '#/definitions/HostLUNTypeEnum'
      hlu:
        description: "Host LUN Identifier (HLU) for the host storage group."
        type: integer
      lun:
        description: "(Applies to LUNs only.) LUN, as defined by the lun resource
  type."
        $ref: '#/definitions/lun'
      snap:
        description: "(Applies to LUN snapshots only.) LUN snapshot, as defined by
  the lunSnap resource type."
        $ref: '#/definitions/snap'
      isReadOnly:
        description: "Indicates whether the host access to the LUN or LUN snapshot is read-only.
  Values are:
  <ul>
  <li>true - Host access is read-only.</li>
  <li>false - Host access is read-write.</li>
  </ul>"
        type: boolean
      isDefaultSnap:
        description: "(Applies to LUN snapshots only.) Indicates whether this instance of the hostLUN resource type represents a default snapshot.
  <ul>
  <li>true - instance represents HLU for default snapshot.</li>
  <li>false - instance does not represent HLU for default snapshot</li>
  </ul>"
        type: boolean
  hostVVolDatastore:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the VVolDatastore to which a host has access."
    properties:
      id:
        description: "Unique identifier of the hostVVolDatastore instance."
        type: string
      storageResource:
        description: "Information about the VVol Datastore, as defined by the storageResource type."
        $ref: '#/definitions/storageResource'
      host:
        description: "Information about the host that has access to the VVol Datastore, as
  defined by the host resource type."
        $ref: '#/definitions/host'
  importSession:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about import sessions."
    properties:
      id:
        description: "Unique identifier of the importSession instance."
        type: string
      name:
        description: "User-specified import session name."
        type: string
      state:
        description: "Import state of the import session."
        $ref: '#/definitions/ImportStateEnum'
      isCutover:
        description: "'True' indicates that the import session has done cutover,
 'False' indicates that the import session has not done cutover."
        type: boolean
      health:
        description: "Health information for the import session, as defined by the health
  resource type."
        $ref: '#/definitions/health'
      remoteSystem:
        description: "Source system of the import session."
        $ref: '#/definitions/remoteSystem'
      type:
        description: "Session type of the import session."
        $ref: '#/definitions/ImportTypeEnum'
      resourceType:
        description: "Source resource type of the import session."
        $ref: '#/definitions/RemoteObjectTypeEnum'
      srcResource:
        description: "Source resource in the import session."
        $ref: '#/definitions/resourceInfo'
      targetResource:
        description: "Local target resource of the import session."
        $ref: '#/definitions/resourceInfo'
      elementImports:
        description: "Information about the import of each member lun in the group."
        type: array
        items:
          $ref: '#/definitions/elementImport'
      throttle:
        description: "'True' indicates session is throttled (throttle value 8 for the session on the VNX system) and 
  'False' indicates session is not throttled (throttle value 10 for the session on the VNX system)."
        type: boolean
      percentProgress:
        description: "Overall import session progress details."
        type: integer
      vdmInfo:
        description: "The source VDM information object."
        $ref: '#/definitions/vdmInfo'
      hosts:
        description: "List of Hosts that will be granted access to import destination resources after cutover."
        type: array
        items:
          $ref: '#/definitions/host'
      remainingDataSize:
        description: "Size of data remaining to sync."
        type: integer
      cutoverThreshold:
        description: "Cutover ready after this percent of data is imported."
        type: integer
      remainingDataPercent:
        description: "Percentage of data remaining to sync."
        type: integer
      estimatedCutoverWindow:
        description: "Estimated remaining data sync time in minutes."
        type: integer
  installedSoftwareVersion:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about installed system software and language packs in the VNXe
  system."
    properties:
      id:
        description: "Unique identifier of the installedSoftwareVersion instance."
        type: string
      version:
        description: "Version of the installed software."
        type: string
      revision:
        description: "Revision number of the installed software."
        type: integer
      releaseDate:
        description: "Release date of the installed software."
        type: string
        format: date-time
      languages:
        description: "List of language pack information included in this release."
        type: array
        items:
          $ref: '#/definitions/installedSoftwareVersionLanguage'
      hotFixes:
        description: "List of installed hotfixes for the installed software instance."
        type: array
        items:
          type: string
      packageVersions:
        description: "List of relevant package names and the version number of the package."
        type: array
        items:
          $ref: '#/definitions/installedSoftwareVersionPackages'
      driveFirmware:
        description: "The drive firmware package is part of the installed software bundle
  which is used to upgrade disk firmware after software upgrade is completed"
        type: array
        items:
          $ref: '#/definitions/firmwarePackage'
  ioLimitPolicy:
    type: object
    x-tags:
      - ~Appendix
    description: "Set of I/O limit rules that you can apply to a storage resource.
 On GUI and CLI, ioLimitPolicy and ioLimitRule are combined for now since we only support one I/O limit rule per I/O limit policy."
    properties:
      id:
        description: "Unique identifier of the ioLimitPolicy instance."
        type: string
      name:
        description: "I/O limit policy name."
        type: string
      description:
        description: "I/O limit policy description."
        type: string
      isShared:
        description: "Indicates whether the I/O limits defined in the I/O limit policy are shared among all assigned storage resources. Values are:
  <ul>
  <li>true - I/O limits are shared. The total I/O of the set of storage resources with this policy is limited.</li>
  <li>false - (Default) I/O limits are not shared. The I/O limit applies to each storage resource individually.</li>
  </ul>"
        type: boolean
      isPaused:
        description: "Indicates whether I/O limit policy is paused. Values are:
  <ul>
  <li>true - I/O limit policy is paused.</li>
  <li>false - (Default) I/O limit policy is not paused.</li>
  </ul>"
        type: boolean
      type:
        description: "IO limit policy type."
        $ref: '#/definitions/IOLimitPolicyTypeEnum'
      ioLimitRules:
        description: "(DEPRECATED)The references of the rules associated with the I/O limit policy, as defined by the ioLimitRule resource type.
  Currently, only one rule is supported per policy."
        type: array
        items:
          $ref: '#/definitions/ioLimitRule'
      ioLimitRuleSettings:
        description: "IO limit rules associated with the I/O limit policy, as defined by the ioLimitRuleSetting resource type.
  Currently, only one rule is supported per policy."
        type: array
        items:
          $ref: '#/definitions/ioLimitRuleSetting'
      luns:
        description: "LUNs to which the I/O limit policy applies, as defined by the LUN resource type."
        type: array
        items:
          $ref: '#/definitions/lun'
      snaps:
        description: "Snaps to which the I/O limit policy applies, as defined by the snap resource type."
        type: array
        items:
          $ref: '#/definitions/snap'
      state:
        description: "IO limit policy state."
        $ref: '#/definitions/IOLimitPolicyStateEnum'
  ioLimitRule:
    type: object
    x-tags:
      - ~Appendix
    description: "(DEPRECATED)Conditions under which the storage system applies I/O limits.
  On GUI and CLI, ioLimitPolicy and ioLimitRule are combined for now since we only support one I/O limit rule per I/O limit policy."
    properties:
      id:
        description: "Unique identifier of the ioLimitRule instance."
        type: string
      name:
        description: "I/O limit rule name."
        type: string
      description:
        description: "I/O limit rule description."
        type: string
      maxIOPS:
        description: "Read/write IOPS limit."
        type: integer
      maxKBPS:
        description: "Read/write KB/s limit."
        type: integer
      maxIOPSDensity:
        description: "Read/write density-based IOPS limit."
        type: integer
      maxKBPSDensity:
        description: "Read/write density-based KB/s limit."
        type: integer
      burstRate:
        description: "The percentage of read/write IOPS and/or KBPS over the limits a storage object is allowed to process during a spike in demand."
        type: integer
      burstTime:
        description: "How long a storage object is allowed to process burst traffic."
        type: string
        format: date-time
      burstFrequency:
        description: "How often a storage object is allowed to process burst traffic for the duration of burst time"
        type: string
        format: date-time
      ioLimitpolicy:
        description: "Information about the I/O limit policy to which the I/O limit rule is assigned, as defined
  by the ioLimitPolicy resource type."
        $ref: '#/definitions/ioLimitPolicy'
  ioLimitSetting:
    type: object
    x-tags:
      - ~Appendix
    description: "Global I/O limit settings."
    properties:
      id:
        description: "Unique identifier of the ioLimitSetting instance."
        type: string
      isPaused:
        description: "Indicates whether I/O limits are enabled on the storage resource. Values are:
  <ul>
  <li>true - I/O limits paused.</li>
  <li>false - I/O limits resumed.</li>
  </ul>"
        type: boolean
  ioModule:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies to physical deployments only.) Information about I/O module SLICs (small I/O cards) in the storage system.
  I/O modules provide connectivity between SPs and Disk-Array Enclosures (DAEs)."
    properties:
      id:
        description: "Unique identifier of the I/O module instance."
        type: string
      health:
        description: "Health information for the I/O module, as defined by the health resource type."
        $ref: '#/definitions/health'
      needsReplacement:
        description: "Indicates whether the I/O module needs replacement. Values are:
  <ul>
  <li>true - I/O module needs replacement.
  <li>false - I/O module does not need replacement.
  </ul>"
        type: boolean
      parent:
        description: "Resource type and unique identifier for the I/O module's parent enclosure."
        $ref: '#/definitions/resourceRef'
      slotNumber:
        description: "Slot where the I/O module is located in the parent enclosure."
        type: integer
      name:
        description: "I/O module name."
        type: string
      manufacturer:
        description: "Manufacturer of the I/O module."
        type: string
      model:
        description: "Manufacturer's model number for the I/O module."
        type: string
      emcPartNumber:
        description: "EMC part number for the I/O module."
        type: string
      emcSerialNumber:
        description: "EMC serial number for the I/O module."
        type: string
      vendorPartNumber:
        description: "Vendor part number for the I/O module."
        type: string
      vendorSerialNumber:
        description: "Vendor serial number for the I/O module."
        type: string
      systemName:
        description: "Name of the storage system associated with the I/O module."
        type: string
      parentStorageProcessor:
        description: "Parent Storage Processor of the IO Module."
        $ref: '#/definitions/storageProcessor'
  ipInterface:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about network interfaces in the storage system.
  <p/>
  Network interfaces enable and control access between the system, network, and
  configured hosts."
    properties:
      id:
        description: "Unique identifier of the ipInterface instance."
        type: string
      ipPort:
        description: "Physical port or link aggregation on the storage processor on which the
  interface is running, as defined by the ethernetPort resource type."
        $ref: '#/definitions/ipPort'
      ipProtocolVersion:
        description: "IP protocol version (IPv4 or IPv6)."
        $ref: '#/definitions/IpProtocolVersionEnum'
      ipAddress:
        description: "IPv4 or IPv6 address for the interface."
        type: string
      netmask:
        description: "IPv4 netmask for the interface, if the interface uses an IPv4 address."
        type: string
      v6PrefixLength:
        description: "IPv6 prefix length for the interface, if the interface uses an IPv6 address."
        type: integer
      gateway:
        description: "Gateway IP address."
        type: string
      vlanId:
        description: "Virtual Local Area Network (VLAN) identifier for the interface. The interface
  uses the identifier to accept packets that have matching VLAN tags.
  <p/>
  Values are 1 - 4094."
        type: integer
      type:
        description: "Type of the ip interface."
        $ref: '#/definitions/IpInterfaceTypeEnum'
  ipPort:
    type: object
    x-tags:
      - ~Appendix
    description: "IP Port information.
  <br/>
  ipPort is a base class for linkAggregation, ethernetPort and fsnPort."
    properties:
      id:
        description: "Unique identifier of the ipPort instance."
        type: string
      name:
        description: "IP Port name."
        type: string
      shortName:
        description: "Short name of the IP Port."
        type: string
      macAddress:
        description: "MAC address of the ipPort."
        type: string
      isLinkUp:
        description: "Indicates whether the ipPort has link."
        type: boolean
      isEnslaved:
        description: "Indicates whether the ipPort is a port included in link aggregation or fsnPort."
        type: boolean
      storageProcessor:
        description: "Parent Storage Processor of the ipPort."
        $ref: '#/definitions/storageProcessor'
  iscsiNode:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the iSCSI nodes in the storage system. An iSCSI node
  represents a single iSCSI initiator or target.
  <br/>
  iSCSI nodes are created automatically on every non-aggregated Ethernet port except of ports used for management access."
    properties:
      id:
        description: "Unique identifier of the iscsiNode instance."
        type: string
      name:
        description: "iSCSI node name."
        type: string
      ethernetPort:
        description: "Ethernet port associated with the iSCSI Node. (Each Ethernet port
  can be associated with one iSCSI node.)"
        $ref: '#/definitions/ethernetPort'
      alias:
        description: "Descriptive name of the iSCSI node. This name does not have to be unique."
        type: string
  iscsiPortal:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the iSCSI portals in the storage system."
    properties:
      id:
        description: "Unique identifier of the iscsiPortal instance."
        type: string
      ethernetPort:
        description: "Ethernet port used by the iSCSI portal."
        $ref: '#/definitions/ethernetPort'
      iscsiNode:
        description: "iSCSI node used by the iSCSI portal."
        $ref: '#/definitions/iscsiNode'
      ipAddress:
        description: "IP address of the iSCSI portal."
        type: string
      netmask:
        description: "IPv4 netmask for the network interface, if it uses an IPv4 address."
        type: string
      v6PrefixLength:
        description: "IPv6 prefix length for the interface, if it uses an IPv6 address."
        type: integer
      gateway:
        description: "IPv4 or IPv6 gateway address for the network interface."
        type: string
      vlanId:
        description: "Virtual Local Area Network (VLAN) identifier for the interface. The interface
  uses the identifier to accept packets that have matching VLAN tags.
  <p/>
  Values are 1 - 4094."
        type: integer
      ipProtocolVersion:
        description: "Indicates whether the iSCSI portal is over IPv4 or IPv6."
        $ref: '#/definitions/IpProtocolVersionEnum'
  iscsiSettings:
    type: object
    x-tags:
      - ~Appendix
    description: "Global ISCSI settings."
    properties:
      id:
        description: "Unique instance identifier.
  This is a singleton resource, so the id is always 0."
        type: string
      isForwardCHAPRequired:
        description: "If True, the iSCSI storage requires checking of the initiator. Forward CHAP
  secret, which is set for each initiator, otherwise the iSCSI storage does not
  require Forward CHAP."
        type: boolean
      reverseCHAPUserName:
        description: "Reverse CHAP user name, empty string indicates that chap is not set yet."
        type: string
      forwardGlobalCHAPUserName:
        description: "Forward global CHAP user name, empty string indicates that chap is not set yet."
        type: string
      iSNSServer:
        description: "iSNS server IP address, if configured."
        type: string
  job:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the jobs in the storage system.
  <br/>
  <br/>
  A job represents one management request, it consists of a series of tasks.
  <br/>
  A job could also contain a series of primitive REST API POST requests, each of 
  which maps to a task in the job. Such job is known as 'batch request job'. 
  <br/>
  Client can query the job instance to track its progress, results, and details of each task. 
  <br/>
  <br/>
  When a job is failed, the system might leave hehind unneeded resources that consume space. 
  You can manually delete any resources that were created for the failed job. 
  <br/>"
    properties:
      id:
        description: "Unique identifier of the job instance."
        type: string
      description:
        description: "Job description."
        type: string
      state:
        description: "Current state of the job."
        $ref: '#/definitions/JobStateEnum'
      stateChangeTime:
        description: "Date and time of the last state change for the job."
        type: string
        format: date-time
      submitTime:
        description: "Date and time when the job was submitted."
        type: string
        format: date-time
      startTime:
        description: "Date and time when the job started."
        type: string
        format: date-time
      endTime:
        description: "Date and time when the job ended."
        type: string
        format: date-time
      elapsedTime:
        description: "Amount of time for which the job has been running."
        type: string
        format: date-time
      estRemainTime:
        description: "Estimated time remaining until the job completes."
        type: string
        format: date-time
      progressPct:
        description: "Approximate percentage of the job that has completed."
        type: integer
      tasks:
        description: "Set of tasks within the job, as defined by the jobTask object."
        type: array
        items:
          $ref: '#/definitions/jobTask'
      parametersOut:
        description: "Output parameters and their values of what the job is calling."
        type: string
      messageOut:
        description: "Status messages for job"
        $ref: '#/definitions/message'
      isJobCancelable:
        description: "Is job cancelable"
        type: boolean
      isJobCancelled:
        description: "Is job cancelled"
        type: boolean
      clientData:
        description: "User-specified data for the job, provided by the client in the clientData
  request parameter."
        type: string
      affectedResource:
        description: "Primary resource affected by this job."
        $ref: '#/definitions/affectedResource'
  kmipServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the Key Management Interoperability Protocol (kmip) server configuration 
  of the storage system. You can configure one KMIP server which can be a cluster configuration.
  The KMIP server configuration is needed to enable external key management on the system and 
  the system should either be encrypted or encryption capable in order to add a KMIP server. 
  <br/>
  <br/>
  The Key Management Interoperability Protocol (KMIP) is a communication protocol that 
  defines message formats for the manipulation of cryptographic keys on a key management server.
  <br/>
  <br/>
  After you configure the KMIP server, you can enable key management on the system. 
  Ignition key of the system is managed by the KMIP server and a valid configuration
  is necessary to boot the system once enabled."
    properties:
      id:
        description: "Unique identifier of the KMIP server instance."
        type: string
      addresses:
        description: "List of addresses that correspond to the kmip servers. The system uses the
  addresses in the order in which they are listed."
        type: array
        items:
          type: string
      port:
        description: "Port number for establishing a connection to a KMIP server."
        type: integer
      timeout:
        description: "Timeout for establishing a connection to a KMIP server. If the system does
  not receive a reply from the KMIP server before the specified timeout,
  it stops sending requests."
        type: integer
      username:
        description: "Username for accessing the KMIP server."
        type: string
      members:
        description: "List of addresses and corresponding statuses of the KMIP server within a cluster."
        type: array
        items:
          $ref: '#/definitions/kmipServerStatus'
  lcc:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies to physical deployments only.) Information about Link Control Cards (LCCs) in the storage system."
    properties:
      id:
        description: "Unique identifier of the LCC instance."
        type: string
      health:
        description: "Health information for the LCC, as defined by the health resource type."
        $ref: '#/definitions/health'
      needsReplacement:
        description: "Indicates whether the LCC needs replacement. Values are:
  <ul>
  <li>true - LCC needs replacement.</li>
  <li>false - LCC does not need replacement.</li>
  </ul>"
        type: boolean
      parent:
        description: "Resource type and unique identifier of the LCC's parent enclosure."
        $ref: '#/definitions/resourceRef'
      slotNumber:
        description: "Slot number where the LCC is located in the parent enclosure."
        type: integer
      name:
        description: "LCC name."
        type: string
      manufacturer:
        description: "Manufacturer of the LCC."
        type: string
      model:
        description: "Manufacturer's model number for the LCC."
        type: string
      sasExpanderVersions:
        description: "Revision numbers of the LCC firmware."
        type: array
        items:
          type: string
      emcPartNumber:
        description: "EMC part number for the LCC."
        type: string
      emcSerialNumber:
        description: "EMC serial number for the LCC."
        type: string
      vendorPartNumber:
        description: "Vendor part number for the LCC."
        type: string
      vendorSerialNumber:
        description: "Vendor serial number for the LCC."
        type: string
      currentSpeed:
        description: "Current LCC speed."
        type: integer
      maxSpeed:
        description: "Maximum LCC speed."
        type: integer
      parentDae:
        description: "Parent Disk Array Enclosure (DAE) of the LCC."
        $ref: '#/definitions/dae'
  ldapServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the Lightweight Directory Access Protocol (LDAP) server used
  by the storage system as an authentication authority for administrative users. You
  can configure one LDAP server. The system uses the LDAP settings for
  facilitating access control to Unisphere and the Unisphere CLI, but not for
  facilitating access control to storage resources.
  <br/>
  <br/>
  LDAP is an application protocol for querying and modifying directory services
  running on TCP/IP networks. LDAP provides central management for network
  authentication and authorization operations by helping to centralize user and
  group management across the network. Integrating the system into an existing
  LDAP environment provides a way to control user and user group access to the
  system through Unisphere or the Unisphere CLI.
  <br/>
  <br/>
  After you configure LDAP settings for the system, you can manage users and
  user groups within the context of an established LDAP directory structure. For
  example, you can assign access permissions to the Unisphere CLI that are based
  on existing users and groups."
    properties:
      id:
        description: "Unique identifier of the ldapServer instance."
        type: string
      authority:
        description: "Name of the LDAP authority."
        type: string
      autoDiscover:
        description: "When true, the LDAP server addresses are obtained using DNS lookup on the LDAP authority (requires DNS to be configured)."
        type: boolean
      serverAddresses:
        description: "List of IP addresses of the LDAP server."
        type: array
        items:
          type: string
      port:
        description: "Port to connect to the LDAP server."
        type: integer
      bindDN:
        description: "Bind Distinguished Name (DN) of the user to be used when binding; that
  is, authenticating and setting up the connection to the LDAP Server.
  For example:  Administrator@mycompany.com or
               cn=Administrator,cn=Users,dc=mycompany,dc=com"
        type: string
      protocol:
        description: "Protocol used to connect to the LDAP server."
        $ref: '#/definitions/LDAPProtocolEnum'
      userSearchPath:
        description: "Path used to search for users on the directory server. For example:
  <br/>
  <br/> ou=People,dc=lss,dc=emc,dc=com"
        type: string
      groupSearchPath:
        description: "Path used to search for groups on the directory server. For example:
  <br/>
  <br/>
  uid=name,ou=people,dc=domaincomponent
  <br/>
  <br/>
  or
  <br/>
  <br/>
  dc=domain component"
        type: string
      userIdAttribute:
        description: "Name of the LDAP attribute whose value indicates the user ID.
  <br/>
  <br/>
  Default value is uid."
        type: string
      groupNameAttribute:
        description: "Name of the LDAP attribute whose value indicates the group name.
  <br/>
  <br/>
  Default value is cn."
        type: string
      userObjectClass:
        description: "LDAP object class for users.
  <br/>
  <br/>
  Default value is user.
  <br/>
  <br/>
  In Active Directory, groups and users are stored in the same directory path,
  and are in a class called group."
        type: string
      groupObjectClass:
        description: "LDAP object class for groups.
  <br/>
  <br/>
  Default value is group.
  
  <br/>
  <br/>
  In Active Directory, groups and users are stored in the same directory path
  and are in a class called group."
        type: string
      groupMemberAttribute:
        description: "Name of the LDAP attribute whose value contains the names of group members
  within a group.
  <br/>
  <br/>
  Default value is member."
        type: string
      timeout:
        description: "Timeout for establishing a connection to an LDAP server. If the system does
  not receive a reply from the LDAP
  server before the specified timeout, it stops sending requests.
  <br/>
  <br/>
  Default value is 30000 (30 seconds)."
        type: integer
  license:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about licenses on the storage system."
    properties:
      id:
        description: "Unique identifier of the license instance."
        type: string
      name:
        description: "License name."
        type: string
      isInstalled:
        description: "Indicates whether the license is installed or not."
        type: boolean
      version:
        description: "License version."
        type: string
      isValid:
        description: "Indicates whether the license is currently valid. Values are:
  <ul>
  <li>true - License is valid. It is either permanent, or the expiration date
  has not yet passed.</li>
  <li>false - License is invalid.</li>
  </ul>"
        type: boolean
      issued:
        description: "Date and time when the license became available."
        type: string
        format: date-time
      expires:
        description: "Date and time when the license will expire."
        type: string
        format: date-time
      isPermanent:
        description: "Indicates whether the license is permanent. Values are:
  <ul>
  <li>true - License is permanent.</li>
  <li>false - License is temporary.</li>
  </ul>"
        type: boolean
      feature:
        description: "Name of the feature that the license enables."
        $ref: '#/definitions/feature'
  linkAggregation:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies if link aggregation is supported.) Ethernet port link aggregation settings.
  <p/>
  Link aggregation lets you link Ethernet ports (for example, port 0 and port 1)
  on a Storage Processor (SP) to a single logical port, and therefore lets you
  use up to four Ethernet ports on the SP. If your system has two SPs, and you
  link two physical ports, the same ports on both SPs are linked for redundancy.
  For example, if you link port 0 to port 1, the system creates one link
  aggregation for these ports on SPA and another link aggregation on SPB.
  <p/>
  <b>Note: </b>You can aggregate only Ethernet ports belonging to the same I/O module
  or on-board Ethernet ports. Aggregation of ports from different I/O modules is not allowed.
  <p/>
  <b>Note: </b>You can aggregate only Ethernet ports with the same MTU size.
  <p/>
  <b>Note: </b>You can not add an Ethernet port to aggregation if there are iSCSI portals on it.
  <p/>
  Link aggregation provides the following advantages:
  <ul>
  <li>Increases overall throughput, since two physical ports are linked into one
  logical port.</li>
  <li>Provides basic load balancing across linked ports, since the network
  traffic is distributed across multiple physical ports.</li>
  <li>Provides redundant ports so that if one port in a linked pair fails, the
  system does not lose connectivity.</li>
  </ul>
  <b>Note: </b>With link aggregation, both linked ports must be connected to the
  same switch, and the switch must be configured to use the link aggregation that
  uses the Link Aggregation Control Protocol (LACP). The documentation that came
  with your switch should provide more information about using LACP.
  <p/>
  The Unisphere online Help provides more details on cabling the SPs to the
  Disk-Array Enclosures (DAEs)."
    properties:
      id:
        description: "Unique identifier of the linkAggregation instance."
        type: string
      name:
        description: "Link aggregation name."
        type: string
      shortName:
        description: "Short name for the link aggregation."
        type: string
      masterPort:
        description: "Master port of the link aggregation."
        $ref: '#/definitions/ethernetPort'
      ports:
        description: "List of aggregated Ethernet ports, including the master port."
        type: array
        items:
          $ref: '#/definitions/ethernetPort'
      mtuSize:
        description: "Maximum transmission unit (MTU) packet size for the linked ports, in bytes."
        type: integer
      minMtuSize:
        description: "Minimum configurable limit on Maximum transmission unit (MTU) packet size for the linked ports, in bytes."
        type: integer
      maxMtuSize:
        description: "Maximum configurable limit on Maximum transmission unit (MTU) packet size for the linked ports, in bytes."
        type: integer
      macAddress:
        description: "MAC address of the link aggregation."
        type: string
      isLinkUp:
        description: "Indicates whether the link aggregation has link."
        type: boolean
      health:
        description: "Health information for the link aggregation, as defined by the health resource type."
        $ref: '#/definitions/health'
      isIncludedInFSN:
        description: "Indicates whether the link aggregation was included in an FSN (fsnPort)."
        type: boolean
      storageProcessor:
        description: "SP on which the link aggregation resides, as defined by the storageProcessor resource type."
        $ref: '#/definitions/storageProcessor'
  loginSessionInfo:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about a REST API login session."
    properties:
      id:
        description: "Unique identifier of the loginSessionInfo instance."
        type: string
      domain:
        description: "Domain of the user logged into this session."
        type: string
      user:
        description: "Information about the user logged into this session, as defined by the user
  resource type."
        $ref: '#/definitions/user'
      roles:
        description: "List of roles for the user logged into this session, as defined by the role
  resource type."
        type: array
        items:
          $ref: '#/definitions/role'
      idleTimeout:
        description: "Number of seconds after last use until this session expires."
        type: integer
      isPasswordChangeRequired:
        description: "Indicates whether the password must be changed in order to use this session
  created for built-in admin account.
  <br/>
  <br/>
  Values are:
  <ul>
  <li>true - Password must be changed.</li>
  <li>false - Password does not need to be changed.</li>
  </ul>
  <br/>
  For information about changing the password for a local user, see the Help
  topic for the user resource type."
        type: boolean
  lun:
    type: object
    x-tags:
      - ~Appendix
    description: "A LUN (block storage) type storage resource,
  which may be a LUN in a consistency group, 
  a standalone LUN, or a VMWare VMFS LUN.
  Management of LUNs is performed via the storageResource object."
    properties:
      id:
        description: "Unique identifier of the LUN."
        type: string
      health:
        description: "Health information for the LUN, as defined by the health resource type."
        $ref: '#/definitions/health'
      name:
        description: "Name of the LUN."
        type: string
      description:
        description: "Description of the LUN."
        type: string
      type:
        description: "Type of the LUN."
        $ref: '#/definitions/LUNTypeEnum'
      sizeTotal:
        description: "LUN size that the system presents to the host or end user."
        type: integer
      sizeUsed:
        description: "Used size is not applicable to LUN and this value is not set."
        type: integer
      sizeAllocated:
        description: "Size of space actually allocated in the pool for the LUN:
  <ul>
  <li>For thin-provisioned LUNs this as a rule is less than the sizeTotal attribute until the LUN is not fully populated with user data.</li>
  <li>For not thin-provisioned LUNs this is approximately equal to the sizeTotal.</li>
  </ul>"
        type: integer
      sizePreallocated:
        description: "Space reserved from the pool by the LUN, for future needs to make writes more efficient.
  The pool may be able to reclaim some of this if space is running low."
        type: integer
      sizeAllocatedTotal:
        description: "Total pool space used in the pool for the LUN."
        type: integer
      dataReductionSizeSaved:
        description: "Storage element saved space by data reduction, which includes savings from compression, deduplication
  and advanced deduplication."
        type: integer
      dataReductionPercent:
        description: "Data reduction percentage is the percentage of the data that does not consume storage - the savings due to data reduction. 
  For example, if 1 TB of data is stored in 250 GB, the data reduction percentage is 75%. 75% data reduction percentage is equivalent 
  to a 4:1 data reduction ratio."
        type: integer
      dataReductionRatio:
        description: "Data reduction ratio.
  The data reduction ratio is the ratio between the size of the data and the amount of storage actually consumed. 
  For example, 1TB of data consuming 250GB would have a ration of 4:1. A 4:1 data reduction ratio is equivalent to a 75% data reduction percentage."
        type: number
        format: float
      perTierSizeUsed:
        description: "Sizes of space allocations by the LUN on the tiers of multi-tier storage pool.
  This list will have the same length as the tiers list on this LUN's pool, and the entries will correspond to those tiers.
  <br>
  Multi-tier storage pools can be created on a system with the FAST VP license installed."
        type: array
        items:
          type: integer
      isThinEnabled:
        description: "Indicates whether thin provisioning is enabled.
  <ul>
  <li>true - The LUN is thin provisioned.</li>
  <li>false - The LUN is not thin provisioned.</li>
  </ul>"
        type: boolean
      isDataReductionEnabled:
        description: "True if data reduction is enabled."
        type: boolean
      isAdvancedDedupEnabled:
        description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <li>true - Advanced deduplication is enabled on this LUN.</li>
  <li>false - Advanced deduplication is disabled on this LUN.</li>
  </ul>"
        type: boolean
      storageResource:
        description: "The storage resource with which LUN is associated."
        $ref: '#/definitions/storageResource'
      pool:
        description: "The pool in which the LUN is allocated."
        $ref: '#/definitions/pool'
      wwn:
        description: "The world wide name of the LUN."
        type: string
      tieringPolicy:
        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP tiering policy for the LUN."
        $ref: '#/definitions/TieringPolicyEnum'
      defaultNode:
        description: "The storage processor that is the default owner of this LUN."
        $ref: '#/definitions/NodeEnum'
      isReplicationDestination:
        description: "Indicates whether the LUN is a replication destination. Valid
  values are:
  <ul>
  <li>true - LUN is a replication destination.</li>
  <li>false - LUN is not a replication destination.</li>
  </ul>"
        type: boolean
      currentNode:
        description: "The storage processor that is the current owner of this LUN."
        $ref: '#/definitions/NodeEnum'
      snapSchedule:
        description: "Snapshot schedule for the LUN, as defined by the snapSchedule.
  This value is not set if the LUN is not associated
  with a snapshot schedule."
        $ref: '#/definitions/snapSchedule'
      isSnapSchedulePaused:
        description: "(Applies if the LUN has an associated snap schedule.) Indicates
  whether the snapshot schedule for the LUN is paused. Valid values
  are:
  <ul>
  <li>true - Snapshot schedule for the LUN is paused.</li>
  <li>false - Snapshot schedule for the LUN is active.</li>
  </ul>"
        type: boolean
      ioLimitPolicy:
        description: "I/O limit policy that applies to the LUN, as defined by the ioLimitPolicy resource type."
        $ref: '#/definitions/ioLimitPolicy'
      metadataSize:
        description: "Size of the LUN metadata."
        type: integer
      metadataSizeAllocated:
        description: "Size of pool space allocated for the LUN's metadata."
        type: integer
      snapWwn:
        description: "World Wide Name of the Snap Mount Point."
        type: string
      snapsSize:
        description: "Size of the LUN snapshots."
        type: integer
      snapsSizeAllocated:
        description: "Size of pool space allocated for snapshots of the LUN."
        type: integer
      hostAccess:
        description: "Host access permissions for the LUN."
        type: array
        items:
          $ref: '#/definitions/blockHostAccess'
      snapCount:
        description: "Number of direct snapshots of the LUN."
        type: integer
      isThinClone:
        description: "Indicates whether LUN is a thin clone on not.
  <ul>
  <li>true - The LUN is a thin clone.</li>
  <li>false - The LUN is not a thin clone.</li>
  </ul>"
        type: boolean
      familyBaseLun:
        description: "For a Thin Clone of a Standalone LUN/ LUN in a Consistency group, the unique identifier of the Base Source LUN.
  For a Base LUN, its unique identifier."
        $ref: '#/definitions/lun'
      parentSnap:
        description: "For a Thin Clone of a Standalone LUN/LUN in a Consistency group, the unique identifier of the source Snapshot. Applies only for Thin Clones."
        $ref: '#/definitions/snap'
      originalParentLun:
        description: "The Parent Lun. Applies only for Thin Clones."
        $ref: '#/definitions/lun'
      familySnapCount:
        description: "Total number of snapshots created in the LUN Family, including all derivative snapshot objects.
  This attribute is not applicable for a Thin Clone"
        type: integer
      familyCloneCount:
        description: "Total number of thin clones created in the LUN Family, including all derivative thin clones objects.
  This attribute is not applicable for a Thin Clone"
        type: integer
      nonBaseSizeAllocated:
        description: "Total amount of pool  space used by LUN snapshots and thin clones.
  This attribute is not applicable for a Thin Clone"
        type: integer
      familySizeAllocatedTotal:
        description: "Total amount of pool space reserved for the LUN.
  It is sum of sizeAllocated, nonBaseSizeAllocated and metadataSizeAllocated.
  This attribute is not applicable for a Thin Clone"
        type: integer
      nonBaseSize:
        description: "Thin Clones and Snapshots subscribed space for the LUN.
  This attribute is not applicable for a Thin Clone"
        type: integer
      migrationState:
        description: "Migration state for Destination PowerStore Orchestration."
        $ref: '#/definitions/DCMigrationStateEnum'
  memoryModule:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies to physical deployments only.) Information about memory modules in the storage system."
    properties:
      id:
        description: "Unique identifier of the memory module instance."
        type: string
      health:
        description: "Health information for the memory module, as defined by the health resource
  type."
        $ref: '#/definitions/health'
      needsReplacement:
        description: "Indicates whether the memory module needs replacement Values are:
  <ul>
  <li>true - Memory module needs replacement.</li>
  <li>false - Memory module does not need replacement.</li>
  </ul>"
        type: boolean
      parent:
        description: "Resource type and unique identifier of the memory module's parent enclosure."
        $ref: '#/definitions/resourceRef'
      slotNumber:
        description: "Slot number where the memory module is located in the parent enclosure."
        type: integer
      name:
        description: "Memory module name."
        type: string
      manufacturer:
        description: "Manufacturer of the memory module."
        type: string
      model:
        description: "Manufacturer's model number for the memory module."
        type: string
      firmwareVersion:
        description: "Firmware version number for the memory module."
        type: string
      size:
        description: "Memory size."
        type: integer
      emcPartNumber:
        description: "EMC part number for the memory module."
        type: string
      emcSerialNumber:
        description: "EMC serial number for the memory module."
        type: string
      vendorPartNumber:
        description: "Vendor part number for the memory module."
        type: string
      vendorSerialNumber:
        description: "Vendor serial number for the memory module."
        type: string
      parentStorageProcessor:
        description: "Parent storage processor of the memory module."
        $ref: '#/definitions/storageProcessor'
      isInserted:
        description: "Indicates whether the memory module is inserted:
  <ul>
  <li>true - Memory module is inserted.</li>
  <li>false - Memory module is not inserted.</li>
  </ul>"
        type: boolean
  metric:
    type: object
    x-tags:
      - ~Appendix
    description: "One of the following:
  <ul>
  <li>Performance measurements for the Unity system."
    properties:
      id:
        description: "Unique identifier for the metric instance."
        type: integer
      name:
        description: "Display name of the metric."
        type: string
      path:
        description: "Stat paths for the historical and real-time metrics. A stat path identifies a
  metric's location in the stats namespace. There are two types of stat paths:
  <ul>
  <li> stat paths for historical metrics</li>
  <li> Stat paths for real-time metrics</i>
  </ul>
  <br/>
  <b>stat paths for historical metrics</b>
  Use the following URI pattern to retrieve stat paths for all historical
  metrics:
  <br/>
  <br/>
  <span class=EMCCode>/api/types/metric/instances?compact=true&filter=isHistoricalAvailable eq true </span>
  <br/>
  <br/>
  <b>Stat path for real-time metrics</b>
  <br/>
  <br/>
  Use the following URI pattern to retrieve stat paths for all real-time
  metrics:
  <br/>
  <br/>
  <span class=EMCCode>/api/types/metric/instances?compact=true&filter=isRealtimeAvailable eq true </span>
  <br/>
  <br/>
  For both historical and real-time quey, the following URI pattern can be used to retrieve stat paths for a group of
  metrics. In this pattern, %25 is an encoded value for a percent sign (%).
  <br/>
  <br/>
  <span class=EMCCode>/api/types/metric/instances?compact=true&filter=path
  lk <i>metric-path</i>.%25</span>
  <br/>
  <br/>
  where <i>metric-path</i> is one of the stat paths listed below:
  <ul>
  <li>sp.*.blockCache - Counters for cache metrics</li>
  <li>sp*.cifs - CIFS protocol statistics</li>
  <li>sp.*.fibreChannel - Fibre Channel statistics</li>
  <li>sp.*.fs - File system statistics</li>
  <li>sp.*.ftp - FTP protocol statistics</li>
  <li>sp.*.http - HTTP protocol statistics</li>
  <li>sp.*.iscsi -  iSCSI protocol statistics</li>
  <li>sp.*.memory - Memory statistics</li>
  <li>sp.*.ndmp - NDMP protocal statistics</li>
  <li>sp.*.cpu - CPU statistics</li>
  <li>sp.*.net - Network interface and protocol statistics</li>
  <li>sp.*.nfs - NFS protocol statistics</li>
  <li>sp.*.ntp - NTP statistics</li>
  <li>sp.*.physical - Physical device statistics</li>
  <li>sp.*.replication - Replication statistics</li>
  <li>sp.*.rpc -  RPC statistics</li>
  <li>sp.*.ssh - SSH statistics</li>
  <li>sp.*.store - Storage hardware interface statistics</li>
  <li>sp.*.storage - Storage statistics</li>
  <li>sp.*.vhdx - Microsoft Hyper-V virtual disks statistics</li>
  <li>sp.*.virusChecker - Virus checker statistics</li>
  </ul>
  <br/>
  <br/>
  For example, to retrieve a list of available network performance metrics, you
  can use the following GET collection request:
  <br/>
  <br/>
  <span
  class=EMCCode>https://<i>ip-address</i>/api/types/metric/instances?compact=t
  rue&filter=path lk sp.*.net.%25</span>"
        type: string
      type:
        description: "Type of metric. Values are:
  <ul>
  <li>2 - 32 bits counter</li>
  <li>3 - 64 bits counter</li>
  <li>4 - rate</li>
  <li>5 - fact</li>
  <li>6 - text</li>
  <li>7 - 32 bits virtual counter</li>
  <li>8 - 64 bits virtual counter</li>
  </ul>"
        type: integer
      description:
        description: "Short description of the metric."
        type: string
      isHistoricalAvailable:
        description: "Indicates whether the metric is available for historical collection:
  <ul>
  <li>true - Metric is supported for historical collection.
  <li>false - Metric is not supported for historical collection.
  </ul>"
        type: boolean
      isRealtimeAvailable:
        description: "Indicates whether the metric is supported for real-time collection:
  <ul>
  <li> true - Metric is supported for real-time collection.
  <li>false - Metric is not supported for real-time collection.
  </ul>"
        type: boolean
      unitDisplayString:
        description: "Localized text used to describe the metric unit."
        type: string
  metricCollection:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about each metrics collection in the VNXe or Unisphere Central
  system."
    properties:
      id:
        description: "Unique identifier of the metricCollection resource type."
        type: string
      interval:
        description: "Interval associated with the metrics collection."
        type: integer
      oldest:
        description: "Date and time on which the oldest available metric data in the collection was
  collected."
        type: string
        format: date-time
      retention:
        description: "Number of days for which the metric data in the collection will be retained."
        type: integer
  metricQueryResult:
    type: object
    x-tags:
      - ~Appendix
    description: "A set of values for one or more metrics for a given period of time. Each
  metricQueryResult resource is associated with a metricRealTimeQuery resource
  (VNXe or Unisphere Central) or metricHistoricalQuery resource (Unisphere
  Central only).
  <p/>
  After you create a query, the results are available as a set of
  metricQueryResult resources, where the queryId attribute of each
  metricQueryResult resource matches the id attribute of the associated
  metricRealTimeQuery or metricHistoricalQuery resource.
  <p/>
  You can optionally delete the metricRealTimeQuery resource when it is no
  longer needed, or it will be deleted automatically when the expiration reached.
  This API requires a ?filter= URL parameter that filters on a valid queryId. 
  <p/>
  An example of a valid filter:
  <br>https://IP/api/types/metricQueryResult/instances?filter=queryId EQ 1"
    properties:
      queryId:
        description: "Identifier of the metricQueryResult instance. This value matches the id
  attribute of the associated metricRealTimeQuery or metricHistoricalQuery
  resource."
        type: integer
      path:
        description: "Path that corresponds to one of the metric paths specified in the associated
  metricHistoricalQuery or metricRealTimeQuery resource."
        type: string
      timestamp:
        description: "Date and time when the metrics sample was taken."
        type: string
        format: date-time
      values:
        description: "Metric values corresponding to the set of metrics listed in the
  associated query."
        $ref: '#/definitions/statValue'
  metricRealTimeQuery:
    type: object
    x-tags:
      - ~Appendix
    description: "Represents a query to obtain real-time information for one or more metrics,
  including a specified sampling frequency.
  <p/>
  After you create this query, the results are available as a set of
  metricQueryResult resources, where the queryId attribute of each
  metricQueryResult resource matches the id attribute of the associated
  metricRealTimeQuery resource (VNXe and Unisphere Central) or
  metricHistoricalQuery resource (Unisphere Central only).
  <p/>
  You can optionally delete the metricRealTimeQuery resource when it is no
  longer needed, or the resource will be deleted automatically when expiration is reached.
  <p/>
  <b>Note:</b> The metricRealTimeQuery resource does not support the filtering
  of response data.
  <p/>
  To query real-time information for one or more metrics, please follow below steps:<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, Run POST /api/types/metricRealTimeQuery/instances to create a real-time query.<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, Run GET /api/types/metricQueryResult/instances to get a real-time sample of metrics you queried.<br/><br/>

  An example to query real-time information of CPU busy and idle ticks:<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, POST api/types/metricRealTimeQuery/instances<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'paths': ['sp.*.cpu.summary.busyTicks' ,'sp.*.cpu.summary.idleTicks'],<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'interval': 5<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The response will be like the one below,<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'base': 'https://10.108.126.67/api/instances/metricRealTimeQuery',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'updated': '2017-03-07T05:58:44.669Z',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'links': [<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'rel': 'self',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'href': '/37'<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'content': {<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'id': 37, <strong>=====&gt; this id will be used in the second step</strong><br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'paths': [<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'sp.*.cpu.summary.busyTicks',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'sp.*.cpu.summary.idleTicks'<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'interval': 5,<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'maximumSamples': -1,<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'expiration': '2017-03-07T05:59:30.000Z'<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, GET /api/types/metricQueryResult/instances?filter=queryId eq 37<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Please note that the queryId here returned in the response of the first POST request. <br/><br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The response will be like the one below, <br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'base': 'https://10.108.126.67/api/types/metricQueryResult/instances?filter=queryId eq 37&amp;per_page=2000',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'updated': '2017-03-07T05:58:54.040Z',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'links': [<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'rel': 'self',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'href': '&amp;page=1'<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'entries': [<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'base': 'https://10.108.126.67/api/instances/metricQueryResult',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'updated': '2017-03-07T05:58:54.040Z',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'links': [<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'rel': 'self',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'href': '/37'<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'content': {<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'queryId': 37,<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'path': 'sp.*.cpu.summary.busyTicks',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'timestamp': '2017-03-07T05:58:50.000Z',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'values': {<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'spa': '3675787',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'spb': '1520850'<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'base': 'https://10.108.126.67/api/instances/metricQueryResult',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'updated': '2017-03-07T05:58:54.040Z',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'links': [<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'rel': 'self',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'href': '/37'<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'content': {<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'queryId': 37,<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'path': 'sp.*.cpu.summary.idleTicks',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'timestamp': '2017-03-07T05:58:50.000Z',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'values': {<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'spa': '31280263',<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'spb': '34352275'<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
  </p>
  </p>
  The metricRealTimeQuery resource will be deleted automatically when expiration is reached, or you can manually delete it by running DELETE
  /api/instances/metricRealTimeQuery/&lt;id&gt;.<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, To delete the query just created in the first step, run DELETE /api/instances/metricRealTimeQuery/37<br/>
  </p>
  </p>
  @docstatus Reviewed"
    properties:
      id:
        description: "Unique identifier of the metricRealTimeQuery instance."
        type: integer
      paths:
        description: "Metric stat paths associated with the query. To learn how to obtain stat paths
  for real-time metrics, see the description of the path attribute for the metric
  resource type."
        type: array
        items:
          type: string
      interval:
        description: "Sampling frequency for the query, in seconds."
        type: integer
      expiration:
        description: "Date and time when the query will expire. Once the expiration date/time has been reached, the query will automatically be deleted, along with the corresponding results.
  <p/> 
  This is strictly calculated by the server, and cannot be specified by the client. 
  If the user doesn't retrieve a query result through MetricQueryResult for 10 consecutive sample periods, the session will be deleted. This value shows the time(10 periods after the last query) at which the session will be deleted if no queries are received."
        type: string
        format: date-time
  metricService:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the metrics service configuration. There is only one
  occurrence of this resource type."
    properties:
      id:
        description: "Unique identifier of the metricService instance to modify. The value of this
  attribute is always 0, since it is a singleton resource type."
        type: integer
      isHistoricalEnabled:
        description: "Indicates whether historical metrics collection is enabled:
  <ul>
  <li>true - Historical metrics collection is enabled.
  <li>false - Historical metrics collection is disabled.
  </ul>"
        type: boolean
  metricValue:
    type: object
    x-tags:
      - ~Appendix
    description: "Historical values for requested metrics.
  <p/>
  <b>Note:</b> The maximum number of returned instances per page is 5 for the
  metricValue resource type. For more information about paging, see the
  <i>Unisphere Management REST API Programmer's Guide</i>.
  <br>Unlike other REST GETs, this API requires a ?filter= URL parameter that filters on at least <u>path</u>. It must be filtered to one or more paths
  <br><u>An example of a valid filter(s) :</u>
  <br>https://IP/api/types/metricValue/instances?filter=path EQ 'sp.*.physical.disk.*.responseTime'"
    properties:
      path:
        description: "Stat path for the metric. A stat path identifies the metric's location in the
  stats namespace."
        type: string
      timestamp:
        description: "Date and time when the metrics data was collected."
        type: string
        format: date-time
      interval:
        description: "Time interval of the requested sample."
        type: integer
      values:
        description: "Mapping of each returned element, such as LUN1 or LUN2, to its associated
  floating point value or its further mapping of elements to values."
        type: object
        additionalProperties:
          $ref: '#/definitions/floatOrValueMap'
  mgmtInterface:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about management interfaces in the storage system."
    properties:
      id:
        description: "Unique identifier of the mgmtInterface instance."
        type: string
      configMode:
        description: "Configuration mode."
        $ref: '#/definitions/InterfaceConfigModeEnum'
      ethernetPort:
        description: "Ethernet port on the storage processor on which the interface is running."
        $ref: '#/definitions/ethernetPort'
      protocolVersion:
        description: "IP protocol version (IPv4 or IPv6)."
        $ref: '#/definitions/IpProtocolVersionEnum'
      ipAddress:
        description: "IPv4 or IPv6 address for the interface."
        type: string
      netmask:
        description: "IPv4 netmask for the interface, if the interface uses an IPv4 address."
        type: string
      v6PrefixLength:
        description: "IPv6 prefix length for the interface, if the interface uses an IPv6 address."
        type: integer
      gateway:
        description: "Gateway IP address."
        type: string
  mgmtInterfaceSettings:
    type: object
    x-tags:
      - ~Appendix
    description: "Global settings for mgmtInterfaces."
    properties:
      id:
        description: "Unique instance identifier.
  This is a singleton resource, so the id is always 0."
        type: string
      v4ConfigMode:
        description: "IPv4 configuration mode."
        $ref: '#/definitions/InterfaceConfigModeEnum'
      v6ConfigMode:
        description: "IPv6 configuration mode."
        $ref: '#/definitions/InterfaceConfigModeEnum'
  moveSession:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about movesession.
  <br/>
  <br/>
  A customer environment is often ever-changing, and as a result the ability to 
  deliver business continuity and flexibility is paramount. The new local LUN migration 
  feature address this concern, by adding the ability to move LUNs and Consistency Groups 
  between Pools on a system. Local LUN migration can be used to rebalance storage resources 
  across Pools when customer activity changes and an individual Pool's usage becomes oversaturated. 
  Another use case for local LUN migration is to provide LUNs with a destination when a Pool is 
  to be decommissioned. By leveraging Unity's Transparent Data Transfer (TDX) engine, host access 
  remains fully online during the migration session."
    properties:
      id:
        description: "Unique identifier of the session."
        type: string
      sourceStorageResource:
        description: "Storage resource to be moved."
        $ref: '#/definitions/storageResource'
      sourceMemberLun:
        description: "The LUN being moved when the corresponding storageResource isn't specific enough, i.e. a Consistency Group member LUN or LUN VMFS Datastore."
        $ref: '#/definitions/lun'
      destinationPool:
        description: "Destination pool for the move."
        $ref: '#/definitions/pool'
      health:
        description: "The health of the session."
        $ref: '#/definitions/health'
      progressPct:
        description: "The progress of the session expressed as a percentage."
        type: integer
      currentTransferRate:
        description: "The current transfer rate of the session in MB/sec."
        type: integer
      avgTransferRate:
        description: "The average transfer rate of the session in MB/sec."
        type: integer
      estTimeRemaining:
        description: "The estimated time remaining based on the current transfer rate."
        type: string
        format: date-time
      state:
        description: "The current state of the session.  The session state represents the lifecycle of a session."
        $ref: '#/definitions/MoveSessionStateEnum'
      status:
        description: "The current session status of the TDX session."
        $ref: '#/definitions/MoveSessionStatusEnum'
      priority:
        description: "The priority of this storageResource move relative to other moves."
        $ref: '#/definitions/MoveSessionPriorityEnum'
  nasServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the NAS server in the storage system.
  <br/>
  <br/>
  NAS Servers are software components used to transfer data and provide the connection ports 
  for hosts to access file-level storage resources.
  NAS servers are independent from each other.
  <br/>
  <br/>
  NAS Servers access data on available drives making it available to network hosts
  via specific protocols (NFS/SMB/FTP/SFTP).
  Storage system supports NAS Servers for managing file-level storage resources, 
  such as VMware NFS datastores or file systems. 
  <br/>
  Before you can provision a file-level storage resource, a NAS Server must be created with 
  the necessary sharing protocols enabled. When NAS Servers are created, 
  you can specify the storage pool and owning SP - either SPA or SPB.
  <br/>
  In the storage systems, NAS Servers can leverage the Link Aggregation functionality to 
  create a highly available environment. Once a link aggregated port group is available, 
  you create or modify NAS Server network interfaces to leverage the available port group.  
  Because NAS Servers are accessible through only one SP at a time, they will fail over to 
  the other SP when there is an SP failure event."
    properties:
      id:
        description: "Unique identifier of the nasServer instance."
        type: string
      name:
        description: "User-specified name of the NAS server."
        type: string
      health:
        description: "Health information for the NAS server, as defined by the health resource type."
        $ref: '#/definitions/health'
      homeSP:
        description: "Storage Processor on which the NAS Server is intended to run."
        $ref: '#/definitions/storageProcessor'
      currentSP:
        description: "Storage Processor on which the NAS server is currently running."
        $ref: '#/definitions/storageProcessor'
      pool:
        description: "Storage pool that stores the NAS server's configuration metadata, as defined by the pool resource type."
        $ref: '#/definitions/pool'
      sizeAllocated:
        description: "Amount of storage pool space used for NAS server configuration."
        type: integer
      tenant:
        description: "Tenant to which the NAS Server belongs."
        $ref: '#/definitions/tenant'
      isReplicationEnabled:
        description: "Indicates whether a replication session is enabled for the NAS server.
  The NAS server can't be deleted while replication session is enabled.
  Values are:
  <ul>
  <li> true - Replication session is enabled. </li>
  <li> false - Replication session is disabled. </li>
  </ul>"
        type: boolean
      isReplicationDestination:
        description: "Indicates whether the NAS server is a replication destination.
  Values are:
  <ul>
  <li>true - NAS server is a replication destination.</li>
  <li>false - NAS server is a not a replication destination.</li>
  </ul>"
        type: boolean
      isBackupOnly:
        description: "Indicates whether the NAS server is used as backup only. Only a replication destination can be set as backup.
  Values are:
  <ul>
  <li>true - NAS server acts as backup only.</li>
  <li>false - Normal NAS server.</li>
  </ul>"
        type: boolean
      isMigrationDestination:
        description: "Indicates whether the NAS server is a migration destination. It can't be modified by client.
  Values are:
  <ul>
  <li>true - NAS server is a migration destination.</li>
  <li>false - NAS server is a not a migration destination.</li>
  </ul>"
        type: boolean
      replicationType:
        description: "Replication type."
        $ref: '#/definitions/ReplicationTypeEnum'
      syncReplicationType:
        description: "Sync Replication type."
        $ref: '#/definitions/ReplicationTypeEnum'
      defaultUnixUser:
        description: "Default Unix user name to use for an unmapped Windows user. This value only applies when the value of allowUnmappedUser is true."
        type: string
      defaultWindowsUser:
        description: "Default Windows user name to use for an unmapped Unix user. This value only applies when the value of allowUnmappedUser is true."
        type: string
      currentUnixDirectoryService:
        description: "Unix Directory Service used to look up users and hosts."
        $ref: '#/definitions/NasServerUnixDirectoryServiceEnum'
      isMultiProtocolEnabled:
        description: "Indicates whether multiprotocol sharing mode is enabled. 
  This mode enables simultaneous file access for Windows and Unix users. 
  Values are:
  <ul>
  <li> true - Multiprotocol sharing mode is enabled. </li>
  <li> false - Multiprotocol sharing mode is disabled. </li>
  </ul>"
        type: boolean
      isWindowsToUnixUsernameMappingEnabled:
        description: "Indicates whether a Unix to/from Windows user name mapping is enabled.
  Values are:
  <ul>
  <li> true - Unix to/from Windows user name mapping is enabled. </li>
  <li> false - Unix to/from Windows user name mapping is disabled. </li>
  </ul>"
        type: boolean
      allowUnmappedUser:
        description: "Indicates whether an unmappped user can access the NAS server as a default user.
  Values are:
  <ul>
  <li> true - Allow access for unmapped users. </li>
  <li> false - Disallow access for unmapped users. </li>
  </ul>"
        type: boolean
      isPacketReflectEnabled:
        description: "Indicates whether the reflection of outbound (reply) packets through the same
  interface that inbound (request) packets entered is enabled.
  Values are:
  <ul>
  <li> true - (Default) Packet Reflect is enabled. </li>
  <li> false - Packet Reflect is disabled. </li>
  </ul>"
        type: boolean
      fileSpaceUsed:
        description: "File systems' space used."
        type: integer
      dataReductionSizeSaved:
        description: "Storage element saved space by data reduction, which includes savings from compression, deduplication
  and advanced deduplication."
        type: integer
      dataReductionPercent:
        description: "Data reduction percentage is the percentage of the data that does not consume storage - the savings due to data reduction. 
  For example, if 1 TB of data is stored in 250 GB, the data reduction percentage is 75%. 75% data reduction percentage is equivalent 
  to a 4:1 data reduction ratio."
        type: integer
      dataReductionRatio:
        description: "Data reduction ratio.
  The data reduction ratio is the ratio between the size of the data and the amount of storage actually consumed. 
  For example, 1TB of data consuming 250GB would have a ration of 4:1. A 4:1 data reduction ratio is equivalent to a 75% data reduction percentage."
        type: number
        format: float
  nfsServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the Network File System (NFS) servers used by the storage system.
  You can configure one NFS server per NAS server.
  At least one NFS share must be created before an NFS client can connect to the storage system resources.
  NFS servers support the NFSv3 and NFSv4 protocols.
  The default protocol is NFSv3."
    properties:
      id:
        description: "Unique identifier of the nfsServer instance."
        type: string
      hostName:
        description: "Host name of the NFS server. 
  An administrator should ensure that NFS clients can resolve NAS Server IP addresses using this name. 
  You can configure this hostname and its production IP address(es) inside hosts file on the Unix client machine; or (recommended) add those records into your DNS.
  NOTE: normally when the NFS hostname matches with an AD-joined SMB/CIFS Server Computer Name 
  all production interfaces and the hostname are already registered within Microsoft DNS service."
        type: string
      nasServer:
        description: "NAS server associated with the NFS server."
        $ref: '#/definitions/nasServer'
      fileInterfaces:
        description: "Interfaces that use the NFS protocol to serve the NAS server's file systems."
        type: array
        items:
          $ref: '#/definitions/fileInterface'
      nfsv3Enabled:
        description: "Indicates whether NFSv3 is enabled on the NAS server specified in the nasServer attribute.
 When enabled - NFS shares can be accessed  with NFSv3 protocol.
 When disabled - NFS shares cannot be accessed with NFSv3 protocol. 
 Values are:
 <ul>
 <li> true - NFSv3 is enabled on the specified NAS server.</li>
 <li> false - NFSv3 is disabled on the specified NAS server.</li>
 </ul>"
        type: boolean
      nfsv4Enabled:
        description: "Indicates whether NFSv4 is enabled on the NAS server specified in the nasServer attribute.
 When enabled - NFS shares can be accessed with NFSv4 protocol.
 When disabled - NFS shares cannot be accessed with NFSv4 protocol. 
 Values are:
 <ul>
 <li> true - NFSv4 is enabled on the specified NAS server.</li>
 <li> false - NFSv4 is disabled on the specified NAS server.</li>
 </ul>"
        type: boolean
      isSecureEnabled:
        description: "Indicates whether secure NFS is enabled on the NFS server.
 Values are:
 <ul>
 <li> true - Secure NFS is enabled.</li>
 <li> false - Secure NFS is disabled.</li>
 </ul>"
        type: boolean
      kdcType:
        description: "Type of Kerberos Domain Controller used for secure NFS service."
        $ref: '#/definitions/KdcTypeEnum'
      servicePrincipalName:
        description: "The Service Principal Name (SPN) for the NFS Server.
  This name is updated automatically when the NFS server configuration changes."
        type: string
      isExtendedCredentialsEnabled:
        description: "Indicates whether the NFS server supports more than 16 Unix groups in a Unix credential.
  Values are:
  <ul>
  <li>true - NFS server supports more than 16 Unix groups in a Unix credential.
                   The NFS Server will send additional request to Unix Directory service to identify Unix groups.</li>
  <li>false - NFS server does not support more than 16 Unix groups in a Unix credential.</li>
  </ul>
  <b>Note:</b> The NFS server builds its own Unix credential when it supports more than 16 groups. This process can slow performance."
        type: boolean
      credentialsCacheTTL:
        description: "Sets the Time-To-Live expiration stamp for a Windows entry in the credentials cache.
  When failed mapping entries expire, the system retries mapping the UID to the SID."
        type: string
        format: date-time
  nfsShare:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about Network File System (NFS) shares in the storage system.
  <br/>
  <br/>
  NFS shares use the NFS protocol to provide an access point for configured
  Linux/Unix hosts or IP subnets to access shared folder storage. NFS network
  shares are associated with an NFS shared folder.
  <br/>
  <br/>
  <b>Note: </b>To manage NFS shares for snapshots, use the operations for this
  resource type. To manage NFS shares for file systems and VMware NFS datastores, use the applicable
  operations for the storageResource resource type, as described in the help
  topic for that resource type."
    properties:
      id:
        description: "Unique identifier of the nfsShare instance."
        type: string
      type:
        description: "Type of the NFS Share."
        $ref: '#/definitions/NFSTypeEnum'
      role:
        description: "Role of the NFS share."
        $ref: '#/definitions/NFSShareRoleEnum'
      filesystem:
        description: "(Applies to NFS shares that are not on snapshots.) Parent file system associated
  with the NFS share, as defined by the filesystem resource type."
        $ref: '#/definitions/filesystem'
      snap:
        description: "(Applies to NFS shares on snapshots.) Parent file system snapshot associated with
  the NFS share, as defined by the snap resource type."
        $ref: '#/definitions/snap'
      name:
        description: "NFS share name."
        type: string
      path:
        description: "Local path to a location within the file system.
  <br>
  <br>
  With NFS, each share must have a unique local path. <font color=#0f0f0f>By
  default, the system creates a share to the root of the file system (top-most
  directory) at file system creation time. </font>This path specifies the unique
  location of the file system on the storage system.
  <br>
  <br>
  Before you can create additional shares within an NFS shared folder, you must
  create directories within it from a Linux/Unix host that is connected to the
  file system. After a directory has been created from a mounted host, you can
  create a corresponding share and set access permissions accordingly."
        type: string
      exportPaths:
        description: "Export paths that can be used to mount and access share.
  The list is a combination of above name with all IP addresses fo the NFS server."
        type: array
        items:
          type: string
      description:
        description: "User defined NFS share description."
        type: string
      isReadOnly:
        description: "Indicates whether the NFS share is read-only. 
 
  Values are:
  <ul>
  <li> true - NFS share is read-only. </li>
  <li> false - NFS share is read-write. </li>
  </ul>"
        type: boolean
      creationTime:
        description: "Date and time when the NFS share was created."
        type: string
        format: date-time
      modificationTime:
        description: "Date and time when the NFS share was modified."
        type: string
        format: date-time
      defaultAccess:
        description: "Default NFS share access-level permissions."
        $ref: '#/definitions/NFSShareDefaultAccessEnum'
      minSecurity:
        description: "Minimal security level that must be provided by a client to mount the NFS share."
        $ref: '#/definitions/NFSShareSecurityEnum'
      nfsOwnerUsername:
        description: "(Applies to NFS shares of VMware NFS storage resources.)
 Default owner of the NFS share associated with the datastore. Required if secure NFS enabled. 
 For NFSv3 or NFSv4 without Kerberos, the default owner is root."
        type: string
      noAccessHosts:
        description: "Hosts with no access to the NFS share or its snapshots, as defined by the host
  resource type."
        type: array
        items:
          $ref: '#/definitions/host'
      readOnlyHosts:
        description: "Hosts with read-only access to the NFS share and its snapshots, as defined by
  the host resource type."
        type: array
        items:
          $ref: '#/definitions/host'
      readWriteHosts:
        description: "Hosts with read and write access to the NFS share and its snapshots, as
  defined by the host resource type."
        type: array
        items:
          $ref: '#/definitions/host'
      readOnlyRootAccessHosts:
        description: "Hosts with read-only root access to the NFS share and its
  snapshots, as defined by the host resource type."
        type: array
        items:
          $ref: '#/definitions/host'
      rootAccessHosts:
        description: "Hosts with root access to the NFS share and its snapshots, as defined by the
  host resource type."
        type: array
        items:
          $ref: '#/definitions/host'
      noAccessHostsString:
        description: "Hosts with no access to the NFS share or its snapshots,
  defined as comma-separated list of hostnames, subnets, IPs,
  domains or netgroups."
        type: string
      readOnlyHostsString:
        description: "Hosts with read-only access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
        type: string
      readWriteHostsString:
        description: "Hosts with read-write access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
        type: string
      readOnlyRootHostsString:
        description: "Hosts with read-only root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
        type: string
      readWriteRootHostsString:
        description: "Hosts with read-write root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
        type: string
      anonymousUID:
        description: "Specifies the user ID of the anonymous account."
        type: integer
      anonymousGID:
        description: "Specifies the group ID of the anonymous account."
        type: integer
      exportOption:
        description: "Specifies the bitmask of various options of the NFS share.
  Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS
  share per host is defined according the hostsString lists.
  Otherwise, the access is defined according the hostID lists.
  </li>
  <li> 0x0002 - noSUID - if set, do not allow access to set
  SUID. Otherwise, allow access.
  </li>
  </ul>"
        type: integer
  ntpServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Network Time Protocol (NTP) server settings.
  <br/>
  <br/>
  The system relies on NTP as a standard for synchronizing the system clock with
  other nodes on the network. NTP provides a way of synchronizing clocks of
  distributed systems within approximately
  one millisecond of each other. A Windows Active Directory domain controller
  can operate as a time server if the Windows Time Service is running on it.
  <br/>
  <br/>
  Some applications will not operate correctly if the clock on the system is not
  synchronized with the clock on connected hosts. Configure the system and any
  connected hosts to use the same time server. Doing so does the following:
  <ul>
  <li>
  Minimizes the chance that synchronization issues will arise between the system
  and connected hosts.
  </li>
  <li>
  Reduces the difficulty of reconciling timestamps used for log information in
  the different systems.
  </li>
  </ul>
  <b>Note:</b><b> </b>When using a NAS server for CIFS network shares, the
  system cannot access an Active Directory domain unless the system is
  synchronized within five minutes of the Active Directory controller for the
  domain where the network shares reside.
  <br/>
  <br/>
  You can configure a total of four NTP server addresses for the system. All NTP
  server addresses are grouped into a single NTP server record."
    properties:
      id:
        description: "Unique identifier of the ntpServer instance."
        type: string
      addresses:
        description: "List of NTP server IP addresses."
        type: array
        items:
          type: string
  pool:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about pools in the storage system.
  <br/>
  <br/>
  <b>Creating pools using Quick Start mode</b>
  <br/>
  <br/>
  You can use Quick Start mode to create system recommended pools based on the
  type and availability of drives in the system. In Quick Start mode, the system
  recommends separate pools for different drive types and uses default RAID
  configurations for the drives. A pool configured in Quick Start mode has only
  one tier.
  <br/>
  <br/>
  Quick Start mode is available when both of these conditions are met:
  <ul>
  <li>No pools exist on the system.</li>
  <li>The system is not licensed for FAST VP or FAST Cache.</li>
  </ul>
  <br/>
  To create pools using Quick Start mode, follow these steps:
  <ol>
  <li>Run POST <font
  color=#0f0f0f>api/types/pool/action/recommendAutoConfiguration. </font>
  <font color=#0f0f0f><br/></font>
  <font color=#0f0f0f><br/></font>
  <font color=#0f0f0f>The response body contains a set of poolSetting
  instances.</li></font>
  <font color=#0f0f0f><br/></font>
  <font color=#0f0f0f><li value=2>For each poolSetting instance returned
  in Step 1, run POST /api/types/pool/instances with the following arguments,
  using values obtained from the poolSetting instance:</li></font>
  <ul>
  <li>addRaidGroupParameters : [{dskGroup : poolSetting.storageConfiguration.possibleStorageConfigurations.diskGroup,</li>
  <li>numDisks : poolSetting.storageConfiguration.possibleStorageConfigurations.raidGroupConfigurations.diskCount,</li>
  <li>raidType : poolSetting.storageConfiguration.raidType,</li>
  <li>stripeWidth : poolSetting.storageConfiguration.possibleStorageConfigurations.raidGroupConfigurations.stripeWidths},...]</li>
  </ul>
  </ol>
  Pool creation examples:
  <br/>
  Simple pool with one RAID5 4+1:
  <br/>
  POST /api/types/pool/instances
  <br/> 
  {'name' : 'PerformancePool',<br/>
   'addRaidGroupParameters' : [<br/>
                                {'dskGroup' : {'id' : dg_15},<br/> 
                                 'numDisks' : 6,<br/>
                                 'raidType' : 1,<br/>
                                 'stripeWidth' : 5}<br/>
                              ]<br/>
  }<br/>
  <br/>
  Pool with raid group RAID10 1+1:
  <br/> 
  {'name' : 'SysDefPool00',<br/>
   'description' : 'The pool is created with RAID10(1+1)',<br/>
   'addRaidGroupParameters' : [<br/>
                               {'dskGroup' : {'id' : 'dg_16'},<br/>
                                'numDisks' : 5,<br/>
                                'raidType' : 7,<br/>
                                'stripeWidth' : 2}<br/>
                              ]<br/>
  }<br/>"
    properties:
      id:
        description: "Unique identifier of the pool instance."
        type: string
      health:
        description: "Health information for the pool, as defined by the health resource type."
        $ref: '#/definitions/health'
      name:
        description: "Pool name, unique in the storage system."
        type: string
      description:
        description: "Pool description."
        type: string
      raidType:
        description: "RAID type with which the pool is configured. A value of Mixed indicates that
  the pool consists of multiple RAID types."
        $ref: '#/definitions/RaidTypeEnum'
      sizeFree:
        description: "Size of free space available in the pool."
        type: integer
      sizeTotal:
        description: "The total size of space from the pool, which will be the sum of sizeFree, sizeUsed and 
  sizePreallocated space."
        type: integer
      sizeUsed:
        description: "Space allocated from the pool by storage resources, used for storing data. 
  This will be the sum of the sizeAllocated values of each storage resource in the pool."
        type: integer
      sizePreallocated:
        description: "Space reserved form the pool by storage resources, for future needs to make writes more efficient.
  The pool may be able to reclaim some of this if space is running low. This will be the sum of the 
  sizePreallocated values of each storage resource in the pool."
        type: integer
      dataReductionSizeSaved:
        description: "Amount of space saved for the pool by data reduction (includes savings from compression, deduplication and advanced deduplication)."
        type: integer
      dataReductionPercent:
        description: "Data reduction percentage is the percentage of the data that does not consume storage - the savings due to data reduction. 
  For example, if 1 TB of data is stored in 250 GB, the data reduction percentage is 75%. 75% data reduction percentage is equivalent 
  to a 4:1 data reduction ratio."
        type: integer
      dataReductionRatio:
        description: "Data reduction ratio.
  The data reduction ratio is the ratio between the size of the data and the amount of storage actually consumed. 
  For example, 1TB of data consuming 250GB would have a ration of 4:1. A 4:1 data reduction ratio is equivalent to a 75% data reduction percentage."
        type: number
        format: float
      flashPercentage:
        description: "Pool flash tier percentage"
        type: integer
      sizeSubscribed:
        description: "Size of space requested by the storage resources allocated in the pool for possible future allocations. 
  If this value is greater than the total size of the pool, the pool is considered oversubscribed."
        type: integer
      alertThreshold:
        description: "Threshold at which the system generates notifications about the size of
  free space in the pool, specified as a percentage.
  <p/>
  This threshold is based on the percentage of allocated storage in the pool
  compared to the total pool size."
        type: integer
      hasDataReductionEnabledLuns:
        description: "(Applies if Data Reduction is supported on the system and the corresponding license is installed.)
  Indicates whether the pool has any Lun that has data reduction ever turned on; Values are:
  <ul>
  <li>true -  Lun(s) in this pool have had or currently have data reduction enabled.</li>
  <li>false - No lun(s) in this pool have ever had data reduction enabled.</li>
  </ul>"
        type: boolean
      hasDataReductionEnabledFs:
        description: "(Applies if Data Reduction is supported on the system and the corresponding license is installed.)
  Indicates whether the pool has any File System that has data reduction ever turned on; Values are.
  <ul>
  <li>true -  File system(s) in this pool have had or currently have data reduction enabled.</li>
  <li>false - No file system(s) in this pool have ever had data reduction enabled.</li>
  </ul>"
        type: boolean
      isFASTCacheEnabled:
        description: "(Applies if FAST Cache is supported on the system and the corresponding license is installed.)
  Indicates whether the FAST Cache is enabled for the pool. Values are:
  <ul>
  <li>true - FAST Cache is enabled for the pool.</li>
  <li>false - FAST Cache is disabled for the pool.</li>
  FAST Cache is created from Flash SAS drives and applied only to RAID groups created of SAS and NL-SAS hard drives.
  If the pool is populated by purely Flash drives the FAST Cache is not enabled.
  </ul>"
        type: boolean
      tiers:
        description: "Tiers in the pool, as defined by the poolTier resource type."
        type: array
        items:
          $ref: '#/definitions/poolTier'
      creationTime:
        description: "Date and time when the pool was created."
        type: string
        format: date-time
      isEmpty:
        description: "Indicates whether the pool is unused; that is, whether it has no storage
  resources provisioned from it. Values are:
  <ul>
  <li>true - Pool is unused. </li>
  <li>false - Pool is used..</li>
  </ul>"
        type: boolean
      poolFastVP:
        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP information for the pool, as defined by the poolFastVP resource type.
  Pool is not eligible to be a multi-tier pool until FAST VP license installed."
        $ref: '#/definitions/poolFASTVP'
      isHarvestEnabled:
        description: "Indicates whether the automatic deletion of snapshots through pool space harvesting
  is enabled for the pool. See properties poolSpaceHarvestHighThreshold and poolSpaceHarvestLowThreshold.
  Values are:
  <ul>
  <li>true - Automatic deletion of snapshots through pool harvesting is enabled
  for the pool.</li>
  <li>false - Automatic deletion of snapshots through pool harvesting is
  disabled for the pool.</li>
  </ul>"
        type: boolean
      harvestState:
        description: "Current state of pool space harvesting."
        $ref: '#/definitions/UsageHarvestStateEnum'
      isSnapHarvestEnabled:
        description: "Indicates whether the automatic deletion of snapshots through snapshot
  harvesting is enabled for the pool. See properties snapSpaceHarvestHighThreshold and snapSpaceHarvestLowThreshold.
  Values are:
  <ul>
  <li>true - Automatic deletion of snapshots through snapshot harvesting is
  enabled for the pool.</li>
  <li>false - Automatic deletion of snapshots through snapshot harvesting is
  disabled for the pool.</li>
  </ul>"
        type: boolean
      poolSpaceHarvestHighThreshold:
        description: "(Applies when the automatic deletion of snapshots based on pool space usage is
  enabled for the system and pool.)
  <br/>
  <br/>
  Pool used space high threshold at which the system automatically starts to delete
  snapshot objects in the pool, specified as a percentage with .01% granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of space used in the pool by all types of objects compared
  to the total pool size. When the percentage of used space reaches this
  threshold, the system starts to automatically delete snapshot objects in the pool, until a low
  threshold (see poolSpaceHarvestLowThreshold) is reached."
        type: number
        format: float
      poolSpaceHarvestLowThreshold:
        description: "(Applies when the automatic deletion of snapshots based on pool space usage is
  enabled for the system and pool.)
  <br/>
  <br/>
  Pool used space low threshold under which the system stops automatically
  deleting snapshots in the pool, specified as a percentage with .01% granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of space used in the pool by all types of objects compared to the
  total pool size. When the percentage of used space in the pool falls below this
  threshold, the system stops the automatic deletion of snapshot objects in the pool,
  until a high threshold (see poolSpaceHarvestHighThreshold) is reached again."
        type: number
        format: float
      snapSpaceHarvestHighThreshold:
        description: "(Applies when the automatic deletion of snapshots based on snapshot space
  usage is enabled for the system and pool.)
  <br/>
  <br/>
  Space used by snapshot objects high threshold at which the system automatically starts to delete
  snapshot objects in the pool, specified as a percentage with .01% granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of space used in the pool by snapshot objects only
  compared to the total pool size. When the percentage of space used by snapshots
  reaches this threshold, the system automatically starts to delete snapshots in the pool,
  until a low threshold (see snapSpaceHarvestLowThreshold) is reached.
  Note that if Base LUN has Thin Clones its snapshot space doesn't affect this threshold."
        type: number
        format: float
      snapSpaceHarvestLowThreshold:
        description: "(Applies when the automatic deletion of snapshots based on snapshot space
  usage is enabled for the system and pool.)
  <br/>
  <br/>
  Space used by snapshot objects low threshold under which the system automatically stops
  deleting snapshots in the pool, specified as a percentage with .01% granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of space used in the pool by snapshots only
  compared to the total pool size. When the percentage of pool space used by
  snapshot objects falls below this threshold, the system automatically stops deletion
  of snapshots in the pool, until a high threshold (see snapSpaceHarvestHighThreshold) is reached again.
  Note that if Base LUN has Thin Clones its snapshot space doesn't affect this threshold."
        type: number
        format: float
      metadataSizeSubscribed:
        description: "Size of pool space subscribed for metadata."
        type: integer
      snapSizeSubscribed:
        description: "Size of pool space subscribed for snapshots."
        type: integer
      nonBaseSizeSubscribed:
        description: "Size of pool space subscribed for thin clones and snapshots"
        type: integer
      metadataSizeUsed:
        description: "Size of pool space used by metadata."
        type: integer
      snapSizeUsed:
        description: "Size of pool space used by snapshots."
        type: integer
      nonBaseSizeUsed:
        description: "Size of pool space used for thin clones and snapshots"
        type: integer
      rebalanceProgress:
        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  Percent of work completed for data rebalancing."
        type: integer
      type:
        description: "Indicates type of this pool. Values are:
  <ul>
  <li>Dynamic - It is dynamic pool.</li>
  <li>Traditional - It is traditional pool.</li>
  </ul>"
        $ref: '#/definitions/StoragePoolTypeEnum'
      isAllFlash:
        description: "Indicates whether this pool contains only Flash drives. Values are:
  <ul>
  <li>true - It is an all Flash pool.</li>
  <li>false - This pool contains drives other than Flash drives.</li>
  </ul>"
        type: boolean
  poolConsumer:
    type: object
    x-tags:
      - ~Appendix
    description: "poolConsumer class is representation of single object that consumes storage
  inside pools. There are two types of pool consumers: storage resources and NAS
  servers. NAS servers and storage resource except Consistency groups are always wholly
  allocated in one and only one storage pool. Consistency group can be allocated in more
  than one storage pool in case if the LUNs belonging to the group allocated in
  the different pools. The NAS servers consume space in the pool of constant size
  which is not changed once NAS server created."
    properties:
      id:
        description: "Unique ID of object."
        type: string
  poolConsumerAllocation:
    type: object
    x-tags:
      - ~Appendix
    description: "poolConsumerAllocation class represents size of pool's space allocated by the consumer
  (storageResources or nasServers) inside the pool. Most of consumers are always
  wholly allocated in one and only one storage pool. The only exception is
  consistencyGroup storage resource that can contain different LUNs that reside in
  different pools."
    properties:
      id:
        description: "Unique ID of poolConsumerAllocation object."
        type: string
      pool:
        description: "Storage pool reference."
        $ref: '#/definitions/pool'
      consumer:
        description: "The object allocated in the storage pool."
        $ref: '#/definitions/poolConsumer'
      consumerType:
        description: "Type of pool consumer object."
        $ref: '#/definitions/PoolConsumerTypeEnum'
      sizeAllocatedTotal:
        description: "Total space allocated in the storage pool for the consumer object."
        type: integer
      sizePreallocated:
        description: "Space reserved from the pool by the consumer object, for future needs to make writes more efficient. 
  The pool may be able to reclaim some of this if space is running low."
        type: integer
      snapsSizeAllocated:
        description: "Space allocated in the storage pool for snapshots of the consumer object."
        type: integer
      nonBaseSizeAllocated:
        description: "Storage element used non-base capacity"
        type: integer
  poolUnit:
    type: object
    x-tags:
      - ~Appendix
    description: "Pool units contribute space toward pool capacity.
  Currently, pool units are either external virtual disks (see virtualDisk object),
  or internal raid groups (see disk and raidGroup objects)."
    properties:
      id:
        description: "Unique identifier of the pool unit instance."
        type: string
      type:
        description: "Type of Pool Unit is either RAID group or external virtual disk."
        $ref: '#/definitions/PoolUnitTypeEnum'
      health:
        description: "Health information for the pool unit, as defined by the health resource type."
        $ref: '#/definitions/health'
      name:
        description: "Name of the pool unit instance."
        type: string
      description:
        description: "Pool Unit description."
        type: string
      wwn:
        description: "World Wide Name (WWN) of the Pool Unit."
        type: string
      sizeTotal:
        description: "Total usable size of the Pool Unit"
        type: integer
      tierType:
        description: "Pool Unit Tier type."
        $ref: '#/definitions/TierTypeEnum'
      pool:
        description: "The pool that is using this pool unit.
 A RAID group pool unit always belongs to a pool,
 but virtual disk pool units may exist prior to pool membership."
        $ref: '#/definitions/pool'
  powerSupply:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies to physical deployments only.) Information about power supplies in the storage system."
    properties:
      id:
        description: "Unique identifier of the powerSupply instance."
        type: string
      health:
        description: "Health information for the power supply, as defined by the health resource
  type."
        $ref: '#/definitions/health'
      needsReplacement:
        description: "Indicates whether the power supply needs replacement. Values are:
  <ul>
  <li>true - Power supply needs replacement.</li>
  <li>false - Power supply does not need replacement.</li>
  </ul>"
        type: boolean
      parent:
        description: "Resource type and unique identifier for the power supply's parent enclosure."
        $ref: '#/definitions/resourceRef'
      slotNumber:
        description: "Slot number where the power supply is located in the parent enclosure."
        type: integer
      name:
        description: "Power supply name."
        type: string
      manufacturer:
        description: "Manufacturer of the power supply."
        type: string
      model:
        description: "Manufacturer's model number for the power supply."
        type: string
      firmwareVersion:
        description: "Firmware version number for the power supply."
        type: string
      emcSerialNumber:
        description: "EMC serial number for the power supply."
        type: string
      vendorPartNumber:
        description: "Vendor part number for the power supply."
        type: string
      vendorSerialNumber:
        description: "Vendor serial number for the power supply."
        type: string
      emcPartNumber:
        description: "EMC part number for the power supply."
        type: string
      parentDae:
        description: "Parent Disk Array Enclosures (DAE) of the power supply."
        $ref: '#/definitions/dae'
      parentDpe:
        description: "Parent Disk Processor Enclosure (DPE) of the power supply."
        $ref: '#/definitions/dpe'
      storageProcessor:
        description: "Storage Processor that the power supply is associated to."
        $ref: '#/definitions/storageProcessor'
  preferredInterfaceSettings:
    type: object
    x-tags:
      - ~Appendix
    description: "The preferred interface of NAS server is an interface from which all the non-local outbound connections of this NAS server are initiated.
  The non-local connections are those which hosts can be accessed from this NAS server interfaces only via some router (gateway).
  <p/>
  The preferred interfaces for IPv4 and IPv6 are independent from each other. During the replication, the production interfaces
  could be activated and deactivated automatically, so the separate preferred interface settings are required for production and
  backup & DR testing interfaces. For each NAS server, the following preferred interface settings exist:
  <ol>
      <li>Production interfaces, IPv4.</li>
      <li>Production interfaces, IPv6.</li>
      <li>Backup & DR testing interfaces, IPv4.</li>
      <li>Backup & DR testing interfaces, IPv6.</li>
  </ol>
  <p/>
  Each of these settings could be set to the explicit interface. If it isn't set, corresponding interface will be selected automatically.
  <p/>
  The acting preferred interfaces, one for IPv4 and one for IPv6, are selected among active interfaces by the following rules, ordered by priority (highest first):
  <ol>
      <li>Manually selected interfaces have priority over automatically selected ones.</li>
      <li>Production interfaces have priority over backup and DR testing ones.</li>
      <li>The interface with the default gateway has priority over one not having one.</li>
      <li>From the otherwise equal priority interfaces, one with the most routes has the priority.</li>
      <li>From the otherwise equal priority interfaces, one with the minimal value of IP address (Sic!) has the priority.</li>
  </ol>
  <p/>
  <b>Note: </b>During the replication, on the destination side, only Backup & DR testing interfaces could be active.
  <p/>
  For the automatic selection, the interface re-selected each time any of this NAS interfaces or routes are changed.
  If the interface has been explicitly selected as preferred and then deleted, this type/class group setting
  (e.g. 'Production/IPv6') gets reset to automatic selection.
  <p/>
  During the replication, on the destination side, only the production interfaces settings could be overridden.
  It is controlled by the single flag both for IPv4 and IPv6 interfaces. Note that this flag is independent from
  the 'override' flag of the interface itself. If an interface is explicitly selected as preferred and then overridden,
  the interface is kept preferred.
  <p/>
  The acting preferred interfaces are marked by the corresponding property value, fileInterface.isPreferred == true.
  To get the list of the acting preferred interfaces of a NAS server, iterate its interface list checking the isPreferred property."
    properties:
      id:
        description: "Unique identifier of the Preferred Interface Settings object."
        type: string
      nasServer:
        description: "Identifier of the file server instance that uses this Preferred Interface Settings object. Only
  one Preferred Interface Settings object per file server is supported."
        $ref: '#/definitions/nasServer'
      productionIpV4:
        description: "Requested IPv4 production preferred interface"
        $ref: '#/definitions/fileInterface'
      productionIpV6:
        description: "Requested IPv6 production preferred interface"
        $ref: '#/definitions/fileInterface'
      backupIpV4:
        description: "Requested IPv4 backup preferred interface"
        $ref: '#/definitions/fileInterface'
      backupIpV6:
        description: "Requested IPv6 backup preferred interface"
        $ref: '#/definitions/fileInterface'
      sourceParameters:
        description: "Requested production preferred interfaces of the source NAS server.
  <p/>
  On the destination side of the active replication session:
      <li>The replicated IPv4 and IPv6 production interface settings are returned
      in the sourceParameters.productionIpV4 and sourceParameters.productionIpV6 fields.</li>
      <li>Regardless of the replicationPolicy settings, this property returns the replicated settings.</li>
  Without the active replication session or on the source side of such session:
      <li>Property is not populated.</li>"
        $ref: '#/definitions/preferredInterfaceSourceParameters'
      replicationPolicy:
        description: "Acting replication policy of the production preferred interfaces.
  <p/>
  On the destination side of the active replication session:
      <li>'Replicated' means that the settings for the production IPv4 and IPv6 preferred interface settings are replicated from the source side.</li>
      <li>'Overridden' means that the settings for the production IPv4 and IPv6 preferred interface settings are overridden on the destination side.</li>
  Without the active replication session or on the source side of such session:
      <li>Property is not populated.</li>"
        $ref: '#/definitions/ReplicationPolicyEnum'
  quotaConfig:
    type: object
    x-tags:
      - ~Appendix
    description: "A quotaConfig instance represents the quota configuration of either a tree quota or a file system."
    properties:
      id:
        description: "Unique identifier."
        type: string
      filesystem:
        description: "Associated file system."
        $ref: '#/definitions/filesystem'
      treeQuota:
        description: "Associated tree quota.
  <br> Only available for quota configuration of a tree quota."
        $ref: '#/definitions/treeQuota'
      quotaPolicy:
        description: "Quota policy."
        $ref: '#/definitions/QuotaPolicyEnum'
      isUserQuotaEnabled:
        description: "Whether user quota is enabled. Values are:
  <ul>
  <li> true - start tracking usages for all users on a file system or a quota tree, and user quota limits would be enforced. </li>
  <li> false - stop tracking usages for all users on a file system or a quota tree, and user quota limits will not be enforced. </li>
  <ul>"
        type: boolean
      isAccessDenyEnabled:
        description: "Whether access will be denied when the limit is exceeded. Values are:
  <ul>
  <li> true - Attempts to allocate additional storage will fail with out of space error, when the quota hard limit is exceeded or the soft limit is exceeded and the grace period is expired. </li>
  <li> false - Attempts to allocate additional storage will not fail because of quota limits. </li>
  </ul>"
        type: boolean
      gracePeriod:
        description: "Grace period of soft limits."
        type: integer
      defaultHardLimit:
        description: "Default hard limit of user quotas and tree quotas."
        type: integer
      defaultSoftLimit:
        description: "Default soft limit of user quotas and tree quotas."
        type: integer
      lastUpdateTimeOfTreeQuotas:
        description: "When tree quotas within a file system were last successfully updated. 
 <br> The value is null if it is a quotaConfig instance of a quota tree."
        type: string
        format: date-time
      lastUpdateTimeOfUserQuotas:
        description: "When user quotas within a file system or a quota tree were last successfully updated."
        type: string
        format: date-time
  raidGroup:
    type: object
    x-tags:
      - ~Appendix
    description: "RAID group objects in the pool and FAST Cache.
  RAID group is subclass of poolUnit type."
    properties:
      id:
        description: "Unique identifier of the RAID Group object."
        type: string
      type:
        description: "Type of pool unit.
  This will always be raid group."
        $ref: '#/definitions/PoolUnitTypeEnum'
      health:
        description: "Health information for the RAID group, as defined by the health resource type."
        $ref: '#/definitions/health'
      name:
        description: "RAID Group name."
        type: string
      description:
        description: "RAID Group description."
        type: string
      wwn:
        description: "World Wide Name (WWN) of the RAID Group."
        type: string
      sizeTotal:
        description: "User capacity of the RAID Group."
        type: integer
      tierType:
        description: "RAID group tier type."
        $ref: '#/definitions/TierTypeEnum'
      pool:
        description: "Pool to which the RAID group adds its capacity."
        $ref: '#/definitions/pool'
      diskGroup:
        description: "Disk group that contains the drives of RAID group. Applies to traditional pools only."
        $ref: '#/definitions/diskGroup'
      raidType:
        description: "RAID level (or RAID type) of the RAID group."
        $ref: '#/definitions/RaidTypeEnum'
      stripeWidth:
        description: "Stripe width (or RAID modulus) of the RAID group."
        $ref: '#/definitions/RaidStripeWidthEnum'
      parityDisks:
        description: "Number of parity drives in the RAID group."
        type: integer
      disks:
        description: "Drives in the RAID group. For dynamic pool, a drive can be in multiple raid groups in the same pool."
        type: array
        items:
          $ref: '#/definitions/disk'
  remoteInterface:
    type: object
    x-tags:
      - ~Appendix
    description: "All local and remote replication interfaces from all remote system connection configurations."
    properties:
      id:
        description: "Unique global identifier of the remoteInterface instance. This is combination of system serial number and the instance id as is from the remote system."
        type: string
      remoteId:
        description: "Unique identifier of the remoteInterface instance as is from remote system."
        type: string
      name:
        description: "User-specified remote interface name."
        type: string
      address:
        description: "IP address of the remote interface."
        type: string
      remoteSystem:
        description: "Unique identifier of the remote system, as defined by the remoteSystem resource type."
        $ref: '#/definitions/remoteSystem'
      node:
        description: "SP or node owning this interface."
        $ref: '#/definitions/NodeEnum'
      capability:
        description: "This property indicates the capability of the interface for replication sessions
  Values are:
  <ul>
  <li>0 - interface is capable of participating in SYNC replication sessions
  <li>1 - interface is capable of participating in ASYNC replication sessions
  <li>2 - interface is capable of participating in both SYNC and ASYNC replication sessions
  </ul>"
        $ref: '#/definitions/ReplicationCapabilityEnum'
  remoteSyslog:
    type: object
    x-tags:
      - ~Appendix
    description: "Configuration information for storage system remote logging.
  <br/>
  <br/>
  When you configure remote logging, you must specify the network address
  of a host that will receive the log data. The remote host must be accessible
  from the storage system, and security for the log information must be provided
  through network access controls or the system security at the remote host.
  <br/>
  <br/>
  By default, the storage system transfers log information on port 514 using the UDP protocol."
    properties:
      id:
        description: "Unique identifier of the remoteSyslog instance."
        type: string
      address:
        description: "IP address of the host where the storage system stores the remote log information. By
  default, the storage system stores log information on port 514."
        type: string
      protocol:
        description: "Protocol used to transfer messages to the remote log.
  <br/>
  <br/>
  Default protocol is UDP."
        $ref: '#/definitions/IpProtocolTypeEnum'
      facility:
        description: "Type of information to record in the remote system log. It is recommended that
  you specify 1 (User-level-Messages) for this value."
        $ref: '#/definitions/RemoteSyslogFacilityTypeEnum'
      enabled:
        description: "Indicates whether the logging to the remote log is enabled. Values are:
  <ul>
  <li>true - Logging to the remote log is enabled.</li>
  <li>false - Logging to the remote log is disabled.</li>
  </ul>"
        type: boolean
      severity:
        description: "The least severity level of information to record in the remoteSyslog accepts.
  <br/>
  <br/>
  Default severity is DEBUG."
        $ref: '#/definitions/SeverityEnum'
  remoteSystem:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about remote storage systems that connect to the system to which you are logged in. The system uses the configuration to access and communicate with the remote system. For example, to use remote replication, create a configuration that specifies the remote system to use as the destination for the replication session."
    properties:
      id:
        description: "Unique identifier of the remoteSystem instance."
        type: string
      name:
        description: "System name as reported by system.name on remote system."
        type: string
      model:
        description: "Model name of the remote system."
        type: string
      serialNumber:
        description: "Serial number of the remote system."
        type: string
      health:
        description: "Health information for the remote system, as defined by the health resource
  type."
        $ref: '#/definitions/health'
      managementAddress:
        description: "Management IP address of the remote system."
        type: string
      altManagementAddressList:
        description: "Alternate management IP addresses of the remote system."
        type: array
        items:
          type: string
      connectionType:
        description: "Type of the replication connection to the remote system."
        $ref: '#/definitions/ReplicationCapabilityEnum'
      syncFcPorts:
        description: "Fibre channel ports used for synchronous replication."
        type: array
        items:
          type: string
      username:
        description: "Username for accessing the remote system."
        type: string
      localSPAInterfaces:
        description: "SPA replication interface IP addresses of local system used in remote system connection configuration."
        type: array
        items:
          type: string
      localSPBInterfaces:
        description: "SPB replication interface IP addresses of local system used in remote system connection configuration."
        type: array
        items:
          type: string
      remoteSPAInterfaces:
        description: "SPA replication interface IP addresses of remote system used in remote system connection configuration."
        type: array
        items:
          type: string
      remoteSPBInterfaces:
        description: "SPB replication interface IP addresses of remote system used in remote system connection configuration."
        type: array
        items:
          type: string
      bandwidthSchedules:
        description: "A list of bandwidth schedules configured for asynchronous replications on this remote system.
  The first matched (by comparing current time with the days of the week plus the hours of the
  day of the bandwidth schedule) bandwidth schedule's bandwidth takes effect in that all synchronous
  replication sessions on this remote system as source role with active data transfer due to either
  RPO or manual sync would evenly share the bandwidth."
        type: array
        items:
          $ref: '#/definitions/remoteSystemBandwidthSchedule'
      currentBandwidth:
        description: "Current bandwidth calculated based on the configured bandwidth schedules and the schedule time zone for asynchronous replications on this remote system.
  Value is in KB/s and ranges from 0 to 524288000.
  No value means that the asynchronous replications on this remote system with source role will not be throttled."
        type: integer
  replicationInterface:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about replication interfaces in the storage system. These interfaces
  are used in remote replication connections and sessions for replication data transfer."
    properties:
      id:
        description: "Unique identifier of the replicationInterface instance."
        type: string
      ipPort:
        description: "Physical port or link aggregation on the storage processor on which the
  replication interface is running, as defined by the ipPort resource type."
        $ref: '#/definitions/ipPort'
      health:
        description: "Health of the replication interface, as defined by the health resource type."
        $ref: '#/definitions/health'
      ipAddress:
        description: "IP address of the replication interface."
        type: string
      ipProtocolVersion:
        description: "IP protocol version of the replication interface."
        $ref: '#/definitions/IpProtocolVersionEnum'
      netmask:
        description: "IPv4 netmask for the replication interface, if it uses an IPv4 address."
        type: string
      v6PrefixLength:
        description: "IPv6 prefix length for the replication interface, if it uses an IPv6 address."
        type: integer
      gateway:
        description: "IPv4 or IPv6 gateway address for the replication interface."
        type: string
      vlanId:
        description: "Virtual Local Area Network (VLAN) identifier for the replication interface. The
  interface uses the identifier to accept packets that have matching VLAN tags.
  <br/>
  <br/>
  Values are 0 - 4094. The default is 0, which means that the packets to accept
  do not have VLAN tags."
        type: integer
      macAddress:
        description: "MAC address of the virtual Ethernet port used for the replication interface. A
  physical Ethernet port has a different MAC address."
        type: string
      name:
        description: "Replication interface name."
        type: string
  replicationSession:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about replication sessions.
  <br/>
  <br/>
  Replication is a process in which storage data is duplicated either
  locally or to a remote network device.
  Replication produces a read-only, point-in-time copy of source data
  and periodically updates the copy, keeping it consistent with the source
  data. Replication provides an enhanced level of redundancy in case
  the main storage backup system fails. As a result, the:
  <ul>
  <li>Downtime associated cost of a system failure is minimized.
  <li>Recovery process from a natural or human-caused disaster is facilitated.
  </ul>
  A replication session establishes an end-to-end path for a replication 
  operation between a source and a destination. The replication source and 
  destination may be local or remote. The session establishes the path that
  the data follows as it moves from source to destination."
    properties:
      id:
        description: "Unique identifier of the replicationSession instance."
        type: string
      name:
        description: "User-specified replication session name."
        type: string
      replicationResourceType:
        description: "Replication resource type of replication session endpoints."
        $ref: '#/definitions/ReplicationEndpointResourceTypeEnum'
      status:
        description: "Replication status of the replication session."
        $ref: '#/definitions/ReplicationOpStatusEnum'
      health:
        description: "Health information for the replication session, as defined by the health
  resource type."
        $ref: '#/definitions/health'
      maxTimeOutOfSync:
        description: "Maximum time to wait before the system syncs the source and destination
  resources. Value of -1 specifies that automatic sync is not performed."
        type: integer
      srcStatus:
        description: "Status of the source end of the session."
        $ref: '#/definitions/ReplicationSessionStatusEnum'
      networkStatus:
        description: "Status of the network connection used by the replication session."
        $ref: '#/definitions/ReplicationSessionNetworkStatusEnum'
      dstStatus:
        description: "Status of the destination end of the replication session."
        $ref: '#/definitions/ReplicationSessionStatusEnum'
      lastSyncTime:
        description: "Date and time of the last replication synchronization."
        type: string
        format: date-time
      syncState:
        description: "Synchronization state between source and destination resource of the replication session."
        $ref: '#/definitions/ReplicationSessionSyncStateEnum'
      remoteSystem:
        description: "The remote system to which this replication session is connected, as defined by the remoteSystem resource type."
        $ref: '#/definitions/remoteSystem'
      localRole:
        description: "Role of the local system in the replication session."
        $ref: '#/definitions/ReplicationSessionReplicationRoleEnum'
      srcResourceId:
        description: "Identifier of the source resource in the replication session."
        type: string
      srcSPAInterface:
        description: "SP A interface used on the source system for the replication, if the
  replication session is a remote session."
        $ref: '#/definitions/remoteInterface'
      srcSPBInterface:
        description: "SP B interface used on the source system for the replication, if the
  replication session is a remote session."
        $ref: '#/definitions/remoteInterface'
      dstResourceId:
        description: "Identifier of the destination resource."
        type: string
      dstSPAInterface:
        description: "SP A interface used on the destination system for the replication,  if the
  replication session is a remote session."
        $ref: '#/definitions/remoteInterface'
      dstSPBInterface:
        description: "SP B interface used on the destination system for the replication, if the
  replication session is a remote session."
        $ref: '#/definitions/remoteInterface'
      members:
        description: "Information about the replication of each member lun in the group."
        type: array
        items:
          $ref: '#/definitions/lunMemberReplication'
      syncProgress:
        description: "Synchronization completion percentage between source and destination
        resources of the replication session."
        type: integer
      currentTransferEstRemainTime:
        description: "Estimated time left for the replication synchronization to complete."
        type: integer
      hourlySnapReplicationPolicy:
        description: "Hourly snap replication policy."
        $ref: '#/definitions/snapReplicationPolicy'
      dailySnapReplicationPolicy:
        description: "Daily snap replication policy."
        $ref: '#/definitions/snapReplicationPolicy'
  role:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the roles in the storage system. Each role identifies a level
  of authority for accessing and modifying the system."
    properties:
      id:
        description: "Unique identifier of the role instance."
        type: string
      name:
        description: "Name used to identify the role. Valid values are:
  <ul>
  <li>administrator - Administrator role. Can view status and performance
  information. Can also modify all storage system settings, including configure new storage
  hosts and manage local user, LDAP user, and LDAP group accounts.</li>
  <li>storageadmin - Storage administrator role. Can view status and performance
  information and can modify most system settings, but cannot configure new
  storage hosts or manage local user, LDAP user, or LDAP group accounts.</li>
  <li>vmadmin - VMware administrator role. Can establish a VASA connection from
  the vCenter to the storage system.</li>
  <li>operator - Operator role. Can view system settings, status, and performance
  information, but cannot modify system settings.</li>
  <li>securityadmin - Security administrator role. Can view and modify security settings; Can view system
  settings, status, and performance information, but cannot modify system settings.</li>
  </ul>"
        type: string
      description:
        description: "Role description."
        type: string
  roleMapping:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about role mappings in the storage system.
  <br/>
  <br/>
  Each role mapping associates a local user, LDAP user, or LDAP group with a
  role, granting that user or group administrative privileges on the system.
  <br/>
  <br/>
  When you create a local user through the REST API, the appropriate role
  mapping between the new user and the specified role is created implicitly by
  the storage system. When you create an LDAP user or group through the REST API,
  you must explicitly specify a role mapping for that user or group by creating a
  new roleMapping resource.
  <br/>
  <br/>
  For information about creating local users, see the Help topic for the user
  resource type."
    properties:
      id:
        description: "Unique identifier of the roleMapping instance."
        type: string
      authorityName:
        description: "Authority used to authorize the entity. Values are:
  <ul>
  <li>Local, for a local user.</li>
  <li>LDAP server authority name, for an LDAP user or group.</li)>
  </ul>"
        type: string
      roleName:
        description: "Role name to associate with the entity specified by the entityName attribute."
        type: string
      entityName:
        description: "Local user, LDAP user, or LDAP group name to associate with the role specified
  by the roleName attribute."
        type: string
      mappingType:
        description: "Indicates whether the role mapping is for a local user, LDAP user, or LDAP
  group."
        $ref: '#/definitions/RoleMappingTypeEnum'
  route:
    type: object
    x-tags:
      - ~Appendix
    description: "Manages static IP routes, including creating, modifying, and deleting these
  routes.
  <p/>
  A route determines where to send a packet next so it can reach its
  final destination. A static route is set explicitly and does not automatically
  adapt to the changing network infrastructure. A route is defined by an interface,
  destination IP address range and an IP address of a corresponding gateway.
  <p/>
  <b>Note: </b>IP routes connect an interface (IP address) to the larger
  network through gateways. Without routes, the interface is no longer
  accessible outside of its immediate subnet. As a result, network shares and
  exports associated with the interface are no longer available to clients
  outside their immediate subnet.
  <p/>
  Routes can be created only for iSCSI portals."
    properties:
      id:
        description: "Unique identifier of the route instance."
        type: string
      ipInterface:
        description: "Reference to IP interface."
        $ref: '#/definitions/ipInterface'
      iscsiPortal:
        description: "Reference to iscsiPortal."
        $ref: '#/definitions/iscsiPortal'
      fileInterface:
        description: "Reference to file Interface."
        $ref: '#/definitions/fileInterface'
      destination:
        description: "IP address of the target network node based on the specific route type. Values
  are:
  <ul>
  <li>For a default route, there is no value, because the system will use the
  specified gateway IP address.
  <li>For a host route, the value is the IP address.
  <li>For a subnet route, the value is a subnet IP address.
  </ul>"
        type: string
      netmask:
        description: "IPv4 netmask for the route, if it uses an IPv4 address."
        type: string
      v6PrefixLength:
        description: "IPv6 prefix length for the route, if it uses an IPv6 address."
        type: integer
      gateway:
        description: "IP address of the gateway associated with the route."
        type: string
      health:
        description: "Health of the route.
  The health can be impaired if the corresponding interface is changed in a manner incompatible
  with the route. Modify the route to make it consistent with the interface to restore health to
  normal, or remove the route if no longer needed."
        $ref: '#/definitions/health'
      isRouteToExternalServices:
        description: "Indicates whether this route is used for external services access like DNS, LDAP, NIS etc."
        type: boolean
  rpChapSettings:
    type: object
    x-tags:
      - ~Appendix
    description: "CHAP accounts management for RPA cluster. RPA iSCSI ports act as initiators 
 and log into storage targets, meanwhile, storage iSCSI ports act as 
 initiators and log into RPA targets as well. For security reason, forward 
 CHAP is supported on both directions. 
 Outgoing forward CHAP account is used by storage ports to log into RPAs and 
 incoming foward CHAP account is used by storage to authenticate RPA 
 initiators. However, for now incoming forward account is managed by 
 iscsiSettings and it will be moved here in later releases."
    properties:
      id:
        description: "Unique instance identifier."
        type: string
      outgoingForwardChapUsername:
        description: "Outgoing Forward CHAP user name, null string indicates chap not set."
        type: string
  sasPort:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies to physical deployments only.) Information about Serial Attached SCSI (SAS) ports in the storage system."
    properties:
      id:
        description: "Unique identifier of the SAS port instance."
        type: string
      health:
        description: "Health information for the SAS port, as defined by the health resource type."
        $ref: '#/definitions/health'
      needsReplacement:
        description: "Indicates whether the SAS port needs replacement. Values are:
  <ul>
  <li>true - SAS port needs replacement.</li>
  <li>false - SAS port does not need replacement.</li>
  </ul>"
        type: boolean
      parent:
        description: "Class and identifier of the SAS port's parent enclosure."
        $ref: '#/definitions/resourceRef'
      name:
        description: "SAS port name."
        type: string
      port:
        description: "<font color=#0f0f0f>Physical SAS port number on the storage processor.
  Valid values are 0 and 1.</font>"
        type: integer
      currentSpeed:
        description: "Current speed of the SAS port."
        $ref: '#/definitions/SpeedValuesEnum'
      connectorType:
        description: "Physical connector type."
        $ref: '#/definitions/ConnectorTypeEnum'
      storageProcessor:
        description: "SP on which the SAS port directly or indirectly resides, as defined by the storageProcessor resource type."
        $ref: '#/definitions/storageProcessor'
      parentIOModule:
        description: "(Applies if the SAS port resides on an I/O module.) Parent I/O module of the SAS port, as defined by the ioModule resource type."
        $ref: '#/definitions/ioModule'
      parentStorageProcessor:
        description: "(Applies if the SAS port resides directly on an SP.) Parent SP of the SAS port, as defined by the storageProcessor resource type."
        $ref: '#/definitions/storageProcessor'
  scheduleTimezone:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the time zone that is associated with all scheduled snapshots in the storage system."
    properties:
      id:
        description: "Unique identifier of the timezone instance. Because timezone is a
  singleton resource type, the value of this field is always 0."
        type: string
      timezone:
        description: "Timezone that is associated with all scheduled snapshots."
        $ref: '#/definitions/ScheduleTimezoneCandidatesEnum'
  securitySettings:
    type: object
    x-tags:
      - ~Appendix
    description: "All the system level security settings.
 <br/>
 Use this resource to enable and disable system level security settings. 
 <br/>
 The settings include:
 <br/>
 <br/>
 a) FIPS 140-2
 <br/>
  Information about whether the system is working in Federal Information
  Processing Standard (FIPS) 140-2 mode.
  <br/>
  <br/>
  The storage systems support FIPS 140-2 mode for the RSA BSAFE SSL modules on the
  storage pocessor that handle client management traffic. Management
  communication into and out of the system is encrypted using SSL. As a part of
  this process, the client and the Storage Management Server negotiate a cipher
  suite to use in the exchange. The use of FIPS 140-2 mode restricts the
  allowable set of cipher suites that can be selected in the negotiation
  to those that are sufficiently strong.
  <br/>
  <br/>
  If FIPS 140-2 mode is enabled, you may find that some of your existing clients
  can no longer communicate with the management ports of the array if they do not
  support a cipher suite of acceptable strength.

  <br/>
  <br/>
 b) SSO 
  <br/>
  Information about whether the system is participating in Single Sign On mode.
  <br/>
  <br/>
  In Single Sign On (SSO) mode, Unisphere Central (UC) becomes the authentication 
  server for multiple storage system, thus creating a shared authentication domain 
  where cross-array operations can be performed without re-entering user credentials.
  <br/>
  <br/>
  If SSO is enabled, the system will participate in Single Sign On mode,
  and authenticate against Unisphere Central previously configured on this array.

  <br/>
  <br/>
 c) TLS Mode
  <br/>
  Information about which TLS protocol versions the Storage Management Server allows for TLS communication.
  <br/>
  <br/>
  Management communication into and out of the Storage Management Server is encrypted using TLS.
  As a part of this process, the client and the Storage Management Server negotiate a TLS protocol version to use.
  By default, the Storage Management Server supports TLSv1.0, TLSv1.1 and TLSv1.2 protocols for TLS communications.
 TLS Mode tls1_0 means that the Storage Management Server will support TLSv1.0, TLSv1.1, and TLSv1.2 protocols.
 TLS Mode tls1_1 means that the Storage Management Server will only support TLS communications using the TLSv1.1 and TLSv1.2 protocols and TLSv1.0 will not be considered a valid protocol.
 TLS Mode tls1_2 means that the Storage Management Server will only support TLS communications using the TLSv1.2 protocol. TLSv1.0 and TLSv1.1 will not be considered valid protocols.
  <br/>
  <br/>
  Disabling TLSv1.0 may impact existing client applications which are not compatible with TLSv1.1 or TLSv1.2 protocols. Similarly, disabling TLSv1.0 and TLSv1.1 may impact existing client applications which are not compatible with TLSv1.2 protocol.
  In these cases, TLSv1.0 and/or TLSv1.1 support should remain enabled. Please refer to the security configuration guide for backward compatibility.
  <br/>
  <br/>
  NOTE: The modification of the supported TLS protocol versions for the NAS server is handled separately. Please use the svc_nas service script to configure the 
  supported TLS protocol versions for the NAS server."
    properties:
      id:
        description: "Unique identifier of the securitySettings instance. The value of this
  attribute is always 0, because securitySettings is a singleton resource type."
        type: string
      isFIPSEnabled:
        description: "Indicates whether the system is working in FIPS 140-2 mode. Values are:
  <ul>
  <li>true - System is working in FIPS 140-2 mode.</li>
  <li>false - System is not working in FIPS 140-2 mode.</li>
  </ul>"
        type: boolean
      isSSOEnabled:
        description: "Indicates whether the system has SSO enabled or not. Values are:
  <ul>
  <li>true - System is participating in SSO</li>
  <li>false - System is not participating in SSO</li>
  </ul>"
        type: boolean
      isTLS1Enabled:
        description: "Indicates whether the system has TLS 1.0 enabled or not. Values are:
  <ul>
  <li>true - TLS 1.0 is enabled</li>
  <li>false - TLS 1.0 is disabled</li>
  </ul>"
        type: boolean
      tlsMode:
        description: "Indicates the TLS mode."
        $ref: '#/definitions/SecuritySettingsTLSModeEnum'
  serviceAction:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about storage system service actions.
  <br/>
  <br/>
  Collect Service Information (dataCollection): Collect information about the storage system and save it to a file. Your service provider can use the collected information to analyze the storage system. 
  <br/>
  <br/>
  Save Configuration (configCapture): Save details about the configuration settings on the storage system to a file. Your service provider can use this file to assist you with reconfiguring your system after a major system failure or a system reinitialization.
  <br/>
  <br/>
  Restart Management Software (restartMGT): Restart the management software to resolve connection problems between the system and Unisphere.
  <br/>
  <br/>
  Reinitialize (reinitialize): Reset the storage system to the original factory settings. Both SPs must be installed and operating normally be in Service Mode.
  <br/>
  <br/>
  Change Service Password (changeServicePassword): Change the service password for accessing the Service System page.
  <br/>
  <br/>
  Shut Down System (shutdownSystem): The system shut down and power cycle procedures will attempt to resolve problems with your storage system that could not be resolved by rebooting or reimaging the SP.
  <br/>
  <br/>
  Disable SSH/Enable SSH (changeSSHStatus): Disable the Secure Shell (SSH) protocol to block SSH access to the system, or enable the Secure Shell (SSH) protocol to enable access to the system.
  <br/>
  <br/>
  Enter Service Mode (enterServiceModeSPA, enterServiceModeSPB): Stop I/O on the SP so that the SP can enter service mode safely.
  <br/>
  <br/>
  Reboot (rebootSPA, rebootSPB): Reboot the selected SP. Use this service action to attempt to resolve minor problems related to system software or SP hardware components.
  <br/>
  <br/>
  Reimage (rebootSPA, rebootSPB): Reimage the selected SP. Reimaging analyzes the system software on the SP and attempts to correct any problems automatically.
  <br/>
  <br/>
  Reset and Hold(resetAndHoldSPA, resetAndHoldSPB): Reset and hold the selected SP. Use this service task to attempt to reset and hold the SP, so that users can replace the faulty IoModule(s) on that SP.
  <br/>
  <br/>"
    properties:
      id:
        description: "Unique identifier of the serviceAction instance."
        type: string
      scope:
        description: "Current service action scope."
        $ref: '#/definitions/SvcScopeEnum'
      name:
        description: "Localized service action name."
        type: string
      description:
        description: "Localized service action description."
        type: string
      isApplicable:
        description: "Indicates whether the service action can be executed.
 Values are:
       <ul>
          <li>true - Service action can be executed.</li>
          <li>false - Service action cannot be executed.</li>
       </ul>"
        type: boolean
      applyCondition:
        description: "Localized description of the condition under which the service action is applicable."
        type: string
  serviceContract:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies if EMC Support is available.) Information about service contracts."
    properties:
      id:
        description: "Unique identifier of the serviceContract instance."
        type: string
      contractId:
        description: "Unique service contract identifier."
        type: integer
      contractNumber:
        description: "Contract number generated for the customer."
        type: string
      contractStatus:
        description: "Current service contract status."
        $ref: '#/definitions/ServiceContractStatusEnum'
      levelOfService:
        description: "Level of service that the service contract provides."
        type: string
      serviceLineId:
        description: "Service offering identifier."
        type: string
      lastUpdated:
        description: "Date of last service contract renewal."
        type: string
        format: date-time
      productStartDate:
        description: "Service contract start date."
        type: string
        format: date-time
      productEndDate:
        description: "Service contract end date."
        type: string
        format: date-time
  serviceInfo:
    type: object
    x-tags:
      - ~Appendix
    description: "Service-related storage system information. You can use this information 
  for servicing the storage system.
  <br/>
  <br/>"
    properties:
      id:
        description: "Unique identifier of the serviceInfo instance. Because serviceInfo is a 
  singleton resource type, the value of this field is always 0."
        type: string
      productName:
        description: "Product name, for example, Unity400. Usually, it's same as the system.model."
        type: string
      productSerialNumber:
        description: "Product serial number. This has the same value as system.serialNumber."
        type: string
      systemUUID:
        description: "(Applies to virtual deployments only.) Unique system identifier required to service the storage system."
        type: string
      isSSHEnabled:
        description: "Indicates whether Secure Shell (SSH) is enabled on the storage system. Values are:
  <ul>
  <li>true - SSH is enabled.</li>
  <li>false - SSH is not enabled.</li>
  </ul>"
        type: boolean
      sps:
        description: "Storage processor information, as defined by the svcStorageProcessor resource type."
        type: array
        items:
          $ref: '#/definitions/svcStorageProcessor'
  smtpServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the SMTP servers in the storage system. You can define up to
  two SMTP servers:
  <br/>
  <br/>
  <ul>
  <li> The default SMTP server sends email alerts to the IP addresses specified
  in the AlertConfigSNMPTarget resource when it encounters alert or error
  conditions. </li>
  <br/>
  <br/>
  <li>The ConnectEMC SMTP server sends the same alerts to the dial-home
  addresses specified in the AlertConfigSNMPTarget resource. It also sends
  additional information, if any, to EMC Support.</li>
  <li>If EMC Secure Remote Support (ESRS) is configured, the system uses that
  mechanism instead of the ConnectEMC SMTP server to send alert information.</li>
  </ul>"
    properties:
      id:
        description: "Unique identifier of the smtpServer instance."
        type: string
      address:
        description: "IP address of the SMTP server. If a port is not specified, default port 25 will be used."
        type: string
      username:
        description: "User name."
        type: string
      authType:
        description: "Authentication type."
        $ref: '#/definitions/AuthTypeEnum'
      sslMethod:
        description: "SSL Method."
        $ref: '#/definitions/SSLMethodEnum'
      isBypassProxyEnabled:
        description: "Whether to bypass the global proxy settings in supportProxy resource. By default, this value is false, and the SMTP server is accessed according to the proxy settings in the supportProxy resource. If this is set to true, the SMTP server will be accessed directly instead of using the supportProxy proxy settings."
        type: boolean
      type:
        description: "SMTP server type."
        $ref: '#/definitions/SmtpTypeEnum'
  snap:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about storage resource snapshots in the storage system."
    properties:
      id:
        description: "Unique identifier of the snap instance."
        type: string
      name:
        description: "Snapshot name."
        type: string
      description:
        description: "Snapshot description."
        type: string
      storageResource:
        description: "Storage resource for which the snapshot was taken as defined by the storageResource resource type."
        $ref: '#/definitions/storageResource'
      lun:
        description: "For a snapshot of a LUN in a Consistency group, the unique identifier of the source LUN
  as defined by the lun resource type."
        $ref: '#/definitions/lun'
      familyBaseStorageResource:
        description: "The unique identifier of the Base Source Storage Resource."
        $ref: '#/definitions/storageResource'
      familyBaseLun:
        description: "For a snapshot of a LUN in a Consistency group, the unique identifier of
  the Base Source LUN."
        $ref: '#/definitions/lun'
      snapGroup:
        description: "For a snapshot of a LUN in a Consistency group, the unique identifier of the snapshot group
  to which the snapshot belongs, as defined by the snap resource type."
        $ref: '#/definitions/snap'
      parentSnap:
        description: "For a snapshot of another snapshot, the unique identifier of the parent snapshot,
  as defined by the snap resource type."
        $ref: '#/definitions/snap'
      creationTime:
        description: "Date and time on which the snapshot was taken."
        type: string
        format: date-time
      expirationTime:
        description: "Date and time after which the snapshot will expire."
        type: string
        format: date-time
      lastRefreshTime:
        description: "Date and time of last refresh operation"
        type: string
        format: date-time
      creatorType:
        description: "Type of creator that created this snapshot."
        $ref: '#/definitions/SnapCreatorTypeEnum'
      creatorUser:
        description: "For a user-created snapshot, information about the user that created the snapshot,
  as defined by the user resource type."
        $ref: '#/definitions/user'
      creatorSchedule:
        description: "For a schedule-created snapshot, information about the snapshot schedule that
  created the snapshot, as defined by the snapSchedule resource type."
        $ref: '#/definitions/snapSchedule'
      isSystemSnap:
        description: "Indicates whether the snapshot is an internal snapshot. Internal snapshots are created
  by the Replication feature. End user operations are not permitted on internal snapshots.
  Values are: <ul> <li>true - Snapshot is internal.</li> <li>false - Snapshot is external.</li> </ul>"
        type: boolean
      isModifiable:
        description: "Indicates whether the snapshot is attached or shared in a manner making it writable by clients.
  Values are: <ul> <li>true - Snapshot can be modified.</li>
  <li>false - Snapshot cannot be modified.</li> </ul>
  Snapshots of file systems and VMware NFS datastores are modifiable when they are created with protocol access.
  Snapshots of LUNs, Consistency Groups and VMware VMFS datastores are modifiable when they are attached."
        type: boolean
      attachedWWN:
        description: "For an attached snapshot, the World Wide Name (WWN) of the attached LUN."
        type: string
      accessType:
        description: "For a file system or VMware NFS datastore snapshot, indicates whether the
  snapshot has checkpoint or protocol type access."
        $ref: '#/definitions/FilesystemSnapAccessTypeEnum'
      isReadOnly:
        description: "Indicates whether the snapshot is read-only.
  Values are: <ul> <li>true - Snapshot cannot be modified.</li>
  <li>false - Snapshot can be modified.</li> </ul>
  Snapshots of file systems and VMware NFS datastores are read-only when they are created with checkpoint access.
  Snapshots of LUNs, Consistency Groups and VMware VMFS datastores are read-only when they are attached with read-only access or without access."
        type: boolean
      lastWritableTime:
        description: "If not attached or shared, and was attached or shared in the past, time of last
  unattach or share deletion."
        type: string
        format: date-time
      isModified:
        description: "Indicates if the snapshot may have changed since it was created.
  Values are: <ul> <li>true - Snapshot is or was attached or shared with read/write access.</li>
  <li>false - Snapshot was never attached or shared.</li> </ul>"
        type: boolean
      isAutoDelete:
        description: "Indicates if this snapshot can be automatically deleted by the system per threshold settings.
  Values are: <ul> <li>true - Snapshot can be automatically deleted by the system per threshold settings.</li>
  <li>false - Snapshot cannot be deleted automatically.</li> </ul>"
        type: boolean
      state:
        description: "The snapshot state in Snapshot state enum."
        $ref: '#/definitions/SnapStateEnum'
      size:
        description: "Size of the storage resource when the snapshot was created (LUN snapshots only)."
        type: integer
      ioLimitPolicy:
        description: "IO limit policy that applies to the snapshot, as defined by the ioLimitPolicy resource type."
        $ref: '#/definitions/ioLimitPolicy'
      hostAccess:
        description: "(LUN, LUN Group and VMware VMFS datastore snapshots only).
  Host access permissions for snapshot, as defined by the snapHostAccess resource type. 
  Value is set only if snapshot is attached to dynamic Snapshot Mount Point."
        type: array
        items:
          $ref: '#/definitions/snapHostAccess'
      replicationStatus:
        description: "Indicates the replication status of this snap"
        $ref: '#/definitions/SnapReplicationStatusEnum'
      syncReplicationStatus:
        description: "Indicates the sync replication status of this snap
  Values are: <ul> <li> 0 - Not marked for replication</li>
   <li> 1 - Replicated</li>
   <li> 2 - Failed to replicate</li> </ul>"
        $ref: '#/definitions/SyncSnapReplicationStatusEnum'
      isRemoteAutoDelete:
        description: "(Applies if replicating a snap and isRemoteRetentionSameAsSource attributes is false.)
 Indicates if this snapshot can be automatically deleted by the system per threshold settings on the destination.
 Values are: <ul> <li>true - Snapshot can be automatically deleted by the system per threshold settings on the destination.</li>
 <li>false - Snapshot cannot be deleted automatically on the destination.</li> </ul>"
        type: boolean
      remoteExpirationTime:
        description: "(Applies if replicating a snap and the values of the isRemoteRetentionSameAsSource & isRemoteAutoDelete attributes are false.)
 Date and time after which the snapshot will expire on the destination."
        type: string
        format: date-time
      replicationOrigin:
        description: "Array from which the snapshot was created.
 Values are:
  <ul> <li> null - Indicates that the snapshot is not replicated to any remote system or it was replicated from a pre-5.1.0 system. </li>
       <li> Remote system - Indicates the original remote system from which the snapshot was replicated. </li>
  </ul>"
        $ref: '#/definitions/remoteSystem'
      snapRemoteRetentionPolicies:
        description: "Information about the remote policies of snap."
        type: array
        items:
          $ref: '#/definitions/snapRemoteRetentionPolicy'
  snapSchedule:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about snapshot schedules in the storage system."
    properties:
      id:
        description: "Unique identifier of the snapSchedule instance."
        type: string
      name:
        description: "Snapshot schedule name."
        type: string
      isDefault:
        description: "Indicates whether the snapshot schedule is a default or user-created schedule. Values are: 
  <ul> 
  <li>true - Snapshot schedule is one of the default schedules.</li> 
  <li>false - Snapshot schedule is user-created.</li> 
  </ul>"
        type: boolean
      modificationTime:
        description: "Date and time when the snapshot schedule was created or last modified."
        type: string
        format: date-time
      version:
        description: "Indicates the version of the snapshot schedule."
        $ref: '#/definitions/ScheduleVersionEnum'
      rules:
        description: "Rules that apply to the snapshot schedule, as defined by the snapScheduleRule resource type."
        type: array
        items:
          $ref: '#/definitions/snapScheduleRule'
      storageResources:
        description: "Storage resources associated with the snapshot schedule."
        type: array
        items:
          $ref: '#/definitions/storageResource'
      luns:
        description: "LUNs associated with the snapshot schedule."
        type: array
        items:
          $ref: '#/definitions/lun'
      isSyncReplicated:
        description: "Indicates whether the snapshot schedule is synchronously replicated to the remote system.
  <ul>
  <li>true - Snapshot schedule is replicated.</li>
  <li>false - Snapshot schedule is not replicated.</li>
  </ul>"
        type: boolean
  softwareUpgradeSession:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about a storage system upgrade session.
  <br/>
  <br/>
  Create an upgrade session to upgrade the system software or view existing
  upgrade sessions. The upgrade session installs an upgrade candidate file that
  was uploaded to the system. Download the latest upgrade candidate from EMC
  Online Support website. Use the CLI to upload the upgrade candidate to the
  system before creating the upgrade session. For information, see the <i>Unisphere 
  CLI User Guide</i>.
  <br/>
  <br/>
  The latest software upgrade candidate contains all available hot fixes. If you
  have applied hot fixes to your system, the hot fixes are included in the latest
  upgrade candidate.
  <br/>
  <br/>
  <b>Note: </b>All system components must be healthy prior to upgrading the
  system software. If any system components are degraded, the software update
  will fail."
    properties:
      id:
        description: "Unique identifier for the softwareUpgradeSession instance."
        type: string
      type:
        description: "Type of software to upgrade."
        $ref: '#/definitions/UpgradeSessionTypeEnum'
      candidate:
        description: "Candidate software to install in the upgrade session, as defined by the
  candidateSoftwareVersion resource type."
        $ref: '#/definitions/candidateSoftwareVersion'
      caption:
        description: "Caption for this upgrade session."
        type: string
      status:
        description: "Status of the current upgrade session."
        $ref: '#/definitions/UpgradeStatusEnum'
      messages:
        description: "List of upgrade messages."
        type: array
        items:
          $ref: '#/definitions/upgradeMessage'
      creationTime:
        description: "Date and time when the upgrade session was started."
        type: string
        format: date-time
      elapsedTime:
        description: "Amount of time for which the upgrade session was running."
        type: string
        format: date-time
      percentComplete:
        description: "Percentage of the upgrade that is completed."
        type: integer
      tasks:
        description: "Current upgrade activity in the upgrade session, as defined by the upgradeTask
  resource type."
        type: array
        items:
          $ref: '#/definitions/upgradeTask'
  ssc:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies to physical deployments only.) Information about System Status Cards (SSCs) in the
  storage system."
    properties:
      id:
        description: "Unique identifier of the ssc."
        type: string
      health:
        description: "Health information for the SSC, as defined by the health resource type."
        $ref: '#/definitions/health'
      needsReplacement:
        description: "Indicates whether the SSC needs replacement. Values are:
  <ul>
  <li>true - SSC needs replacement.</li>
  <li>false - SSC does not need replacement.</li>
  </ul>"
        type: boolean
      parent:
        description: "Resource type and unique identifier for the SSC's parent enclosure."
        $ref: '#/definitions/resourceRef'
      slotNumber:
        description: "Slot where the SSC is located in the parent enclosure."
        type: integer
      name:
        description: "SSC name."
        type: string
      parentDae:
        description: "Parent Disk Array Enclosure (DAE) of the SSC."
        $ref: '#/definitions/dae'
      manufacturer:
        description: "Manufacturer of the SSC."
        type: string
      model:
        description: "Manufacturer's model number for the SSC."
        type: string
      emcPartNumber:
        description: "EMC part number for the SSC."
        type: string
      emcSerialNumber:
        description: "EMC serial number for the SSC."
        type: string
      vendorPartNumber:
        description: "Vendor part number for the SSC."
        type: string
      vendorSerialNumber:
        description: "Vendor serial number for the SSC."
        type: string
  ssd:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies to physical deployments only.) Information about internal Flash-based Solid State Drives (SSDs, mSATAs) in the
  storage system."
    properties:
      id:
        description: "Unique identifier of the ssd."
        type: string
      health:
        description: "Health information for the SSD, as defined by the health resource type."
        $ref: '#/definitions/health'
      needsReplacement:
        description: "Indicates whether the SSD needs replacement. Values are:
  <ul>
  <li>true - SSD needs replacement.</li>
  <li>false - SSD does not need replacement.</li>
  </ul>"
        type: boolean
      parent:
        description: "Resource type and unique identifier for the SSD's parent enclosure."
        $ref: '#/definitions/resourceRef'
      slotNumber:
        description: "Slot where the SSD is located in the parent enclosure."
        type: integer
      name:
        description: "SSD name."
        type: string
      type:
        description: "SSD type."
        $ref: '#/definitions/SsdTypeEnum'
      manufacturer:
        description: "Manufacturer of the SSD."
        type: string
      model:
        description: "Manufacturer's model number for the SSD."
        type: string
      firmwareVersion:
        description: "SSD firmware revision number."
        type: string
      emcPartNumber:
        description: "EMC part number for the SSD."
        type: string
      emcSerialNumber:
        description: "EMC serial number for the SSD."
        type: string
      vendorPartNumber:
        description: "Vendor part number for the SSD"
        type: string
      vendorSerialNumber:
        description: "Vendor serial number for the SSD."
        type: string
      parentStorageProcessor:
        description: "Parent storage processor of the ssd."
        $ref: '#/definitions/storageProcessor'
  storageProcessor:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about Storage Processors (SPs) in the storage system."
    properties:
      id:
        description: "Unique identifier of the storageProcessor instance."
        type: string
      parent:
        description: "Resource type and unique identifier for the SP's parent enclosure."
        $ref: '#/definitions/resourceRef'
      health:
        description: "Health information for the SP, as defined by the health resource type."
        $ref: '#/definitions/health'
      needsReplacement:
        description: "Indicates whether the SP needs replacement. Values are:
  <ul>
  <li>true - SP needs replacement.</li>
  <li>false - SP does not need replacement.</li>
  </ul>"
        type: boolean
      isRescueMode:
        description: "Indicates whether the SP is in Service Mode. Values are:
  <ul>
  <li>true - SP is in Service Mode.</li>
  <li>false - SP is not in Service Mode.</li>
  </ul>"
        type: boolean
      model:
        description: "Manufacturer's model number for the SP."
        type: string
      slotNumber:
        description: "Slot where the SP is located in the parent enclosure."
        type: integer
      name:
        description: "SP name."
        type: string
      emcPartNumber:
        description: "EMC part number for the SP."
        type: string
      emcSerialNumber:
        description: "EMC serial number for the SP."
        type: string
      manufacturer:
        description: "Manufacturer of the SP."
        type: string
      vendorPartNumber:
        description: "Vendor part number for the SP."
        type: string
      vendorSerialNumber:
        description: "Vendor serial number for the SP."
        type: string
      sasExpanderVersion:
        description: "Version number of the SAS Expander associated with the SP."
        type: string
      biosFirmwareRevision:
        description: "Version number of the SP BIOS."
        type: string
      postFirmwareRevision:
        description: "Version number of the SP Power-On Self-Test software."
        type: string
      memorySize:
        description: "SP RAM size."
        type: integer
      parentDpe:
        description: "Parent Disk Processor Enclosure (DPE) of the storage processor."
        $ref: '#/definitions/dpe'
      modelName:
        description: "The physical model name of storageProcessor"
        $ref: '#/definitions/SPModelNameEnum'
  storageResource:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about storage resources in the storage system.
  <br/>
  <br/>
  A storage resource<b><i> </i></b>is a specific type of storage entity
  allocated in the storage system for a particular kind of host or application.
  The storage system provides the following types of storage resources:
  <ul>
  <li>LUNs</li>
  <li>Consistency groups</li>
  <li>File systems accessed via NFS and/or CIFS shares.</li>
  <li>VMware NFS datastores</li>
  <li>VMware VMFS datastores</li>
  <li>VVol (file)</li>
  <li>VVol (block)</li>
  </ul>
  All types of storage resource types can be divided into two major groups:
  <ul>
  <li>Block (or LUN based) storage resources: LUNs, consistency groups, VMware VMFS datastores, VVol (block).</li>
  <li>File system based storage resources: File systems, VMware NFS datastores, VVol (file).</li>
  </ul>
  In order to create a storage resource, there must be at least one pool
  configured on the system. For information about configuring pools, see the help
  topic for the pool. To provision file system based storage resource
  there must be at least one nasServer configured on the system."
    properties:
      id:
        description: "Unique identifier of the storage resource."
        type: string
      health:
        description: "Health information for the storage resource, as defined by the health type."
        $ref: '#/definitions/health'
      name:
        description: "Name of the storage resource."
        type: string
      description:
        description: "Storage resource description."
        type: string
      type:
        description: "Storage resource type."
        $ref: '#/definitions/StorageResourceTypeEnum'
      isReplicationDestination:
        description: "Indicates whether the storage resource is a replication destination. Valid
  values are:
  <ul>
  <li>true - Storage resource is a replication destination.</li>
  <li>false - Storage resource is not a replication destination.</li>
  </ul>"
        type: boolean
      replicationType:
        description: "Replication type."
        $ref: '#/definitions/ReplicationTypeEnum'
      syncReplicationType:
        description: "Sync Replication type."
        $ref: '#/definitions/ReplicationTypeEnum'
      sizeTotal:
        description: "Storage resource size that the system presents to the host or end user."
        type: integer
      sizeUsed:
        description: "Size of the storage resource space consumed by the host. Applicable only for file system
  based storage resource. Indicates the size of file system space occupied by user files."
        type: integer
      sizeAllocated:
        description: "Size of space actually allocated in the pool for the storage resource:
  <ul>
  <li>For all thin-provisioned resources, this can be less than the
  sizeTotal attribute. For a thin-provisioned file system, this can be greater
  than or equal to the value of the sizeUsed attribute </li>
  <li>For non-thin provisioned resources, this is approximately equal to the value of the
  sizeTotal attribute.</li>
  </ul>"
        type: integer
      sizePreallocated:
        description: "Space reserved from the pool by the storage resource, for future needs to make writes more efficient.
  The pool may be able to reclaim some of this if space is running low."
        type: integer
      sizeAllocatedTotal:
        description: "Total space used in the pool for the storage resource."
        type: integer
      thinStatus:
        description: "Indicates whether the storage resource is thin-provisioned, not thin-provisioned,
  or mixed."
        $ref: '#/definitions/ThinStatusEnum'
      advancedDedupStatus:
        description: "Deduplication status for the storage resource."
        $ref: '#/definitions/DedupStatusEnum'
      dataReductionStatus:
        description: "DataReduction status for the storage resource."
        $ref: '#/definitions/DataReductionStatusEnum'
      dataReductionSizeSaved:
        description: "Storage resource saved space by data reduction (includes savings from compression and deduplication)."
        type: integer
      dataReductionPercent:
        description: "Data reduction percentage is the percentage of the data that does not consume storage - the savings due to data reduction. 
  For example, if 1 TB of data is stored in 250 GB, the data reduction percentage is 75%. 75% data reduction percentage is equivalent 
  to a 4:1 data reduction ratio."
        type: integer
      dataReductionRatio:
        description: "Data reduction ratio.
  The data reduction ratio is the ratio between the size of the data and the amount of storage actually consumed. 
  For example, 1TB of data consuming 250GB would have a ration of 4:1. A 4:1 data reduction ratio is equivalent to a 75% data reduction percentage."
        type: number
        format: float
      esxFilesystemMajorVersion:
        description: "(Applies to VMware VMFS storage resource type only.) VMFS major version."
        $ref: '#/definitions/ESXFilesystemMajorVersionEnum'
      esxFilesystemBlockSize:
        description: "(Applies to VMware VMFS storage resource type only.) VMFS block size. Only applies to storage resources with VMFS major version 3."
        $ref: '#/definitions/ESXFilesystemBlockSizeEnum'
      snapSchedule:
        description: "Snapshot schedule for the storage resource, as defined by the snapSchedule
  This value is not set if the storage resource is not associated
  with a snapshot schedule."
        $ref: '#/definitions/snapSchedule'
      isSnapSchedulePaused:
        description: "(Applies if the storage resource has an associated snap schedule.) Indicates
  whether the snapshot schedule for the storage resource is paused. Valid values
  are:
  <ul>
  <li>true - Snapshot schedule for the storage resource is paused.</li>
  <li>false - Snapshot schedule for the storage resource is active.</li>
  </ul>"
        type: boolean
      relocationPolicy:
        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP tiering policy for the storage resource."
        $ref: '#/definitions/TieringPolicyEnum'
      perTierSizeUsed:
        description: "Sizes of space allocations by the storage resource per tiers of the multi-tier storage pool.
  Multi-tier storage pools can be created on the system when the FAST VP license is installed."
        type: array
        items:
          type: integer
      blockHostAccess:
        description: "Host access permissions for a block storage resource types, as defined by the blockHostAccess resource type."
        type: array
        items:
          $ref: '#/definitions/blockHostAccess'
      metadataSize:
        description: "Size of the storage resource metadata."
        type: integer
      metadataSizeAllocated:
        description: "Size of pool space allocated for the storage resource metadata."
        type: integer
      snapsSizeTotal:
        description: "Size of the storage resource snapshots."
        type: integer
      snapsSizeAllocated:
        description: "Size of pool space allocated for storage resource snapshots."
        type: integer
      snapCount:
        description: "Number of storage resource direct snapshots."
        type: integer
      vmwareUUID:
        description: "VMware UUID of the VVol datastore assigned by VMware ESXi hypervisor (Applies to VMware VVol datastore resources only.)."
        type: string
      pools:
        description: "List of pools associated with this storage resource. LUNs in a consistency group storage resource can be allocated from different pools."
        type: array
        items:
          $ref: '#/definitions/pool'
      isThinClone:
        description: "Indicates whether storage resource is a thin clone on not.
  <ul>
  <li>true - The storage resource is a thin clone.</li>
  <li>false - The storage resource is not a thin clone.</li>
  </ul>"
        type: boolean
      familyBaseStorageResource:
        description: "The Base Source Storage Resource. Applies only for Thin Clones."
        $ref: '#/definitions/storageResource'
      parentSnap:
        description: "Source Snapshot. Applies only for Thin Clones."
        $ref: '#/definitions/snap'
      originalParentStorageResource:
        description: "The Parent Source Storage Resource. Applies only for Thin Clones."
        $ref: '#/definitions/storageResource'
      familySnapCount:
        description: "Total number of snapshots created in the resource Family, including all derivative snapshot objects.
  This attribute is not applicable for a Thin Clone"
        type: integer
      familyCloneCount:
        description: "Total number of thin clones created in the resource Family, including all derivative thin clones objects.
  This attribute is not applicable for a Thin Clone"
        type: integer
      nonBaseSizeAllocated:
        description: "Total amount of pool  space used by resource snapshots and thin clones.
  This attribute is not applicable for a Thin Clone"
        type: integer
      familySizeAllocatedTotal:
        description: "Total amount of pool  space reserved for the Storage Resource.
  This attribute is not applicable for a Thin Clone"
        type: integer
      nonBaseSize:
        description: "Thin Clones and Snapshots space for the Storage Resource.
  This attribute is not applicable for a Thin Clone"
        type: integer
      esxMountProtocol:
        description: "(Applies to VMwareNFS storage resources only.) NFS protocol version to use on datastore registration on ESXi side."
        $ref: '#/definitions/ESXMountProtocolEnum'
  storageResourceCapabilityProfile:
    type: object
    x-tags:
      - ~Appendix
    description: "An association between a capability profile and a datastore-type storage resource, with capacity usage information about virtual volumes provisioned accordingly."
    properties:
      id:
        description: "Unique identifier of the storage resource capability profile."
        type: string
      storageResource:
        description: "The datastore-type storage resource instance."
        $ref: '#/definitions/storageResource'
      capabilityProfile:
        description: "Reference to the supported capability profile."
        $ref: '#/definitions/capabilityProfile'
      isInUse:
        description: "True, if any VVol's are provisioned in the storage resource with the given capability profile."
        type: boolean
      sizeUsed:
        description: "Used size of virtual volumes provisioned in this storage resource (datastore) using this capability profile."
        type: integer
      sizeAllocated:
        description: "Storage element allocated size per allocation pool, associated with required capability profile."
        type: integer
      sizeTotal:
        description: "The maximum capacity, that could be used by the storage element per allocation pool, associated with required capability profile."
        type: integer
      logicalSizeUsed:
        description: "The maximum capacity, that the storage elements of required capability profile are allowed to use from required pool."
        type: integer
  storageTier:
    type: object
    x-tags:
      - ~Appendix
    description: "Set of possible RAID configurations that a storage
  tier can support. (A storage tier is the collection of all drives of a
  particular type on the storage system.)  For example, if you have 11 drives in a
  tier, you can support R5 (4+1), R5 (8+1), but not R5(12+1).
  <br/>
  <br/>
  Use this resource type to create custom pools. For more information, see 
  the help topic for the pool resource
  type.
  <br/>
  <br/>"
    properties:
      id:
        description: "Unique identifier of the storageTier instance."
        type: string
      tierType:
        description: "Tier type."
        $ref: '#/definitions/TierTypeEnum'
      raidConfigurations:
        description: "Possible RAID configurations for the storage tier, as defined by the
  raidConfiguration embedded object."
        type: array
        items:
          $ref: '#/definitions/raidConfiguration'
      disksTotal:
        description: "Total number of drives in the storage system that have the same storage 
  tier type as that specified by the tierType attribute."
        type: integer
      disksUnused:
        description: "Total number of unused drives in the storage system that have the same
  tier type as that specified by the tierType attribute."
        type: integer
      disksReservedForHotSpare:
        description: "Total number of hot spare drives in the storage system that have the same
  tier type as that specified by the tierType attribute."
        type: integer
      virtualDisksTotal:
        description: "Total number of virtual drives in the storage system that have the same
  tier type as that specified by the tierType attribute."
        type: integer
      virtualDisksUnused:
        description: "Total number of unused virtual drives in the storage system that have the same
  tier type as that specified by the tierType attribute."
        type: integer
      sizeTotal:
        description: "Total raw capacity of all physical drives and virtual drives in the storage system that have
  the same tier type as that specified by the tierType attribute."
        type: integer
      sizeFree:
        description: "Total raw capacity of all unused physical drives and virtual drives in the storage system that have
  the same tier type as that specified by the tierType attribute."
        type: integer
  supportAsset:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the support assets on the main Unisphere Support page and its sub-pages.
  <br/>
  <br/>"
    properties:
      id:
        description: "Unique identifier of the supportAsset instance."
        type: string
      name:
        description: "Localized support asset name."
        type: string
      description:
        description: "Localized support asset description."
        type: string
  supportProxy:
    type: object
    x-tags:
      - ~Appendix
    description: "Proxy Server settings. 
  <p/>
  A proxy server is a server that acts as an intermediary for requests from clients seeking resources from other servers. 
  <p/>
  The system uses the proxy server (if it's enabled) to access EMC web services such as authenticate support credential, get technical advisories, etc."
    properties:
      id:
        description: "Unique identifier of the support proxy instance.
  
  --eng
  This value is always 0, 
  because at any given time there is only one proxy."
        type: string
      isEnabled:
        description: "Indicates whether the proxy server is enabled.
  <br/>
  Values are:
  <ul>
  <li>true - Uses proxy server</li>
  <li>false - Does not use proxy server</li>
  </ul>"
        type: boolean
      protocol:
        description: "Protocol used for communication with the proxy Server."
        $ref: '#/definitions/ProxyProtocolEnum'
      address:
        description: "Support proxy Server.
  <br/>
  If a port is not specified the following default ports will be used:
  <ul>
  <li>Protocol = http, Default port = 3128</li>
  <li>Protocol = socks, Default port = 1080</li>
  </ul>"
        type: string
      username:
        description: "The user name for proxy server."
        type: string
  supportService:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies if EMC Support is available.) Information about the support services associated with customers."
    properties:
      id:
        description: "Unique identifier of the supportService instance."
        type: string
      supportUsername:
        description: "Username for logging into EMC Support."
        type: string
      supportCredentialStatus:
        description: "Status of the support credentials."
        $ref: '#/definitions/SupportCredentialStatusEnum'
      isEMCServiced:
        description: "Indicates whether the customer has a valid EMC self-service support ecosystem
  license or service contract.
  <br/>
  Valid values are:
  <ul>
  <li>true - Customer has a valid EMC self-service support ecosystem license or
  service contract.</li>
  <li>false - Customer does not have a valid self-service support ecosystem
  license or service contract. </li>
  </ul>"
        type: boolean
      isContractReportEnabled:
        description: "Indicates whether the storage system automatically updates its service
  contracts list once a week. Values are:
  <ul>
  <li>true - System automatically updates its service contracts list once a
  week.</li>
  <li> false - System does not automatically update its service contracts list
  once a week.</li>
  </ul>"
        type: boolean
      isCloudManagementEnabled:
        description: "Indicates whether the customer has enabled management by the EMC Cloud 
  Management product.
  <br/>
  Valid values are:
  <ul>
  <li>true - Customer has enabled Cloud Management.</li>
  <li>false - Customer has not enabled Cloud Management. </li>
  </ul>"
        type: boolean
  system:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about general settings for the storage system."
    properties:
      id:
        description: "Unique identifier of the system instance."
        type: string
      health:
        description: "Health information for the system, as defined by the health resource type."
        $ref: '#/definitions/health'
      name:
        description: "System name."
        type: string
      model:
        description: "System model name."
        type: string
      serialNumber:
        description: "System product serial number."
        type: string
      uuidBase:
        description: "Base value used to generate UUIDs in the host environment(e.g. OVMS host)."
        type: integer
      internalModel:
        description: "Internal model name for the system."
        type: string
      platform:
        description: "Hardware platform for the system."
        type: string
      isAllFlash:
        description: "Indicates whether sytem is all flash."
        type: boolean
      macAddress:
        description: "MAC address of the management interface."
        type: string
      isEULAAccepted:
        description: "Indicates whether the End User License Agreement (EULA) was accepted for an
  upgrade.  Once the EULA is accepted, users can upload product licenses and
  configure the system, or both.
  Values are:
  <ul>
  <li>true - EULA was accepted on the system. Once you set this value, you
  cannot set it to false later on.</li>
  <li>false - EULA was not accepted on the system.</li>
  </ul>"
        type: boolean
      isUpgradeComplete:
        description: "Indicates whether an upgrade completed. Operations that change the
  configuration of the system are not allowed while an upgrade is in progress.
  <p/>
  Values are:
  <ul>
  <li>true - Upgrade completed.</li>
  <li>false - Upgrade did not complete.</li>
  </ul>
  </p>
  <p/>"
        type: boolean
      isAutoFailbackEnabled:
        description: "Indicates whether the automatic failback of NAS servers is enabled for the
  system. Values are:
  <ul>
  <li>true - Automatic failback for NAS servers is enabled.</li>
  <li>false - Automatic failback for NAS servers is disabled.</li>
  </ul>"
        type: boolean
      currentPower:
        description: "Current amount of power used by the system."
        type: integer
      avgPower:
        description: "Average amount of power used by the system. The system uses a one hour window of
  30-second samples to determine this value."
        type: integer
      supportedUpgradeModels:
        description: "List of all supported models for hardware upgrade."
        type: array
        items:
          $ref: '#/definitions/SPModelNameEnum'
  systemCapacity:
    type: object
    x-tags:
      - ~Appendix
    description: "Capacity data for all pools collected for the storage system."
    properties:
      id:
        description: "Unique identifier of the systemCapacity instance."
        type: string
      sizeFree:
        description: "Amount of free space available in the pools on the storage system."
        type: integer
      sizeTotal:
        description: "Total amount of space in the pools on the storage system, which will be the sum of 
  sizeFree, sizeUsed and sizePreallocated space."
        type: integer
      sizeUsed:
        description: "Amount of used space in the pools on the storage system."
        type: integer
      sizePreallocated:
        description: "Space reserved form the pools on the storage system. 
  These space is for future needs to make writes more efficient. pools may be able to reclaim some 
  of this if space is running low."
        type: integer
      dataReductionSizeSaved:
        description: "Amount of space saved by data reduction (includes savings from compression, deduplication and advanced deduplication) in the pools 
  on the storage system."
        type: integer
      dataReductionPercent:
        description: "Data reduction applied increase of storage space expressed as percentage of summary of used and data reduction 
  saved space size (includes space saved from compression and deduplication)."
        type: integer
      dataReductionRatio:
        description: "Storage efficiency ratio of applying data reduction on the system, calculated according to the data reduction savings 
 (includes savings from compression and deduplication) for each block and file object (LUN/Filesystem/datastore) and 
 its snapshots, thus demonstrating the efficiency of data reduction."
        type: number
        format: float
      sizeSubscribed:
        description: "Size of space requested by the storage resources allocated in all pools for possible future allocations.
 If this value is greater than the total size, it means pools are oversubscribed."
        type: integer
      totalLogicalSize:
        description: "Total logical provisioned capacity of primary storage objects visible to hosts (as defined by the “size” attribute 
 for each primary storage objects), plus the total logical provisioned capacity of all Snapshots (that is, the total capacity 
 that would be required if every snapshot were a fully provisioned copy instead)."
        type: integer
      thinSavingsRatio:
        description: "Storage efficiency ratio of thin provisioned primary storage resources on the system, which demonstrates the efficiency of thin provisioning. 
 This is calculated as follows: (Total provisioned size of all primary storage resources) / (Total allocated size of all primary storage resources without including data reduction savings, if any).
 Because savings due to thin provisioning are virtual savings, this could exceed the total system capacity. 
 This does not include data reduction savings or snapshot savings."
        type: number
        format: float
      snapsSavingsRatio:
        description: "Storage efficiency ratio of snapshots on the system, calculated based on the capacity that would have been required 
 for fully provisioned copies, which demonstrates the efficiency of snapshots. 
 This is calculated as follows: (Total snapshot size of all snapshots as if they were full copies) / (Total allocated size of all snapshots without including data reduction savings, if any).
 This does not include data reduction savings or thin provisioning savings."
        type: number
        format: float
      overallEfficiencyRatio:
        description: "System-level storage efficiency ratio, calculated by dividing the total logical capacity of the System by the actual 
 Used capacity on the System, This leverages the efficiency features of thin provisioning, snapshots and data reduction(compression 
 and deduplication)."
        type: number
        format: float
      tiers:
        description: "Size information (total, free, used) per tier."
        type: array
        items:
          $ref: '#/definitions/systemTierCapacity'
  systemInformation:
    type: object
    x-tags:
      - ~Appendix
    description: "Contact information for storage system."
    properties:
      id:
        description: "Unique identifier of the systemInformation instance."
        type: string
      contactFirstName:
        description: "Contact first name for the storage system."
        type: string
      contactLastName:
        description: "Contact last name for the storage system."
        type: string
      contactCompany:
        description: "Contact company name for the storage system."
        type: string
      contactPhone:
        description: "Phone number for the person who should be contacted by the service provider for service issues."
        type: string
      contactEmail:
        description: "Contact email address for the storage system."
        type: string
      locationName:
        description: "The physical location of this system within the user's environment.
 For example: Building C, lab 5, tile C25"
        type: string
      streetAddress:
        description: "Street address for the storage system."
        type: string
      city:
        description: "City where the storage system resides."
        type: string
      state:
        description: "State where the storage system resides."
        type: string
      zipcode:
        description: "Zip code or postal code where the storage system resides.

 --eng
 Zip Code is not currently supported by the ESRS VE system information api"
        type: string
      country:
        description: "Country where the storage system resides."
        type: string
      siteId:
        description: "The ID identifying the site where this system is installed."
        type: string
      contactMobilePhone:
        description: "Mobile phone number for the person who should be contacted by the service provider for service issues."
        type: string
  systemLimit:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about system limits."
    properties:
      id:
        description: "Unique identifier of the systemLimit instance."
        type: string
      name:
        description: "Limit name."
        type: string
      description:
        description: "Limit description."
        type: string
      unit:
        description: "Units of measurement for limit and threshold values."
        $ref: '#/definitions/UnitEnum'
      limitValue:
        description: "Boundary value that cannot be exceeded."
        type: integer
      thresholdValue:
        description: "Value at which the system generates alert notifications, if any."
        type: integer
      resources:
        description: "Resource types to which the limit applies."
        type: array
        items:
          type: string
      license:
        description: "License on which the limit depends, if any, as defined by the license resource type."
        $ref: '#/definitions/license'
  systemTime:
    type: object
    x-tags:
      - ~Appendix
    description: "Current system time."
    properties:
      id:
        description: "Unique identifier of the systemTime instance. Because systemTime is a
  singleton resource type, the value of this field is always 0."
        type: string
      time:
        description: "Current system time."
        type: string
        format: date-time
  technicalAdvisory:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the Technical Advisories provided by EMC Support."
    properties:
      id:
        description: "Unique identifier of the technicalAdvisory instance."
        type: string
      knowledgeBaseId:
        description: "Knowledgebase number for the Technical Advisory."
        type: string
      description:
        description: "Description of the Technical Advisory."
        type: string
      modificationTime:
        description: "Latest publication date for the Technical Advisory."
        type: string
        format: date-time
  tenant:
    type: object
    x-tags:
      - ~Appendix
    description: "A tenant is a representation of a datacenter client, who uses an independent network structure
 and gets the independent and exclusive access to certain storage resources.
 On the storage array, it corresponds to a NAS server group with an independent IP addressing.
 At the moment, iSCSI and management resources do not support multi-tenant access. 

 For each tenant a corresponding Linux network namespace is created. In the current design, 
 traffic separation between the tenants is done by the VLANs. Each tenant reserves a group of VLANs,
 and each VLAN can belong to one tenant maximum. Every tenant gets a name and the Universally Unique Identifier (UUID).
 The UUID cannot be changed during the tenant life cycle. The asynchronous replication of the NAS servers
 is allowed only between the servers belonging to the tenants with the same UUID. 

 The NAS servers and VLANs can still belong to no tenant. Such NAS servers and VLANs operate
 in the Linux base network namespace, together with management and iSCSI interfaces. 

 The control stack of the system does not allow user to log in in the tenant administrator role.
 All the tenants, NAS servers and VLANs are managed from the single system administrator account.
 To allow this, the corresponding GUI and CLI modifications are made."
    properties:
      id:
        description: "Unique identifier of the tenant instance."
        type: string
      name:
        description: "User-specified name of the tenant."
        type: string
      uuid:
        description: "UUID of the tenant."
        type: string
      vlans:
        description: "VLAN IDs assigned to the tenant."
        type: array
        items:
          type: integer
  treeQuota:
    type: object
    x-tags:
      - ~Appendix
    description: "A treeQuota instance represents a quota limit applied to a specific directory tree in a file system."
    properties:
      id:
        description: "Unique identifier of the tree quota instance."
        type: string
      filesystem:
        description: "Associated file system."
        $ref: '#/definitions/filesystem'
      quotaConfig:
        description: "Associated quotaConfig instance."
        $ref: '#/definitions/quotaConfig'
      path:
        description: "Path relative to the root of the filesystem."
        type: string
      description:
        description: "Description of the tree quota."
        type: string
      state:
        description: "State of the tree quota."
        $ref: '#/definitions/QuotaStateEnum'
      hardLimit:
        description: "Hard limit."
        type: integer
      softLimit:
        description: "Soft limit."
        type: integer
      remainingGracePeriod:
        description: "The remaining grace period, when the soft limit is exceeded. <br> The value 0 means the grace period has been past."
        type: integer
      sizeUsed:
        description: "The size already used."
        type: integer
  udoctorPackage:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the UDoctor package. It is used to apply a fix, workaround, or configuration change to the system."
    properties:
      id:
        description: "Unique identifier of the udoctorPackage instance."
        type: string
      name:
        description: "File name of the udoctorPackage."
        type: string
      description:
        description: "Description of the udoctorPackage."
        type: string
      scheduleTime:
        description: "Scheduled date and time to install the udoctorPackage, if set."
        type: string
        format: date-time
      status:
        description: "Status of the udoctorPackage."
        $ref: '#/definitions/UDoctorPackageStatusEnum'
      installTime:
        description: "Date and time when the udoctorPackage is actually installed."
        type: string
        format: date-time
  uncommittedPort:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies to physical deployments only.) Information about Uncommitted ports in the storage system."
    properties:
      id:
        description: "Unique identifier of the Uncommitted port instance."
        type: string
      health:
        description: "Health information for the Uncommitted port, as defined by the health resource type."
        $ref: '#/definitions/health'
      name:
        description: "Uncommitted port name."
        type: string
      portNumber:
        description: "Physical Uncommitted port number on the storage processor."
        type: integer
      connectorType:
        description: "Physical connector type."
        $ref: '#/definitions/ConnectorTypeEnum'
      sfpSupportedSpeeds:
        description: "SFP (the small form-factor pluggable) supported speeds of the Uncommitted port."
        type: array
        items:
          $ref: '#/definitions/SFPSpeedValuesEnum'
      sfpSupportedProtocols:
        description: "SFP (the small form-factor pluggable) supported protocols of the Uncommitted port."
        type: array
        items:
          $ref: '#/definitions/SFPProtocolValuesEnum'
      needsReplacement:
        description: "Indicates whether the Uncommitted port needs replacement. Values are:
  <ul>
  <li>true - Uncommitted port needs replacement.</li>
  <li>false - Uncommitted port does not need replacement.</li>
  </ul>"
        type: boolean
      storageProcessor:
        description: "SP on which the Uncommitted port directly or indirectly resides, as defined by the storageProcessor resource type."
        $ref: '#/definitions/storageProcessor'
      parentIOModule:
        description: "(Applies if the Ethernet port resides on an I/O module.) Parent I/O module of the Uncommitted port, as defined by the ioModule resource type."
        $ref: '#/definitions/ioModule'
      parentStorageProcessor:
        description: "(Applies if the Ethernet port resides directly on an SP.) Parent SP of the Uncommitted port, as defined by the storageProcessor resource type."
        $ref: '#/definitions/storageProcessor'
      parent:
        description: "Resource type and identifier of the Uncommitted port's parent enclosure, as defined by the resourceRef resource type."
        $ref: '#/definitions/resourceRef'
  upgradeSession:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about a storage system upgrade session.
  <br/>
  <br/>
  Create or view an upgrade session to upgrade the system software or hardware.
  <br/>
  <br/>
  A hardware upgrade session starts or shows the status of a hardware upgrade.
  <br/>
  <br/>
  A software upgrade session installs an upgrade candidate file that
  was uploaded to the system. Download the latest upgrade candidate from EMC
  Online Support website. Use the CLI to upload the upgrade candidate to the
  system before creating the upgrade session. For information, see the <i>Unisphere
  CLI User Guide</i>.
  <br/>
  <br/>
  The latest software upgrade candidate contains all available hot fixes. If you
  have applied hot fixes to your system, the hot fixes are included in the latest
  upgrade candidate.
  <br/>
  <br/>
  <b>Note: </b>All system components must be healthy prior to upgrading the
  system software. If any system components are degraded, the software update
  will fail."
    properties:
      id:
        description: "Unique identifier for the upgradeSession instance."
        type: string
      type:
        description: "Type of software or hardware upgrade."
        $ref: '#/definitions/UpgradeSessionTypeEnum'
      candidate:
        description: "Candidate software to install in the upgrade session, as defined by the
  candidateSoftwareVersion resource type.  This value does not exist for a
  hardware upgrade session."
        $ref: '#/definitions/candidateSoftwareVersion'
      caption:
        description: "Caption for this upgrade session."
        type: string
      status:
        description: "Status of the current upgrade session."
        $ref: '#/definitions/UpgradeStatusEnum'
      messages:
        description: "List of upgrade messages."
        type: array
        items:
          $ref: '#/definitions/upgradeMessage'
      creationTime:
        description: "Date and time when the upgrade session was started."
        type: string
        format: date-time
      elapsedTime:
        description: "Amount of time for which the upgrade session was running."
        type: string
        format: date-time
      percentComplete:
        description: "Percentage of the upgrade that is completed."
        type: integer
      tasks:
        description: "Current upgrade activity in the upgrade session, as defined by the upgradeTask
  resource type."
        type: array
        items:
          $ref: '#/definitions/upgradeTask'
  urServer:
    type: object
    x-tags:
      - ~Appendix
    description: "Information for registering a storage system with Unisphere Central."
    properties:
      address:
        description: "IP address of the Unisphere Central server."
        type: string
      id:
        description: "Unique identifier of the urServer instance. This value is always 0, because
  the object is a singleton."
        type: string
  user:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about local users, including their roles, and how they are
  authenticated.
  <br/>
  <br/>"
    properties:
      id:
        description: "Unique identifier of the user instance."
        type: string
      name:
        description: "Name of the user."
        type: string
      role:
        description: "User role as defined by the role resource type."
        $ref: '#/definitions/role'
  userQuota:
    type: object
    x-tags:
      - ~Appendix
    description: "A userQuota instance represents a quota limit applied to a user within a quota tree or a file system."
    properties:
      id:
        description: "Unique identifier of the user quota instance."
        type: string
      filesystem:
        description: "Associated file system."
        $ref: '#/definitions/filesystem'
      treeQuota:
        description: "Associated tree quota. Values are:
  <ul>
  <li> null - if the user quota is not within a quota tree. </li>
  <li> treeQuota instance - if the user quota is within a quota tree. </li>
  </ul>"
        $ref: '#/definitions/treeQuota'
      uid:
        description: "User ID of the user."
        type: integer
      unixName:
        description: "Unix user name for this quota's uid."
        type: string
      windowsNames:
        description: "Windows user name(s) that map to this quota's uid."
        type: array
        items:
          type: string
      windowsSIDs:
        description: "Windows SID(s) that map to this quota's uid."
        type: array
        items:
          type: string
      state:
        description: "State of the user quota."
        $ref: '#/definitions/QuotaStateEnum'
      hardLimit:
        description: "Hard limit. 
  <br> The value 0 means no limitations."
        type: integer
      softLimit:
        description: "Soft limit. 
  <br> The value 0 means no limitations."
        type: integer
      remainingGracePeriod:
        description: "Remaining grace period when the soft limit is exceeded. 
  <br> The grace period of userQuota is set in quotaConfig."
        type: integer
      sizeUsed:
        description: "Size already used by the user."
        type: integer
  virtualVolume:
    type: object
    x-tags:
      - ~Appendix
    description: "VASA 2.0 virtual volume (VVol)."
    properties:
      id:
        description: "Unique identifier of the VVol."
        type: string
      health:
        description: "Health information for the virtual volume."
        $ref: '#/definitions/health'
      name:
        description: "Virtual volume name."
        type: string
      vvolType:
        description: "Type of the VVol."
        $ref: '#/definitions/VVolTypeEnum'
      replicaType:
        description: "Replica type of the VVol."
        $ref: '#/definitions/ReplicaTypeEnum'
      parent:
        description: "For non-base VVols, the parent VVol."
        $ref: '#/definitions/virtualVolume'
      storageResource:
        description: "The datastore-type storage resource in which the VVol is provisioned."
        $ref: '#/definitions/storageResource'
      pool:
        description: "Pool associated with the VVol."
        $ref: '#/definitions/pool'
      capabilityProfile:
        description: "Capability profile associated with this VVol."
        $ref: '#/definitions/capabilityProfile'
      policyProfileName:
        description: "The name of the VASA Policy Profile that vSphere has associated with this virtual volume."
        type: string
      isCompliant:
        description: "Indicates whether the is VVol compliant with associated policy profile.
 true - VVol is compliant.
 false - VVol is not compliant."
        type: boolean
      isThinEnabled:
        description: "True if thin provisioning is enabled."
        type: boolean
      sizeTotal:
        description: "Logical or addressable size of the object."
        type: integer
      sizeUsed:
        description: "The amount of space used by the object from the pool."
        type: integer
      bindings:
        description: "List of virtualVolumeBinding objects which contain binding information. Empty if virtual volume is not bound."
        type: array
        items:
          $ref: '#/definitions/virtualVolumeBinding'
      vmUUID:
        description: "VMware UUID of the hosted virtual machine. Helps to identify virtual machine if VMware integration is not set."
        type: string
      vm:
        description: "Reference to the virtual machine hosted on the virtual volume. 
 Always empty if VMware integration not configured."
        $ref: '#/definitions/vm'
      vmDisk:
        description: "Reference to associated virual machine disk object. 
 Always empty if VMware integration not configured."
        $ref: '#/definitions/vmDisk'
      maxIOPSDensity:
        description: "Density-based IOPS limit. This is applicable only when the maximum IOPS limit is density based."
        type: integer
      maxKBPSDensity:
        description: "Density-based KBPS limit. This is applicable only when the maximum KBPS limit is density based."
        type: integer
      effectiveMaxIOPS:
        description: "Effective Maximum IO/second depends on the type of the policy. In case of Density based policy, 
   will be the product of maxIOPSDensity and Size of the attached resource."
        type: integer
      effectiveMaxKBPS:
        description: "Effective Maximum KBPS depends on the type of the policy. In case of Density based policy, 
   will be the product of maxKBPSDensity and Size of the attached resource."
        type: integer
      burstRate:
        description: "The percentage of read/write IOPS and Bandwidth over the limits a storage object is allowed to process during a spike in demand."
        type: integer
      burstTime:
        description: "How long a storage object is allowed to process burst traffic."
        type: string
        format: date-time
      burstFrequency:
        description: "How often a storage object is allowed to process burst traffic for the duration of burst time"
        type: string
        format: date-time
      spOwner:
        description: "Storage processor where the virtual volume is placed"
        $ref: '#/definitions/storageProcessor'
      creationTime:
        description: "Date and time when the virtual volume was created."
        type: string
        format: date-time
  virusChecker:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the anti-virus service of a NAS server.
  <br/>
  <br/>
  The storage system supports third-party anti-virus servers that perform virus scans and 
  reports back to the storage system. For example, when an SMB client creates, moves, or modifies 
  a file, the NAS server invokes the anti-virus server to scan the file for known 
  viruses. During the scan any access to this file is blocked.
  If the file does not contain a virus, it is written to the file system. 
  If the file is infected, corrective action (fixed, removed or placed in quarantine) is taken as
  defined by the anti-virus server. 
  You can optionally set up the service to scan the file on read access based on last access of the file 
  compared to last update of the third-party anti-virus date.
  <br/>
  A virusChecker object is created each time the anti-virus service is enabled on a NAS server.
  A configuration file (named viruschecker.conf) needs to be uploaded on the NAS server before 
  enabling the anti-virus service."
    properties:
      id:
        description: "Unique instance id."
        type: string
      nasServer:
        description: "NAS server that is configured with these anti-virus settings."
        $ref: '#/definitions/nasServer'
      isEnabled:
        description: "Indicates whether the anti-virus service is enabled on this NAS server.
  Value are:
  <ul>
  <li>true - Anti-virus service is enabled. Each file created or modified by an SMB client 
  is scanned by the third-party anti-virus servers. If a virus is detected, the access to the 
  file system is denied. If third-party anti-virus servers are not available, according the policy, 
  the access to the file systems is denied to prevent potential viruses propagation.</li>
  <li>false - Anti-virus service is disabled. File systems of the NAS servers are
  available for access without virus checking</li>
  </ul>"
        type: boolean
  vlanInfo:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about VLAN IDs."
    properties:
      id:
        description: "Unique identifier of the vlanInfo instance."
        type: string
      vlanId:
        description: "VLAN ID."
        type: integer
      interfaces:
        description: "List of IP interfaces created on this VLAN."
        type: array
        items:
          $ref: '#/definitions/ipInterface'
      tenant:
        description: "Tenant to which the VLAN belongs."
        $ref: '#/definitions/tenant'
  vm:
    type: object
    x-tags:
      - ~Appendix
    description: "Represents a virtual machine."
    properties:
      id:
        description: "Unique instance id."
        type: string
      datastore:
        description: "The storageResource that hosts configuration data of the VM."
        $ref: '#/definitions/datastore'
      name:
        description: "Friendly name of VM displayed on vCenter."
        type: string
      guestAddresses:
        description: "The guest addresses of VM.  Can be IPv4, IPv6, or both."
        type: array
        items:
          type: string
      guestHostName:
        description: "The host name of VM guest host."
        type: string
      notes:
        description: "Notes for VM."
        type: string
      osType:
        description: "The OS type of VM."
        type: string
      host:
        description: "ESXi host that hosts VM."
        $ref: '#/definitions/host'
      state:
        description: "The state of VM."
        $ref: '#/definitions/VMPowerStateEnum'
  vmDisk:
    type: object
    x-tags:
      - ~Appendix
    description: "Virtual Machine disk object."
    properties:
      datastore:
        description: "The datastore that hosts the VM disk."
        $ref: '#/definitions/datastore'
      id:
        description: "Unique instance ID."
        type: string
      vm:
        description: "The associated VM."
        $ref: '#/definitions/vm'
      name:
        description: "Friendly name of VM disk displayed on vCenter."
        type: string
      spaceTotal:
        description: "Size of the VM disk."
        type: integer
      type:
        description: "Type of the VM disk."
        $ref: '#/definitions/VMDiskTypeEnum'
  vmwareNasPEServer:
    type: object
    x-tags:
      - ~Appendix
    description: "A resource representing NAS VMware Protocol Endpoint Server. Only one
  instance per NAS Server can be created."
    properties:
      id:
        description: "Unique identifier of NAS VMware Protocol Endpoint Server."
        type: string
      nasServer:
        description: "NAS server for this protocol endpoint."
        $ref: '#/definitions/nasServer'
      fileInterfaces:
        description: "A list of file IP interfaces to be used by NAS VMware Protocol Endpoint Server."
        type: array
        items:
          $ref: '#/definitions/fileInterface'
      boundVVolCount:
        description: "The number of bound VVols associated with NAS VMware Protocol Endpoint Server."
        type: integer
  vmwarePE:
    type: object
    x-tags:
      - ~Appendix
    description: "A resource representing VMware protocol endpoint of both possible types: NAS
  protocol endpoint and SCSI protocol endpoint. An instance of this class is created
  automatically as part of VVol datastore (storage resource) host access configuration."
    properties:
      id:
        description: "Unique identifier of VMware protocol endpoint."
        type: string
      vmwareNasPEServer:
        description: "For NAS VMware protocol endpoints, the associated NAS VMware protocol endpoint server."
        $ref: '#/definitions/vmwareNasPEServer'
      name:
        description: "VMware protocol endpoint name."
        type: string
      type:
        description: "Protocol Endpoint type."
        $ref: '#/definitions/VmwarePETypeEnum'
      vmwareUUID:
        description: "VMware UUID for this protocol endpoint."
        type: string
      exportPath:
        description: "For NAS VMware protocol endpoints, the export path."
        type: string
      ipAddress:
        description: "For NAS VMware protocol endpoints, the IP address."
        type: string
      ipProtocolVersion:
        description: "For NAS VMware protocol endpoints, IP protocol version (IPv4 or IPv6)."
        $ref: '#/definitions/IpProtocolVersionEnum'
      defaultNode:
        description: "For SCSI VMware protocol endpoints, the default owning SP."
        $ref: '#/definitions/NodeEnum'
      currentNode:
        description: "For SCSI VMware protocol endpoints, the current SP."
        $ref: '#/definitions/NodeEnum'
      wwn:
        description: "WWN for SCSI VMware protocol endpoints."
        type: string
      naa:
        description: "For SCSI VMware protocol endpoints, the VMware protocol endpoint SCSI identifier in naa format."
        type: string
      vvolds:
        description: "For NAS protocol endpoints, the associated datastore type storage resource."
        $ref: '#/definitions/storageResource'
      host:
        description: "For SCSI VMware protocol endpoints, the unique identifier of associated host."
        $ref: '#/definitions/host'
      lunId:
        description: "For SCSI VMware protocol endpoints, the identifier of assiciated LUN."
        type: integer
      boundVVolCount:
        description: "The number of bound VVols associated with NAS VMware Protocol Endpoint."
        type: integer
      health:
        description: "Health information for the VMware Protocol Endpoint."
        $ref: '#/definitions/health'
  x509Certificate:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the X.509 certificates installed on the storage system.
  The X.509 certificate format is described in RFC 5280."
    properties:
      id:
        description: "Unique identifier of the x509Certificate instance."
        type: string
      type:
        description: "Certificate type."
        $ref: '#/definitions/CertificateTypeEnum'
      service:
        description: "Service with which the certificate is associated."
        $ref: '#/definitions/ServiceTypeEnum'
      scope:
        description: "Scope of the certificate."
        $ref: '#/definitions/certificateScope'
      isTrustAnchor:
        description: "Indicates whether the certificate is trusted as end-of-chain for peer certificate verification.  
 This applies to certificates with a type of CA only.
  Values are:
  <ul>
  <li>true - Certificate is trusted. It is either permanent, or the expiration date
  has not yet passed.</li>
  <li>false - Certificate is not trusted.</li>
  </ul>"
        type: boolean
      version:
        description: "Certificate version."
        type: integer
      serialNumber:
        description: "Certificate serial number."
        type: string
      signatureAlgorithm:
        description: "Certificate signature algorithm."
        $ref: '#/definitions/SignatureAlgoTypeEnum'
      issuer:
        description: "Name of the certificate issuer."
        type: string
      validFrom:
        description: "Date and time when the certificate became valid."
        type: string
        format: date-time
      validTo:
        description: "Date and time when the certificate will expire."
        type: string
        format: date-time
      subject:
        description: "Certificate subject."
        type: string
      subjectAlternativeName:
        description: "Certificate subject alternative name."
        type: string
      publicKeyAlgorithm:
        description: "Certificate public key algorithm."
        $ref: '#/definitions/PublicKeyAlgoTypeEnum'
      keyLength:
        description: "Certificate key length."
        type: integer
      thumbprintAlgorithm:
        description: "Certificate thumbprint algorithm."
        $ref: '#/definitions/ThumbprintAlgoTypeEnum'
      thumbprint:
        description: "Certificate thumbprint."
        type: string
      hasPrivateKey:
        description: "Indicates whether the certificate has an associated private key. 
  Values are:
  <ul>
  <li>true - Certificate has an associated private key. </li>
  <li>false - Certificate does not have an associated private key. </li>
  </ul>"
        type: boolean
  baseRequest:
    type: object
    x-tags:
      - ~Appendix
    description: "This object is used to represent a generic POST request action. It contains different set
  of strongly typed properties for different concrete actions."
  ioLimitParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "IO limit settings for the storage resource. 
  This resource type is embedded in the lunParameter and snap resource types."
    properties:
      ioLimitPolicy:
        description: "IO limit policy that applies to the storage resource, as defined by the ioLimitPolicy resource type."
        $ref: '#/definitions/ioLimitPolicy'
  baseResponse:
    type: object
    x-tags:
      - ~Appendix
    description: "This is used to represent a generic method response. It contains different set
  of strongly typed properties for different actions."
  raidGroupConfiguration:
    type: object
    x-tags:
      - ~Appendix
    description: "RAID group configurations for particular tier."
    properties:
      diskCount:
        description: "Number of disks used."
        type: integer
      sizeFree:
        description: "Unused capacity of the disks."
        type: integer
      hotSpareCandidates:
        description: "Number of unused disks that can be used as hot spares."
        type: integer
      isVaultUsed:
        description: "Indicates whether system disks are used. Values are:
  <ul>
  </li>true - System disks are used.</li>
  <li>false - System disks are not used.</li>
  </ul>"
        type: boolean
      stripeWidths:
        description: "Comma-separated list of RAID group stripe widths."
        type: array
        items:
          $ref: '#/definitions/RaidStripeWidthEnum'
      parityDisks:
        description: "Comma-separated list of amount of parity disks for each RAID group."
        type: array
        items:
          type: integer
      diskUnusedCount:
        description: "Number of unused disks."
        type: integer
      isDefault:
        description: "Indicates whether the RAID configuration is default. Values are:
  <ul>
  <li>true - RAID configuration is default.</li>
  <li>false - RAID configuration is not default.<li>
  </ul>"
        type: boolean
      sizeTotal:
        description: "Usable capacity of the disks."
        type: integer
  resourceInfo:
    type: object
    x-tags:
      - ~Appendix
    description: "This embedded type provided details of a resource."
    properties:
      resId:
        description: "Identifier of the resource."
        type: string
      name:
        description: "Name of the resource."
        type: string
      system:
        description: "System on which the resource exists."
        $ref: '#/definitions/remoteSystem'
  certificateScope:
    type: object
    x-tags:
      - ~Appendix
    description: "Scope of the certificate:
 <ul>
 <li>If the certificate scope is global, the attribute values are blank.</li>
 <li>If the certificate scope is local, the scope is defined by one attribute value (for queries) or one argument value (for create and import operations). For example, if the scope of the certificate is NAS server nas01, the value of the nasServer attribute would be nas01, and all other attributes would be blank.</li>
 </ul>
 <p>
 For information about which scopes apply to which services, see the help topic for the ServiceTypeEnum."
    properties:
      nasServer:
        description: "NAS Server with which the certificate is associated."
        $ref: '#/definitions/nasServer'
  storageTierConfiguration:
    type: object
    x-tags:
      - ~Appendix
    description: "Possible disk selections for a storage tier, given a specified storage tier
  type, RAID type, and stripe width.
  <br/>
  <br/>
  Use this resource type, along with the pool, diskGroup, and storageTier
  resource types, to create custom pools. For more information, see the help
  topic for the pool resource type.

  Use this"
    properties:
      storageTier:
        description: "Storage tier for which you want to obtain proposed configurations as defined
  by the storageCapability resource type."
        $ref: '#/definitions/storageTier'
      raidType:
        description: "(Applies to physical deployments only.) RAID type of the proposed storage configuration."
        $ref: '#/definitions/RaidTypeEnum'
      stripeWidth:
        description: "(Applies to physical deployments only.) Stripe width of the proposed storage configuration."
        $ref: '#/definitions/RaidStripeWidthEnum'
      disksTotal:
        description: "(Applies to physical deployments only.) Total number of disks in system that can be configured with the specified disk
  type, RAID type, and stripe width."
        type: integer
      sizeTotal:
        description: "Maximum usable capacity for the specified storage configuration if all
  available disks are used for the configuration."
        type: integer
      diskGroupConfigurations:
        description: "(Applies to physical deployments only.) Possible amounts of disks and capacities for each diskGroup that contains
  disks of type corresponding to storageCapability (NVMe, EFD, SAS, NL-SAS)"
        type: array
        items:
          $ref: '#/definitions/diskGroupConfiguration'
  blockHostAccess:
    type: object
    x-tags:
      - ~Appendix
    description: "Host access settings for the storage resource.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      host:
        description: "Host associated with the storage resource, as defined by the host resource
  type."
        $ref: '#/definitions/host'
      accessMask:
        description: "Host access permissions."
        $ref: '#/definitions/HostLUNAccessEnum'
      productionAccess:
        description: "Production LUN(s) access mask."
        $ref: '#/definitions/BlockHostAccessEnum'
      hlu:
        description: "Host LUN Identifier for the host storage group. This only represents the indentifiers of 
  the LUN(s) on the host and not the Snapshot LUN(s)."
        type: integer
      snapshotAccess:
        description: "Snapshot LUN(s) access mask."
        $ref: '#/definitions/BlockHostAccessEnum'
  cifsServerInfo:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about SMB server of a remote Virtual Datamover (VDM). 
  <br/>
  <br/>
  This resource type is embedded in the vdmInfo type."
    properties:
      name:
        description: "User-specified name for the SMB server."
        type: string
      description:
        description: "Description of the SMB server."
        type: string
      netbiosName:
        description: "Computer Name of the SMB server in Windows network."
        type: string
      domain:
        description: "Domain name where SMB server is registered in Active Directory, if applicable."
        type: string
      workgroup:
        description: "(Applies to stand-alone SMB servers.) Windows network workgroup for the SMB server."
        type: string
      isStandalone:
        description: "Indicates whether the SMB server is standalone.
  Values are:
  <ul>
  <li>true - SMB server is standalone.</li>
  <li>false - SMB server is joined to the Active Directory."
        type: boolean
      cifsUsername:
        description: "User name for authentication to CIFS server on the source VDM. it could be the same as
  Active Directory domain user name in some cases, and which will be used initialized to 
  the Active Directory domain user name in GUI side."
        type: string
  lunMemberReplication:
    type: object
    x-tags:
      - ~Appendix
    description: "Member lun element pair details in a replication session. Applies to block storage resource replications."
    properties:
      srcStatus:
        description: "Status of the source element."
        $ref: '#/definitions/ReplicationSessionStatusEnum'
      networkStatus:
        description: "Status of the network on which the replication session exists."
        $ref: '#/definitions/ReplicationSessionNetworkStatusEnum'
      dstStatus:
        description: "Status of the destination element in the replication session."
        $ref: '#/definitions/ReplicationSessionStatusEnum'
      srcLunId:
        description: "Unique identifier of the source element in the element pair."
        type: string
      dstLunId:
        description: "Unique identifier of the destination element in the element pair."
        type: string
  localizedMessage:
    type: object
    x-tags:
      - ~Appendix
    description: "List of name value pairs used to embed additional data in an object."
    properties:
      locale:
        type: string
      message:
        type: string
  pingResult:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about ping command result."
    properties:
      result:
        description: "Ping result. True if accessible, False otherwise."
        type: boolean
      latency:
        description: "Latency in milliseconds"
        type: number
        format: float
  poolUnitParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters for adding a pool unit to a pool, or modifying a pool unit.
  At this time, only virtual disk type pool units can be modified."
    properties:
      poolUnit:
        description: "Pool unit for which these parameters are being specified.
  Indeed it is Virtual Disk identifier, but in the future 
  it can be the other pool unit object types allowed."
        $ref: '#/definitions/poolUnit'
      name:
        description: "Pool unit name.
  Can be used for Virtual Disk modification only."
        type: string
      tierType:
        description: "Tier type. 
  If virtualDisk tier type is unknown
  it can be specified at the time of adding to pool."
        $ref: '#/definitions/TierTypeEnum'
  health:
    type: object
    x-tags:
      - ~Appendix
    description: "Health of the associated resource."
    properties:
      value:
        description: "Health value."
        $ref: '#/definitions/HealthEnum'
      descriptionIds:
        description: "Description ids."
        type: array
        items:
          type: string
      descriptions:
        description: "Descriptions are localized messages describing details of the operating condition."
        type: array
        items:
          type: string
      resolutionIds:
        description: "Resolution ids."
        type: array
        items:
          type: string
      resolutions:
        description: "Resolutions are URLs to get more information about this health state."
        type: array
        items:
          type: string
  diskGroupConfiguration:
    type: object
    x-tags:
      - ~Appendix
    description: "Set of possible disk selections for a storage tier, given a specified RAID
  type (or RAID Level) and stripe width (or RAID modulus)."
    properties:
      diskGroup:
        description: "Disk group from which to take disks for the storage tier configuration."
        $ref: '#/definitions/diskGroup'
      unusedDisks:
        description: "Number of unused disks."
        type: integer
      tierType:
        description: "Tier type."
        $ref: '#/definitions/TierTypeEnum'
      partNumber:
        description: "Part number for the disks."
        type: string
      diskRpm:
        type: integer
      advertisedSize:
        description: "Disk capacity written on the label of the disks."
        type: integer
      diskSize:
        description: "Disk capacity."
        type: integer
      raidGroupConfigurations:
        description: "Comma-separated list of allowed RAID group configurations."
        type: array
        items:
          $ref: '#/definitions/raidGroupConfiguration'
      diskTechnology:
        description: "Disk technology of the disks."
        $ref: '#/definitions/DiskTechnologyEnum'
      isDefault:
        description: "Indicates whether the configuration is the default. Values are:
  <ul>
  <li>Storage tier configuration is the default configuration.</li>
  <li>Storage tier configuration is not the default configuration.>/li>
  </ul>"
        type: boolean
      minHotSpareCandidates:
        description: "Minimum number of hot spares required for existing traditional pool(s) 
  in the disk group. Can be 0 if no traditional pool uses this disk group.
  As a rule one Hot spare is required per 30 disks."
        type: integer
  vdmInfo:
    type: object
    x-tags:
      - ~Appendix
    description: "Information of a remote Virtual Datamover (VDM). 
  <br/>
  <br/>
  This resource type is embedded in the migrationObject resource type."
    properties:
      interfaces:
        description: "List of interfaces associated with the VDM"
        type: array
        items:
          $ref: '#/definitions/interfaceInfo'
      unixDirectoryServiceList:
        description: "List of unix directory services associated with the VDM"
        type: array
        items:
          $ref: '#/definitions/ImportUnixDirectoryServiceEnum'
      supportedProtocols:
        description: "Protocols supported by the VDM."
        $ref: '#/definitions/VDMSupportedProtocolsEnum'
      cifsServerInfo:
        description: "CIFS server object for renaming on the source VDM."
        type: array
        items:
          $ref: '#/definitions/cifsServerInfo'
  message:
    type: object
    x-tags:
      - ~Appendix
    description: "A message occurrence.
  
  This is also the message object returned in the body of non-2xx return code
  REST responses."
    properties:
      severity:
        $ref: '#/definitions/SeverityEnum'
      errorCode:
        description: "Error code for this message."
        type: integer
      created:
        description: "Time at which the message occurred."
        type: string
        format: date-time
      httpStatusCode:
        description: "HTTP status code for this message when returned from a REST API request."
        type: integer
      messages:
        description: "A list of localized strings for this message, as pairs of (locale,
  message_string)."
        type: array
        items:
          $ref: '#/definitions/localizedMessage'
      messageArgs:
        description: "Arguments to be filled in error message"
        type: array
        items:
          type: string
  fileEventSettings:
    type: object
    x-tags:
      - ~Appendix
    description: "File Event Service supported protocols."
    properties:
      isCIFSEnabled:
        description: "Indicates whether file access over CIFS protocol will trigger sending events to the CEPA server."
        type: boolean
      isNFSEnabled:
        description: "Indicates whether file access over NFSv3 or NFSv4 protocols will trigger sending events to the CEPA server."
        type: boolean
  resourceRef:
    type: object
    x-tags:
      - ~Appendix
    description: "This is used to contain a reference to an instance where the class may vary.
  
  <Eng>
  A property or arg of this type, if mapped to an OSLS property/arg, means that
  the OSLS value is the instance id (instance name) of the target object. This
  can be looked up to find the class and id for this interface.
  </Eng>"
    properties:
      resource:
        description: "The class name of the referenced instance."
        type: string
      id:
        description: "The id of the referenced instance."
        type: string
  cifsShareACE:
    type: object
    x-tags:
      - ~Appendix
    description: "Access Control Entry (ACE) settings for CIFS shares.
  <br/>
  <br/>
  This resource type is embedded in the storageResource type."
    properties:
      sid:
        description: "Domain user or group Security Identifier (SID)."
        type: string
      accessType:
        description: "ACE type. Set this value to <b>None</b> to remove the ACE for a SID from a
  CIFS share."
        $ref: '#/definitions/ACEAccessTypeEnum'
      accessLevel:
        description: "ACE level."
        $ref: '#/definitions/ACEAccessLevelEnum'
  resourceConfig:
    type: object
    x-tags:
      - ~Appendix
    description: "Embedded type to describe a resource configuration."
    properties:
      poolId:
        description: "Storage pool of the resource"
        type: string
      isThinEnabled:
        description: "Is thin type or not"
        type: boolean
      isDeduplicationEnabled:
        description: "Is deduplication enabled or not"
        type: boolean
      isCompressionEnabled:
        description: "Is in-line compression (ILC) Enabled or not"
        type: boolean
      isBackupOnly:
        description: "Is backup only or not"
        type: boolean
      size:
        description: "Size of the resource"
        type: integer
      tieringPolicy:
        description: "Tiering policy for the resource"
        $ref: '#/definitions/TieringPolicyEnum'
      requestId:
        description: "Unique request ID for the configuration"
        type: string
      srcId:
        description: "Storage resource if it already exists"
        type: string
      defaultSP:
        description: "Default Storage processor for the resource"
        $ref: '#/definitions/NodeEnum'
      replicationResourceType:
        description: "Replication resource type"
        $ref: '#/definitions/ReplicationEndpointResourceTypeEnum'
  interfaceInfo:
    type: object
    x-tags:
      - ~Appendix
    description: "Information of the IP inteface associated to a VDM. 
  <br/>
  <br/>
  This resource type is embedded in the vdmInfo embedded type."
    properties:
      ipAddress:
        description: "IP address of the interface."
        type: string
      ipProtocolVersion:
        description: "IP protocol version of the interface."
        $ref: '#/definitions/IpProtocolVersionEnum'
      netmask:
        description: "IPv4 netmask for the interface, if it uses an IPv4 address."
        type: string
      v6PrefixLength:
        description: "IPv6 prefix length for the interface, if it uses an IPv6 address."
        type: integer
      gateway:
        description: "IPv4 or IPv6 gateway address for the interface."
        type: string
      vlanId:
        description: "Virtual Local Area Network (VLAN) identifier for the interface. The
  interface uses the identifier to accept packets that have matching VLAN tags.
  <br/>
  <br/>
  Values are 0 - 4094. The default is 0, which means that the packets to accept
  do not have VLAN tags."
        type: integer
      name:
        description: "Name of the interface."
        type: string
      portName:
        description: "Port name on which the interface is configured."
        type: string
  raidGroupParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters to create RAID group from the disks and add it to the pool."
    properties:
      dskGroup:
        description: "Disk Group identifier."
        $ref: '#/definitions/diskGroup'
      numDisks:
        description: "Number of disks."
        type: integer
      raidType:
        description: "RAID type (or RAID level)."
        $ref: '#/definitions/RaidTypeEnum'
      stripeWidth:
        description: "Stripe width (or RAID modulus)."
        $ref: '#/definitions/RaidStripeWidthEnum'
      spareDriveCount:
        description: "Number of hot spare drives capacity."
        type: integer
  tracerouteResult:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about traceroute command result."
    properties:
      hop:
        description: "Hop number."
        type: integer
      ipAddress:
        description: "IP Address"
        type: string
      latency:
        description: "Latency in milliseconds"
        type: number
        format: float
      result:
        description: "True if accessible, False otherwise."
        type: boolean
      raw:
        description: "Raw string output."
        type: string
  vmwareNfsParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Settings for an NFS Share used as a VMware NFS datastore.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      esxMountProtocol:
        description: "ESXi Mount Protocol version."
        $ref: '#/definitions/ESXMountProtocolEnum'
  floatOrValueMap:
    type: object
    x-tags:
      - ~Appendix
    description: "A single floating point value that corresponds to the element in the metric or
  another mapping of a string to floatOrValueMap.  This mapping allows for a
  hierarchical structure of values mapped to the metrics in the metric object."
  importSyncProgress:
    type: object
    x-tags:
      - ~Appendix
    description: "This embedded type represents the sync progress details for each iteration of synchronization."
    properties:
      syncStage:
        description: "Import synchronization stage."
        $ref: '#/definitions/ImportStageEnum'
      iteration:
        description: "Sync iteration number."
        type: integer
      percentProgress:
        description: "Sync percent progress."
        type: integer
  snapRemoteRetentionPolicyParam:
    type: object
    x-tags:
      - ~Appendix
    description: "Snap remote retention policy for each remote system."
    properties:
      remoteSystem:
        description: "The remote system to which these retention settings are to be applied."
        $ref: '#/definitions/remoteSystem'
      isRemoteRetentionSameAsSource:
        description: "Indicates whether the remote policy is same as replication session source."
        type: boolean
      isRemoteAutoDelete:
        description: "(Applies when replicating a snap and isRemoteRetentionSameAsSource attributes is false.)
 Indicates whether this snapshot can be automatically deleted by the system per threshold settings on the destination.
 Values are: <ul> <li>true - Snapshot can be automatically deleted by the system per threshold settings on the destination.</li>
 <li>false - Snapshot cannot be deleted automatically on the destination.</li> </ul>"
        type: boolean
      remoteRetentionDuration:
        description: "Period in seconds specifying how long to retain the replicated snapshot on the destination 
 When the retention period expires, the remote system will delete the replicated snapshot. 
 <br> <br>The default retention period is seven days."
        type: integer
  cifsShareDelete:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for deleting a CIFS share when modifying a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      cifsShare:
        description: "CIFS share to delete, as defined by the cifsShare type."
        $ref: '#/definitions/cifsShare'
  hostGroupVmwareLunModify:
    type: object
    x-tags:
      - ~Appendix
    description: "The mapping relationship between VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupHostParam embedded type."
    properties:
      storageResource:
        description: "Reference to the VMware VMFS datastore that the host will grant production access to it."
        $ref: '#/definitions/storageResource'
      hlu:
        description: "Optional host lun Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the VMware VMFS datastore, and corresponding hostGroupVmwareLun has no defaultHlu, then system will generate a host lun ID for it."
        type: integer
  hostGroupLunModify:
    type: object
    x-tags:
      - ~Appendix
    description: "The mapping relationship between lun and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupHostParam embedded type."
    properties:
      lun:
        description: "Reference to the lun that the host will grant production access to it."
        $ref: '#/definitions/lun'
      hlu:
        description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
        type: integer
  nfsShareCreate:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for creating an NFS share when creating or modifying a file
  system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      path:
        description: "Local path to a location within the file system.
  <br/>
  <br/>
  With NFS, each share must have a unique local path. <font color=#0f0f0f>By
  default, the system creates a share to the root of the file system (top-most
  directory) at file system creation time. </font>This path specifies the unique
  location of the file system on the storage system.
  <br/>
  <br/>
  Before you can create additional shares within an NFS shared folder, you must
  create directories within it from a Linux/UNIX host that is connected to the
  file system. After a directory has been created from a mounted host, you can
  create a corresponding share and set access permissions accordingly."
        type: string
      name:
        description: "Unique name of the NFS share."
        type: string
      nfsShareParameters:
        description: "Common NFS share attributes, as defined by the nfsShareParameters resource
  type."
        $ref: '#/definitions/nfsShareParameters'
  snapScheduleParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Snapshot schedule settings for the storage resource.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      snapSchedule:
        description: "Snapshot schedule assigned to the storage resource, as defined by the snapSchedule type."
        $ref: '#/definitions/snapSchedule'
      isSnapSchedulePaused:
        description: "Indicates whether the assigned snapshot schedule is paused. Values are:
  <ul>
  <li>true - Assigned snapshot schedule is paused.</li>
  <li>false - Assigned snapshot schedule is not paused.</li>
  </ul>"
        type: boolean
  replicationParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Replication settings for the storage resource.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      isReplicationDestination:
        description: "Indicates whether the storage resource is a replication destination. Values
  are:
  <ul>
  <li>true - Storage resource is a replication destination.</li>
  <li>false - (Default) Storage resource is not a replication destination.</li>
  </ul>"
        type: boolean
  poolRaidStripeWidthInfo:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies to dynamic pools only)
  Information about the stripe width info in the pool."
    properties:
      rpm:
        description: "Revolutions Per Minute (RPMs)."
        type: integer
      stripeWidth:
        description: "RAID stripe width of the drives in the raid stripe info."
        $ref: '#/definitions/RaidStripeWidthEnum'
      driveTechnology:
        description: "Drive technology in the raid stripe info."
        $ref: '#/definitions/DiskTechnologyEnum'
      driveCount:
        description: "The number of physical drives in the raid stripe info."
        type: integer
      parityDrives:
        description: "The number of parity drives in the raid stripe info."
        type: integer
  raidGroupCache:
    type: object
    x-tags:
      - ~Appendix
    description: "A set of drives in a RAID Group used by FAST Cache."
    properties:
      id:
        description: "Unique identifier of the RAID Group instance."
        type: string
      name:
        description: "RAID Group name."
        type: string
      diskGroup:
        description: "diskGroup containing the raidGroup drives."
        $ref: '#/definitions/diskGroup'
      raidLevel:
        description: "RAID level of the group."
        $ref: '#/definitions/RaidTypeEnum'
      raidModulus:
        description: "RAID stripe length."
        $ref: '#/definitions/RaidStripeWidthEnum'
      parityDisks:
        description: "Number of parity drives in the group."
        type: integer
      disks:
        description: "List of drives in the group."
        type: array
        items:
          $ref: '#/definitions/disk'
  snapScheduleRule:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about snapshot schedule rules in the storage system."
    properties:
      id:
        description: "Unique identifier of the snapScheduleRule instance."
        type: string
      type:
        description: "Type of snapshot schedule rule."
        $ref: '#/definitions/ScheduleTypeEnum'
      minute:
        description: "Minute frequency for the snapshot schedule rule."
        type: integer
      hours:
        description: "Hourly frequency for the snapshot schedule rule."
        type: array
        items:
          type: integer
      daysOfWeek:
        description: "Days of the week for which the snapshot schedule rule applies."
        type: array
        items:
          $ref: '#/definitions/DayOfWeekEnum'
      daysOfMonth:
        description: "Days of the month for which the snapshot schedule rule applies."
        type: array
        items:
          type: integer
      interval:
        description: "Number of days or hours between snaps, depending on
  the rule type."
        type: integer
      isAutoDelete:
        description: "Indicates whether the system can automatically delete the snapshot
 based on pool automatic-deletion thresholds.
 Values are: <ul>
 <li>true - System can delete the snapshot based on pool automatic-deletion thresholds.</li>
 <li>false - System cannot delete the snapshot based on pool automatic-deletion thresholds.</li>
 </ul>"
        type: boolean
      retentionTime:
        description: "(Applies when the value of the isAutoDelete attribute is false.)
 Period of time in seconds for which to keep the snapshot."
        type: integer
      accessType:
        description: "For a file system or VMware NFS datastore snapshot schedule,
 indicates whether the snapshot created by the schedule has checkpoint or protocol type access"
        $ref: '#/definitions/FilesystemSnapAccessTypeEnum'
  lunParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Settings for a LUN.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      pool:
        description: "(Applies only to create requests.) 
  Storage pool from which to create the LUN."
        $ref: '#/definitions/pool'
      isThinEnabled:
        description: "(Applies only for create requests.)
  Indicates whether to enable thin provisioning for the LUN. 
  Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <br/>
  <b>Note:</b> If you enable thin provisioning for a LUN, you cannot disable it
  later."
        type: boolean
      isDataReductionEnabled:
        description: "Indicates whether to enable data reduction for the LUN. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
        type: boolean
      isAdvancedDedupEnabled:
        description: "Indicates whether to enable advanced deduplication for the LUN. It can only be enabled on the all flash high end platforms
  and only when the data reduction is enabled.
  If data reduction is disable, this is disabled automatically. 
  Deduplicated data will remain as is even after advanced deduplication is disabled. 
  Values are:
  <ul>
  <li>true - Enable advanced deduplication. </li>
  <li>false - Disable advanced deduplication(default). </li>
  </ul>"
        type: boolean
      size:
        description: "LUN size.

  The size is required in creation requests.

  In the modification requests the size parameter can be greater than the current LUN size in this case the LUN is expanded.

  To shrink the LUN size this parameter is less than the current LUN size.
  To allow shrink operation the parameter forceShrink must be set true."
        type: integer
      fastVPParameters:
        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the LUN, as defined by the fastVPParameters."
        $ref: '#/definitions/fastVPParameters'
      defaultNode:
        description: "Storage Processor (SP) that owns the LUN.  If not specified, the system
  chooses the default owner automatically."
        $ref: '#/definitions/NodeEnum'
      hostAccess:
        description: "Host access settings for the LUN, as defined by the blockHostAccess embedded resource type."
        type: array
        items:
          $ref: '#/definitions/blockHostAccessParam'
      ioLimitParameters:
        description: "IO limit settings for the LUN, as defined by the ioLimitParameters."
        $ref: '#/definitions/ioLimitParameters'
      migrationState:
        description: "Migration state for Destination PowerStore Orchestration."
        $ref: '#/definitions/DCMigrationStateEnum'
  poolConfiguration:
    type: object
    x-tags:
      - ~Appendix
    description: "System-recommended pool configuration settings. Instances of this resource
  type contain the output of the pool resource type's RecommendAutoConfiguration
  operation."
    properties:
      name:
        description: "Pool name."
        type: string
      description:
        description: "Pool description."
        type: string
      storageConfiguration:
        description: "Recommended configuration of the storage tier in the recommended pool, as
  defined by the storageCapabilityEstimation resource type."
        $ref: '#/definitions/storageTierConfiguration'
      alertThreshold:
        description: "Threshold at which the system will generate notifications about the amount of
  space remaining in the pool, specified as a percentage with 1% granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of allocated storage in the pool
  compared to the total pool size."
        type: integer
      poolSpaceHarvestHighThreshold:
        description: "(Applies when the automatic deletion of snapshots based on pool space usage is
  enabled for the system and pool.)
  <br/>
  <br/>
  Pool used space high threshold at which the system will automatically delete
  snapshots in the pool, specified as a percentage with .01% granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of used space in the pool compared
  to the total pool size. When the percentage of used space reaches this
  threshold, the system automatically deletes snapshots in the pool, until a low
  threshold is reached."
        type: number
        format: float
      poolSpaceHarvestLowThreshold:
        description: "(Applies when the automatic deletion of snapshots based on pool space usage is
  enabled for the system and pool.)
  <br/>
  <br/>
  Pool used space low threshold under which the system will stop automatically
  deleting snapshots in the pool, specified as a percentage with .01% granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of used pool space compared to the
  total pool size. When the percentage of used space in the pool falls below this
  threshold, the system stops the automatic deletion of snapshots in the pool,
  until a high threshold is reached."
        type: number
        format: float
      snapSpaceHarvestHighThreshold:
        description: "(Applies when the automatic deletion of snapshots based on snapshot space
  usage is enabled for the system and the pool.)
  <br/>
  <br/>
  Snapshot used space high threshold at which the system will automatically
  delete snapshots in the pool, specified as a percentage with .01% granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of space used by pool snapshots
  compared to the total pool size. When the percentage of space used by snapshots
  reaches this threshold, the system automatically deletes snapshots in the pool,
  until a low threshold is reached."
        type: number
        format: float
      snapSpaceHarvestLowThreshold:
        description: "(Applies when the automatic deletion of snapshots based on snapshot space
  usage is enabled for the system and the pool.)
  <br/>
  <br/>
  Snapshot used space low threshold under which the system will stop
  automatically delete snapshots in the pool, specified as a percentage with .01%
  granularity.
  <br/>
  <br/>
  This threshold is based on the percentage of space used by pool snapshots
  compared to the total pool size. When the percentage of space used by pool
  snapshots falls below this threshold, the system stops the automatic deletion
  of snapshots in the pool, until a high threshold is reached."
        type: number
        format: float
      isFastCacheEnabled:
        description: "(Applies if a FAST Cache license is installed on the system.) Indicates
  whether the pool will be used in the FAST Cache. Values are:
  <ul>
  <li>true - FAST Cache will be enabled for this pool.</li>
  <li>false - FAST Cache will be disabled for this pool.</li>
  </ul>"
        type: boolean
      isFASTVpScheduleEnabled:
        description: "(Applies if a FAST VP license is installed on the storage system.) Indicates
  whether to enable scheduled data relocations for the pool. Values are:
  <ul>
  <li>true - Enable scheduled data relocations for the pool.</li>
  <li>false - Disable scheduled data relocations for the pool.</li>
  </ul>"
        type: boolean
      isDiskTechnologyMixed:
        description: "Indicates whether the pool contains drives with different drive technologies,
  such as NVMe, FLASH, SAS and NL-SAS. Values are:
  <ul>
  <li>true - Pool contains drives with different drive technologies.</li>
  <li>false - Pool does not contain drives with different drive technologies.</li>
  </ul>"
        type: boolean
      maxSizeLimit:
        description: "Maximum pool capacity recommended for the storage system."
        type: integer
      maxDiskNumberLimit:
        description: "Maximum number of drives recommended for the storage system."
        type: integer
      isMaxSizeLimitExceeded:
        description: "Indicates whether the total size of all recommended pools exceeds that allowed
  by the storage system. Values are:
  <ul>
  <li>true - Total size of all recommended pools exceeds that allowed by the storage
  system.</li>
  <li>false - Total size of all recommended pools does not exceed that alllowed by the
  storage system.</li>
  <ul>"
        type: boolean
      isMaxDiskNumberLimitExceeded:
        description: "Indicates whether the total number of drives in the recommended pools exceeds
  that allowed by the storage system. Values are:
  <ul>
  <li>true - Total size of all recommended pools exceeds that allowed by the storage
  system.</li>
  <li>false - Total size of all recommended pools does not exceed that alllowed by the
  storage system.</li>
  <ul>"
        type: boolean
      isRPMMixed:
        description: "Indicates whether the pool contains drives with different rotational speeds.
  Values are:
  <ul>
  <li>true - Pool contains drives with different rotational speeds.</li>
  <li>false - Pool does not contain drives with different rotational speeds.</li>
  </ul>"
        type: boolean
  snapHostAccess:
    type: object
    x-tags:
      - ~Appendix
    description: "Host access settings for snapshot."
    properties:
      host:
        description: "Host that has access to the snapshot, as defined by the host resource type."
        $ref: '#/definitions/host'
      allowedAccess:
        description: "Access-level permissions for host."
        $ref: '#/definitions/SnapAccessLevelEnum'
  fastVPParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "FAST VP settings for the storage resource.
  <br/>
  (Applies if FAST VP is supported on the system and the corresponding license is installed.)
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      tieringPolicy:
        description: "FAST VP tiering policy for the storage resource."
        $ref: '#/definitions/TieringPolicyEnum'
  snapRemoteRetentionPolicy:
    type: object
    x-tags:
      - ~Appendix
    description: "Snap remote retention policy for each remote system."
    properties:
      remoteSystem:
        description: "Unique identifier of the remote system paticipate in async snap replication."
        $ref: '#/definitions/remoteSystem'
      isRemoteAutoDelete:
        description: "(Applies when replicating a snap and isRemoteRetentionSameAsSource attributes is false.)
 Indicates whether this snapshot can be automatically deleted by the system per threshold settings on the destination.
 Values are: <ul> <li>true - Snapshot can be automatically deleted by the system per threshold settings on the destination.</li>
 <li>false - Snapshot cannot be deleted automatically on the destination.</li> </ul>"
        type: boolean
      remoteExpirationTime:
        description: "(Applies when replicating a snap and the values of the isRemoteRetentionSameAsSource & isRemoteAutoDelete attributes are false.)
 Date and time after which the snapshot will expire on the destination."
        type: string
        format: date-time
      replicationStatus:
        description: "Indicates the replication status of this snap"
        $ref: '#/definitions/SnapReplicationStatusEnum'
  vmwareIscsiParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Settings for an iSCSI LUN used as a VMWare VMFS datastore.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      majorVersion:
        description: "VMFS major version."
        $ref: '#/definitions/ESXFilesystemMajorVersionEnum'
      blockSize:
        description: "VMFS block size."
        $ref: '#/definitions/ESXFilesystemBlockSizeEnum'
  cifsFilesystemParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Settings for a SMB (also known as CIFS) file system..
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      isCIFSSyncWritesEnabled:
        description: "Indicates whether the CIFS synchronous writes option is enabled for the file
  system. Values are:
  <ul>
  <li>true - CIFS synchronous writes option is enabled.</li>
  <li>false - CIFS synchronous writes option is disabled.</li>
  </ul>"
        type: boolean
      isCIFSOpLocksEnabled:
        description: "Indicates whether opportunistic file locks are enabled for the file system.
  Values are:
  <ul>
  <li>true - CIFS  opportunistic file locks are enabled.</li>
  <li>false - CIFS opportunistic file locks are disabled.</li>
  </ul>"
        type: boolean
      isCIFSNotifyOnWriteEnabled:
        description: "Indicates whether the system generates a notification when the file system is
  written to. Values are:
  <ul>
  <li>true - System generates a notification when the file system is written
  to.</li>
  <li>false - System does not generate a notification when the file system is
  written to.</li>
  </ul>"
        type: boolean
      isCIFSNotifyOnAccessEnabled:
        description: "Indicates whether the system generates a notification when a user accesses the
  file system. Values are:
  <ul>
  <li>true - System generates a notification when a user accesses the file
  system.</li>
  <li>false - System does not generate a notification when a user accesses the
  file system.</li>
  </ul>"
        type: boolean
      cifsNotifyOnChangeDirDepth:
        description: "Indicates the lowest directory level to which the enabled notifications apply,
  if any."
        type: integer
  installedSoftwareVersionPackages:
    type: object
    x-tags:
      - ~Appendix
    description: "List of relevant package information (name, version) installed in the release"
    properties:
      name:
        description: "Name of the installed software package."
        type: string
      version:
        description: "Version of the installed software package."
        type: string
  advancedDedupParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Advanced dedup settings for the storage resource.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      isAdvancedDedupEnabled:
        description: "Indicates whether advanced deduplication is enabled or disabled for the storage resource.
  Values are:
  <ul>
  <li>true - deduplication is enabled.</li>
  <li>false - deduplication is disabled.</li>
  </ul>"
        type: boolean
  filesystemParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Settings for a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      pool:
        description: "Storage pool to create the file system.
  The pool is required in creation requests and must not be passed in modification requests."
        $ref: '#/definitions/pool'
      nasServer:
        description: "NAS server that provides network connectivity to the share from the hosts.
  The NAS server parameter is required in creation request and must not be passed in modification requests."
        $ref: '#/definitions/nasServer'
      supportedProtocols:
        description: "(Applies to create operations only.)
  Sharing protocols supported by the file
  system."
        $ref: '#/definitions/FSSupportedProtocolEnum'
      flrVersion:
        description: "Indicates which File Level Retention (FLR) version is enabled on the file system.
  Values are:
  <ul>
  <li>0 - FLR is OFF on the file system.</li>
  <li>1 - Enterprise is enabled on the file system.</li>
  <li>2 - Compliance is enabled on the file system.</li>
  </ul>"
        $ref: '#/definitions/FLRVersionEnum'
      flrMinRetention:
        description: "The shortest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value plus the current date should be before date 2106-Feb-07."
        type: string
        format: date-time
      flrDefaultRetention:
        description: "The default retention period is used in an FLR-enabled file system when a file is locked and a retention period is not specified.
  The value plus the current date should be before date 2106-Feb-07."
        type: string
        format: date-time
      flrMaxRetention:
        description: "The longest period for which files on an FLR-enabled file system can be locked and protected from deletion.
  The value should be bigger than 0. The value plus the current date should be before date 2106-Feb-07."
        type: string
        format: date-time
      isFlrAutoLockEnabled:
        description: "Users can specify whether to automatically lock files in an FLR-enabled file system, as well as a policy interval for how long to wait after files are modified before the files are automatically locked. When enabled, auto-locked files are set with the default retention period value. This attribute indicates whether automatic lock is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic lock is enabled on the file system.</li>
  <li>false - automatic lock is disabled on the file system.</li>
  </ul>"
        type: boolean
      isFlrAutoDeleteEnabled:
        description: "Users can specify whether to automatically delete locked files from an FLR-enabled file system once their retention periods have expired. This value indicates whether automatic delete is enabled on the file system.
  Values are:
  <ul>
  <li>true - automatic delete is enabled on the file system.</li>
  <li>false - automatic delete is disabled on the file system.</li>
  </ul>"
        type: boolean
      flrAutoLockDelay:
        description: "Indicates how long to wait after files are modified before the files are automatically locked. The default value is 1 hour."
        type: string
        format: date-time
      errorThreshold:
        description: "Percentage of high threshold of occupied space for alert in the file system."
        type: integer
      warningThreshold:
        description: "Percentage of medium threshold of occupied space for alert in the file system."
        type: integer
      infoThreshold:
        description: "Percentage of low threshold of occupied space for alert in the file system."
        type: integer
      isThinEnabled:
        description: "(Applies to create operations only.) 
  Indicates whether to enable thin
  provisioning for file system. Values are:
  <ul>
  <li>true - Enable thin provisioning.</li>
  <li>false - Disable thin provisioning.</li>
  </ul>
  <b>Note:</b> If you enable thin provisioning for a file system, you cannot
  disable it later."
        type: boolean
      isDataReductionEnabled:
        description: "Indicates whether to enable data reduction for the file system. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
        type: boolean
      isAdvancedDedupEnabled:
        description: "Indicates whether to enable advanced dedup for the file system. Values are:
  <ul>
  <li>true - Enable advanced dedup </li>
  <li>false - Disable advanced dedup(default) </li>
  </ul>"
        type: boolean
      size:
        description: "Size of the file system."
        type: integer
      hostIOSize:
        description: "Typical write I/O size from the host to the file system."
        $ref: '#/definitions/HostIOSizeEnum'
      sizeAllocated:
        description: "Allocated size of the file system."
        type: integer
      minSizeAllocated:
        description: "Minimum size allocated of the file system."
        type: integer
      fastVPParameters:
        description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the file system, as defined by the fastVPParameters."
        $ref: '#/definitions/fastVPParameters'
      isCacheDisabled:
        description: "Indicates whether caching is disabled. Values are:
  <ul>
  <li>true - Caching is disabled.</li>
  <li>false - Caching is enabled.</li>
  </ul>"
        type: boolean
      accessPolicy:
        description: "Access policy."
        $ref: '#/definitions/AccessPolicyEnum'
      folderRenamePolicy:
        description: "File system folder rename policies.
  These policy choices control whether directory can be renamed from NFS or SMB clients 
  if at least one file is opened in the directory or in one of its children directory."
        $ref: '#/definitions/FSRenamePolicyEnum'
      lockingPolicy:
        description: "Locking policy."
        $ref: '#/definitions/FSLockingPolicyEnum'
      poolFullPolicy:
        description: "Behavior to follow when pool is full and a write to this filesystem is attempted. Values are:
  <ul>
  <li>Delete_All_Snaps - All snaps to the File System will be marked for deletion to free up space.</li>
  <li>Fail_Writes      - Writes to the File System will fail.</li>
  </ul>"
        $ref: '#/definitions/ResourcePoolFullPolicyEnum'
      fileEventSettings:
        description: "Indicates whether File Event Service is enabled for some protocols on the filesystem."
        $ref: '#/definitions/fileEventSettings'
  elementImport:
    type: object
    x-tags:
      - ~Appendix
    description: "Member element import details in an import session."
    properties:
      srcElement:
        description: "Source element of the element import"
        $ref: '#/definitions/resourceInfo'
      targetElement:
        description: "Target element of the element import"
        $ref: '#/definitions/resourceInfo'
      health:
        description: "Health information for the import element,  as defined by the health
  resource type."
        $ref: '#/definitions/health'
      syncProgress:
        description: "Import sync progress details."
        $ref: '#/definitions/importSyncProgress'
      state:
        description: "State of element import."
        $ref: '#/definitions/ImportStateEnum'
      targetImportIf:
        description: "Target replication interface for nas import data transfer between source system and target system."
        $ref: '#/definitions/replicationInterface'
  storageResourceDelete:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for deleting a storage resource when deleting a batch of storage resources.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      storageResource:
        description: "Storage resource to completely delete from the storage system."
        $ref: '#/definitions/storageResource'
      forceSnapDeletion:
        description: "Indicates whether to delete a storage resource's snapshots along with the storage resource. . Values are:
  <ul>
  <li>true - Delete all the storage resource's snapshots.</li>
  <li>false - Do not delete the storage resource's snapshots.</li>
  </ul>"
        type: boolean
      forceVVolsDeletion:
        description: "Indicates whether to delete all VVols of the VVol datastore along with the storage resource. Values are:
  <ul>
  <li>true - Delete all VVols of the VVol datastore.</li>
  <li>false - Do not delete all VVols of the VVol datastore.</li>
  </ul>"
        type: boolean
  hostLunModify:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for modifying the HLU of a Host LUN.
  <br/>
  <br/>
  This embedded class type is passed to the ModifyHostLUNs method of the host object."
    properties:
      hostLUN:
        description: "Reference to the hostLUN to be modified."
        $ref: '#/definitions/hostLUN'
      hlu:
        description: "New host LUN ID (HLU) to be assigned to the LUN."
        type: integer
  cifsShareModify:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for modifying a CIFS share when modifying a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      cifsShare:
        description: "CIFS share to modify, as defined by the cifsShare type."
        $ref: '#/definitions/cifsShare'
      cifsShareParameters:
        description: "CIFS share settings, as defined by the cifsShareParameters type."
        $ref: '#/definitions/cifsShareParameters'
  commonBaseSnap:
    type: object
    x-tags:
      - ~Appendix
    properties:
      replicationSessionId:
        type: string
      srcCommonBaseSnap:
        type: string
      dstCommonBaseSnap:
        type: string
  storageTierExtension:
    type: object
    x-tags:
      - ~Appendix
    description: "Set of RAID configurations for each storage tier that can be used for pool expansion."
    properties:
      tierType:
        description: "Tier type."
        $ref: '#/definitions/TierTypeEnum'
      raidConfigurations:
        description: "List of RAID configurations that can be used to expand the specified tier type, 
  as defined by the raidConfiguration type."
        type: array
        items:
          $ref: '#/definitions/raidConfiguration'
  virtualVolumeBinding:
    type: object
    x-tags:
      - ~Appendix
    description: "VASA 2.0 VVol bindings, showing the connection between the VVol on the storage array and the VMware protocol endpoint."
    properties:
      vmwarePE:
        description: "VMware protocol endpoint to which the VVol is bound."
        $ref: '#/definitions/vmwarePE'
      bindingDetails:
        description: "Export path for Virtual Volumes bound with NFS. Secondary SCSI ID for Virtual Volumes bound with iSCSI."
        type: string
  nameValuePair:
    type: object
    x-tags:
      - ~Appendix
    description: "List of name value pairs used to embed additional data in an object."
    properties:
      name:
        description: "Candidate description name."
        type: string
      value:
        description: "Candidate description value."
        type: string
  vasaProviderParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "An object represents parameters for VASA provider registration."
    properties:
      localUsername:
        description: "Username of the local user account which will be used by vSphere to register VASA provider."
        type: string
      localPassword:
        description: "Password of the local user account which will be used by vSphere to register VASA provider."
        type: string
  lunThinCloneCreate:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for creating a LUN Thin Clone.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      parentLun:
        description: "Parent LUN of Thin Clone."
        $ref: '#/definitions/lun'
      name:
        description: "LUN Thin Clone name unique to the storage system."
        type: string
      description:
        description: "LUN Thin Clone description."
        type: string
      lunParameters:
        description: "(Required) Settings for the LUN Thin Clone, as defined by the
  lunParameters resource type."
        $ref: '#/definitions/lunParameters'
  site:
    type: object
    x-tags:
      - ~Appendix
    description: "Description of the physical address or site where EMC thinks this system is currently located."
    properties:
      siteId:
        description: "Unique identifier of the site instance."
        type: string
      siteName:
        description: "Site name."
        type: string
      siteDescription:
        description: "Site description."
        type: string
      address:
        description: "The address of the site where the system is located."
        type: string
      state:
        description: "The state of the site where the system is located."
        type: string
      country:
        description: "The country of the site where the system is located."
        type: string
      countryName:
        description: "The country name where the system is located."
        type: string
      city:
        description: "The city of the site where the system is located."
        type: string
      isCurrentLocation:
        description: "True, when this is the site at which EMC believes the system is currently residing."
        type: boolean
  lunModify:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for modifying a LUN when modifying a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      lun:
        description: "LUN to modify."
        $ref: '#/definitions/lun'
      name:
        description: "New name of the LUN unique to the storage system."
        type: string
      description:
        description: "New LUN description."
        type: string
      lunParameters:
        description: "Settings for the LUN, as defined by the lunParameters."
        $ref: '#/definitions/lunParameters'
  fileLDAPServerSourceParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "For replication destination NAS servers, information about the corresponding source NAS server's LDAP settings."
    properties:
      addresses:
        description: "List of IP addresses of LDAP servers of the source NAS server"
        type: array
        items:
          type: string
  potentialHost:
    type: object
    x-tags:
      - ~Appendix
    description: "This class is used to hold discovered hosts of a vCenter or ESXi Host."
    properties:
      name:
        description: "Display name of the discovered ESXi server"
        type: string
      serverName:
        description: "DNS name of ESXi server"
        type: string
      description:
        description: "Description of ESXi server"
        type: string
      osName:
        description: "OS name of ESXi server"
        type: string
      osVersion:
        description: "OS version of ESXi server"
        type: string
      uuid:
        description: "Vendor unique identifier of ESXi server"
        type: string
      kernelIPs:
        description: "Kernel IPs of ESXi server"
        type: array
        items:
          type: string
      mgmtIPs:
        description: "Management IPs of ESXi server"
        type: array
        items:
          type: string
      fcInitiators:
        description: "Fibre channel initiators of ESXi server"
        type: array
        items:
          type: string
      iscsiInitiators:
        description: "Iscsi initiators of ESXi server"
        type: array
        items:
          type: string
      matchedConditions:
        description: "How the discovered ESXi hosts match the existing hosts already known to the
  array"
        type: array
        items:
          $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
      matchedHosts:
        description: "Existing hosts that match the discovered vCenter/ESXi Host"
        type: array
        items:
          $ref: '#/definitions/host'
      matchedPotentialHostsConditions:
        description: "How the potential ESXi hosts conflict among themseleves"
        type: array
        items:
          $ref: '#/definitions/HostContainerPotentialHostMatchConditionEnum'
      matchedPotentialHosts:
        description: "The names of the other potential hosts that match this potential host in any way"
        type: array
        items:
          type: string
      importOption:
        description: "How ESXi server can be imported"
        $ref: '#/definitions/HostContainerPotentialHostImportOptionEnum'
  blockHostAccessParam:
    type: object
    x-tags:
      - ~Appendix
    description: "Host access settings for changing host access of LUNs.
  <br/>
  <br/>
  This resource type is embedded in the lunParameters embedded type."
    properties:
      host:
        description: "Host to grant access to LUN, as defined by host type."
        $ref: '#/definitions/host'
      accessMask:
        description: "Host access mask."
        $ref: '#/definitions/HostLUNAccessEnum'
      hlu:
        description: "Host LUN Identifier for the host storage. This is the user specified host LUN ID when access the LUN.
  If not set, system will automatically generate with next available Host LUN ID."
        type: integer
  svcCRU:
    type: object
    x-tags:
      - ~Appendix
    description: "Service-related information for the Customer Replaceable Units (CRUs) 
  installed on the storage processors. You can use this information for 
  servicing the CRUs. 
  <br/>
  <br/>"
    properties:
      type:
        description: "CRU type"
        $ref: '#/definitions/SvcCRUTypeEnum'
      serialNumber:
        description: "CRU serial number."
        type: string
      partNumber:
        description: "CRU part number."
        type: string
  lunRemove:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for removing a LUN from a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      lun:
        description: "LUN to remove from the Consistency group.
  The LUN removed from Consistency group is not deleted from the storage system and simply becomes a standalone LUN not associated with any Consistency group.
  A LUN removed from one Consistency group then can be added to another Consistency group.
  To also delete the LUN after removing it, use the deleteLun parameter instead."
        $ref: '#/definitions/lun'
  poolFASTVP:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies if FAST VP is supported on the system and the corresponding license is installed.)
  FAST VP settings for the pool associated with this embedded type."
    properties:
      status:
        description: "Data relocation status."
        $ref: '#/definitions/FastVPStatusEnum'
      relocationRate:
        description: "Data relocation rate."
        $ref: '#/definitions/FastVPRelocationRateEnum'
      isScheduleEnabled:
        description: "Indicates if scheduled data relocations are enabled:
  <ul>
  <li>true - Scheduled data relocations are enabled.</li>
  <li>false - Scheduled data relocations are disabled.</li>
  </ul>"
        type: boolean
      relocationDurationEstimate:
        description: "Estimated time required for the data relocation."
        type: string
        format: date-time
      sizeMovingDown:
        description: "Size of data to move to a lower tier. This value is 0 for a single tier
  pool."
        type: integer
      sizeMovingUp:
        description: "Size of data to move to higher tier. This value is 0 for a single tier pool."
        type: integer
      sizeMovingWithin:
        description: "Size of data to move within a tier."
        type: integer
      percentComplete:
        description: "Percent of data relocated so far in the relocation process."
        type: integer
      type:
        description: "Data relocation type."
        $ref: '#/definitions/PoolDataRelocationTypeEnum'
      dataRelocated:
        description: "Size of data relocated. For a completed data relocation, this is the total
  size of data relocated since the last data relocation session."
        type: integer
      lastStartTime:
        description: "Time of day to start scheduled data relocations."
        type: string
        format: date-time
      lastEndTime:
        description: "Time of day at which scheduled data relocations should end."
        type: string
        format: date-time
  snapReplicationPolicy:
    type: object
    x-tags:
      - ~Appendix
    description: "Describes or specifies the policy for replicating either hourly or daily scheduled snaps of the source storageResource."
    properties:
      isReplicatingSnaps:
        description: "Is replicating  scheduled snapshots or not
  Values are: <ul> <li>true -  scheduled snapshots will be replicated to the destination.</li>
  <li>false -  scheduled snapshots will not be replicated to the destination.</li> </ul>"
        type: boolean
      isRetentionSameAsSource:
        description: "(Can be only be applied if isReplicatingSnaps is true.)
  Indicates whether or not the remote (destination) retention policy applied for snapshots is the same as the local (source) retention policy. 
  Values are: <ul> <li>true - The same retention policy is applied to the destination snaphots.</li>
  <li>false - A customized policy is applied to destination snapshots.</li> </ul>"
        type: boolean
      isAutoDelete:
        description: "(Can be only be applied if isReplicatingSnaps is true and isRetentionSameAsSource is false.)
  Indicates whether scheduled snapshots will be replicated to the destination can be automatically.
  Values are: <ul> <li>true - Snapshots can be automatically deleted by the system per threshold settings.</li>
  <li>false - Snapshots cannot be deleted automatically.</li> </ul>"
        type: boolean
      retentionDuration:
        description: "(Can be only be applied if isReplicatingSnaps is true and isRetentionSameAsSource & isAutoDelete are false.)
  Number of seconds after which the scheduled snapshots will expire on the destination."
        type: integer
  lunDelete:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for deleting a LUN when modifying a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      lun:
        description: "LUN to remove from the Consistency group and completely delete from the storage system.
  To remove the LUN from the Consistency group without deletion from the storage system put the LUN into lunRemove object."
        $ref: '#/definitions/lun'
      forceSnapDeletion:
        description: "Indicates whether to delete all LUN snapshots along with the LUN. Values are:
  <ul>
  <li>true - Delete all LUN snapshots.</li>
  <li>false - Do not delete LUN snapshots.</li>
  </ul>"
        type: boolean
  hostGroupHostModify:
    type: object
    x-tags:
      - ~Appendix
    description: "The mapping relationship between lun/VMware VMFS datastore and hlu id on a host.
 <br/>
 <br/>
 This embedded object is embedded in the hostGroupLunParam/hostGroupVmwareLunParam embedded type."
    properties:
      host:
        description: "Reference to the host to grant production access to the LUN."
        $ref: '#/definitions/host'
      hlu:
        description: "Optional host LUN Identifier (HLU) for the host storage.
  If not specified, and the host does not have production access for the LUN/VMware VMFS datastore, and corresponding hostGroupLUN has no defaultHlu, then system will generate a host LUN ID for it."
        type: integer
  fileDNSServerSourceParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "For replication destination NAS servers, information about the corresponding source NAS server's DNS settings."
    properties:
      addresses:
        description: "List of IP addresses of DNS servers of the source NAS server"
        type: array
        items:
          type: string
  hostGroupLunParam:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the hosts access the lun.
 <br/>
 <br/>
 This embedded object is passed to the create and modifyLuns method of hostGroup.
 <ul>
   <li>It is not allowed to specify host that is not in the host group in hostGroupHostModifys property.</li>
   <li>If the hlu property is not specified and this embedded object is used in addHostGroupLunParams parameter of hostGroup.modifyLuns, or hostGroupLunParams parameter of hostGroup.create:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the LUN specified by lun property will be modified to be accessible by all hosts in the host group.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the LUN will be modified to be accessible by these hosts.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the LUN will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
   <li>If the hlu property is not specified and this embedded object is used in modifyHostGroupLunParams parameter of hostGroup.modifyLuns:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the LUN specified by lun property will keep unchanged.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the host access to the LUN will keep unchanged.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the LUN will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
 </ul>"
    properties:
      lun:
        description: "Reference to the lun to be added to the host group or the lun that the host access for it to be updated."
        $ref: '#/definitions/lun'
      hlu:
        description: "An optional host LUN ID to be set to all hosts in the host group.
  If specified, then all hosts in the host group will grant production access for this LUN with this host LUN ID, and the hostGroupHostModifys property will be ignored."
        type: integer
      hostGroupHostModifys:
        description: "An optional list of embedded hostGroupHostModify object to customize host LUN ID for each host.
  It is not allowed to specify host that is not in the host group."
        type: array
        items:
          $ref: '#/definitions/hostGroupHostModify'
  vvolDatastoreCapabilityProfilesParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Capability profile parameters used for creation/modification of a VVol Datastore.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      addCapabilityProfile:
        description: "CapabilityProfiles to add to the VVol datastore, as defined by the VVol Datastore resource type."
        type: array
        items:
          $ref: '#/definitions/capabilityProfileParameters'
      modifyCapabilityProfile:
        description: "CapabilityProfiles, used by the VVol Datastore, support of that should be modified."
        type: array
        items:
          $ref: '#/definitions/capabilityProfileParameters'
      removeCapabilityProfile:
        description: "CapabilityProfiles to remove from the VVol datastore, as defined by the VVol Datastore resource type."
        type: array
        items:
          $ref: '#/definitions/capabilityProfile'
  fileNISServerSourceParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "For replication destination NAS servers, information about the corresponding source NAS server's NIS settings."
    properties:
      addresses:
        description: "List of IP addresses of NIS servers of the source NAS server"
        type: array
        items:
          type: string
  capabilityProfileRecommendation:
    type: object
    x-tags:
      - ~Appendix
    description: "An entity representing a recommendation for a VASA 2.0 SPBM capability profile."
    properties:
      driveTypes:
        description: "List of drive types for individual capabilities."
        type: array
        items:
          $ref: '#/definitions/DiskTierEnum'
      fastCacheStates:
        description: "List of fast cache states for individual capabilities."
        type: array
        items:
          $ref: '#/definitions/FastCacheStateEnum'
      raidTypes:
        description: "List of RAID types for individual capabilities."
        type: array
        items:
          $ref: '#/definitions/RaidTypeEnum'
      spaceEfficiencies:
        description: "List of space efficiencies for individual capabilities."
        type: array
        items:
          $ref: '#/definitions/SpaceEfficiencyEnum'
      tieringPolicies:
        description: "List of tiering policies for individual capabilities."
        type: array
        items:
          $ref: '#/definitions/TieringPolicyEnum'
      serviceLevels:
        description: "List of service levels for individual capabilities."
        type: array
        items:
          $ref: '#/definitions/ServiceLevelEnum'
  installedSoftwareVersionLanguage:
    type: object
    x-tags:
      - ~Appendix
    description: "List the language pack information (name, version) installed in the release"
    properties:
      name:
        description: "Name of the installed software language."
        type: string
      version:
        description: "Version of the installed software language."
        type: string
  statValue:
    type: object
    x-tags:
      - ~Appendix
    description: "A statValue object contains one real-time sample of a single metric.
  Its JSON representation is the following:
    statValue
      {}
      { values }
    values
      pair
      pair , values
    pair
      string : value
    value
      float
      statValue

    The string in a pair is the ID of an object.
    The value is the metric value for that object."
  fileInterfaceSourceParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "For an interface on a nasServers that is a replication destinations, this object contains the settings for corresponding interface on the source nasServer."
    properties:
      ipAddress:
        description: "IP address of the network interface of the source NAS server"
        type: string
      netmask:
        description: "IPv4 netmask for the network interface of the source NAS server."
        type: string
      v6PrefixLength:
        description: "IPv6 prefix length for the network interface of the source NAS server."
        type: integer
      gateway:
        description: "IPv4 or IPv6 gateway address for the network interface of the source NAS server."
        type: string
      vlanId:
        description: "Virtual Local Area Network (VLAN) identifier for the network interface of the source NAS server."
        type: integer
      ipPort:
        description: "Physical port or link aggregation of the network interface of the source NAS server."
        $ref: '#/definitions/ipPort'
  jobTaskRequest:
    type: object
    x-tags:
      - ~Appendix
    description: "The batch job consists of a group of primitive REST API POST requests. Each is considered to be a task of the job.
  This object is to represent such primitive request.
  <br/>
  <br/>
  For information about jobs, see the Help topic for the job resource type."
    properties:
      name:
        description: "Name of the task. Should be unique within a batch request job."
        type: string
      description:
        description: "Description of the task. UTF-8 character message is acceptable."
        type: string
      submitTime:
        description: "Date and time when the jobTask was submitted."
        type: string
        format: date-time
      startTime:
        description: "Date and time when the jobTask started."
        type: string
        format: date-time
      object:
        description: "Object name of corresponding primitive REST API request."
        type: string
      action:
        description: "Name of associated request action."
        type: string
      parametersIn:
        description: "Request body of associated request action. This is nearly the same as a primitive REST API POST request body except that
 it could use '@<step name>.<out parameter name>' notation, which implies using the output value of a previous
 step as input value."
        $ref: '#/definitions/baseRequest'
      dependencies:
        description: "jobTaskRequest name list. Current REST request will not be posted until the requests in the list are finished."
        type: array
        items:
          type: string
  cifsShareParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Settings for a CIFS share.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      description:
        description: "CIFS share description."
        type: string
      isReadOnly:
        description: "Indicates whether the CIFS share is read-only. Values are:
  <ul>
  <li>true - CIFS share is read-only.</li>
  <li>false - CIFS share is read-write.</li>
  </ul>"
        type: boolean
      isEncryptionEnabled:
        description: "Indicates whether CIFS encryption for Server Message Block (SMB) 3.0 is
  enabled for the CIFS share. Values are:
  <ul>
  <li>true - CIFS encryption for SMB 3.0 is enabled.
  <li>false - CIFS encryption for SMB 3.0 is disabled.
  </ul>"
        type: boolean
      isContinuousAvailabilityEnabled:
        description: "Indicates whether continuous availability for SMB 3.0 is enabled for the CIFS
  share. Values are:
  <ul>
  <li>true - Continuous availability for SMB 3.0 is enabled for the CIFS share.
  <li>false - Continuous availability for SMB 3.0 is disabled for the CIFS
  share.
  </ul>"
        type: boolean
      isACEEnabled:
        description: "Indicates whether the CIFS share access-level permissions are enabled. Values
  are:
  <ul>
  <li>true - CIFS share access-level permissions are enabled.
  <li>false - CIFS share access-level permissions are disabled.
  </ul>"
        type: boolean
      addACE:
        description: "Users, domain users, or group Security Identifiers (SIDs), 
  and associated access-level permissions, to add to the access list, as defined by
  cifsShareACE resource type."
        type: array
        items:
          $ref: '#/definitions/cifsShareACE'
      deleteACE:
        description: "Users, domain users, or group Security Identifiers (SIDs) to remove from the
  access list."
        type: array
        items:
          type: string
      isABEEnabled:
        description: "Enumerate file with read access and directories with list access in folder listings.
  Values are:
  <ul>
  <li> true - Enumerating is enabled. </li>
  <li> false - Enumerating is disabled. </li>
  </ul>"
        type: boolean
      isBranchCacheEnabled:
        description: "Branch Cache optimizes traffic between the NAS server and Branch Office Servers.
  Values are:
  <ul>
  <li> true - Branch Cache is enabled. </li>
  <li> false - Branch Cache is disabled. </li>
  </ul>"
        type: boolean
      offlineAvailability:
        description: "Offline Files store a version of the shared resources on the client computer in the file system cache, a reserved portion of disk space, which the client computer can access even when it is disconnected from the network."
        $ref: '#/definitions/CifsShareOfflineAvailabilityEnum'
      umask:
        description: "The default UNIX umask for new files created on the share."
        type: string
  nfsShareParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Settings for an NFS share.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      description:
        description: "NFS share description."
        type: string
      isReadOnly:
        description: "Indicates whether the NFS share is read-only. Values are:
  <ul>
  <li>true - NFS share is read-only.</li>
  <li>false - NFS share is read-write.</li>
  </ul>"
        type: boolean
      defaultAccess:
        description: "Default access level for all hosts accessing the NFS share."
        $ref: '#/definitions/NFSShareDefaultAccessEnum'
      minSecurity:
        description: "Minimal security level that must be provided by a client to mount the NFS share."
        $ref: '#/definitions/NFSShareSecurityEnum'
      nfsOwnerUsername:
        description: "(Applies to NFS shares of VMware NFS storage resources.)
 Default owner of the NFS share associated with the datastore. Required if secure NFS enabled. Attribute minSecurity should be set to Kerberos value. 
 For NFSv3 or NFSv4 without Kerberos, the default owner is root."
        type: string
      noAccessHosts:
        description: "Hosts with no access to the NFS share or its snapshots, as defined by the host
  resource type."
        type: array
        items:
          $ref: '#/definitions/host'
      readOnlyHosts:
        description: "Hosts with read-only access to the NFS share and its snapshots, as defined by
  the host resource type."
        type: array
        items:
          $ref: '#/definitions/host'
      readWriteHosts:
        description: "Hosts with read-write access to the NFS share and its snapshots, as defined by
  the host resource type."
        type: array
        items:
          $ref: '#/definitions/host'
      readOnlyRootAccessHosts:
        description: "Hosts with read-only root access to the NFS share and its
  snapshots, as defined by the host resource type."
        type: array
        items:
          $ref: '#/definitions/host'
      rootAccessHosts:
        description: "Hosts with read-write root access to the NFS share and its
  snapshots, as defined by the host resource type."
        type: array
        items:
          $ref: '#/definitions/host'
      noAccessHostsString:
        description: "Hosts with no access to the NFS share or its snapshots,
  defined as comma-separated list of hostnames, subnets, IPs,
  domains or netgroups."
        type: string
      readOnlyHostsString:
        description: "Hosts with read-only access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
        type: string
      readWriteHostsString:
        description: "Hosts with read-write access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
        type: string
      readOnlyRootHostsString:
        description: "Hosts with read-only root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
        type: string
      readWriteRootHostsString:
        description: "Hosts with read-write root access to the NFS share or its
  snapshots, defined as comma-separated list of hostnames,
  subnets, IPs, domains or netgroups."
        type: string
      anonymousUID:
        description: "Specifies the user ID of the anonymous account."
        type: integer
      anonymousGID:
        description: "Specifies the group ID of the anonymous account."
        type: integer
      exportOption:
        description: "Specifies the bitmask of various options of the NFS share.
  Values are:
  <ul>
  <li> 0x0001 - hostString - if set, the access to the NFS
  share per host is defined according the hostsString lists.
  Otherwise, the access is defined according the hostID lists.
  </li>
  <li> 0x0002 - noSUID - if set, do not allow access to set
  SUID. Otherwise, allow access.
  </li>
  </ul>"
        type: integer
  jobTask:
    type: object
    x-tags:
      - ~Appendix
    description: "An embedded task within a job. A job consists a series of tasks.
  In case of batch request job, each jobTask maps to a primitive REST API POST request.
  <br/>
  <br/>
  For information about jobs, see the Help topic for the job resource type."
    properties:
      name:
        description: "Task name."
        type: string
      description:
        description: "Description of the task."
        type: string
      object:
        description: "Object name of corresponding primitive REST API request if this jobTask belongs to a batch request job."
        type: string
      action:
        description: "Name of associated request action if this jobTask belongs to a batch request job."
        type: string
      state:
        description: "Current state of the job task."
        $ref: '#/definitions/JobTaskStateEnum'
      messages:
        description: "Message(s) for this task."
        type: array
        items:
          $ref: '#/definitions/message'
      steps:
        description: "Task steps for this task."
        type: array
        items:
          $ref: '#/definitions/jobTask'
      parametersIn:
        description: "Request body of associated request action. This is nearly the same as a primitive REST API POST request body except that
 it could use '@<step name>.<out parameter name>' notation, which implies using the output value of a previous
 step as input value."
        type: string
      parametersOut:
        description: "Output parameters and their values of what the associated request action is calling if this jobTask belongs to a batch request job."
        type: string
      submitTime:
        description: "Date and time when the jobTask was submitted if this jobTask belongs to a batch request job."
        type: string
        format: date-time
      startTime:
        description: "Date and time when the jobTask started if this jobTask belongs to a batch request job."
        type: string
        format: date-time
      affectedResource:
        description: "Primary resource affected by this task."
        $ref: '#/definitions/affectedResource'
  cifsShareCreate:
    type: object
    x-tags:
      - ~Appendix
    description: "(Applies to SMB (also known as CIFS) file shares.)
  Parameters used for creating a CIFS share when creating or modifying a file
  system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      path:
        description: "Local path to a location within a file system.
  <br/>
  <br/>
  <font color=#0f0f0f>By default, the system creates a share to the root of
  the file system (top-most directory) at file system creation time. </font>This
  path specifies the unique location of the file system on the storage system.
  CIFS shares allow you to create multiple network shares with the same local
  path. You can specify different host-side access controls for different users,
  while setting up network shares within the file system to access common
  content.
  <br/>
  <br/>
  If you want the CIFS network shares within the same file system to access
  different content, you must first create a share to the root of the file
  system. Then, you can connect from a Windows host, create additional
  directories from Windows, and create corresponding network shares using the
  REST API, Unisphere GUI, or Unisphere CLI."
        type: string
      name:
        description: "Name of the CIFS share unique to NAS server."
        type: string
      cifsServer:
        description: "CIFS server to use for CIFS share creation, as defined by the cifsServer
  type."
        $ref: '#/definitions/cifsServer'
      cifsShareParameters:
        description: "CIFS share settings, as defined by the cifsShareParameters type."
        $ref: '#/definitions/cifsShareParameters'
  ioLimitRuleSetting:
    type: object
    x-tags:
      - ~Appendix
    description: "Set of Quality of Service (QoS) rules included in the Qos policy."
    properties:
      id:
        description: "Unique identifier of the ioLimitRule instance."
        type: string
      name:
        description: "I/O limit rule name."
        type: string
      description:
        description: "I/O limit rule description."
        type: string
      maxIOPS:
        description: "Read/write IOPS limit."
        type: integer
      maxKBPS:
        description: "Read/write KB/s limit."
        type: integer
      maxIOPSDensity:
        description: "Read/write density-based IOPS limit."
        type: integer
      maxKBPSDensity:
        description: "Read/write density-based KB/s limit."
        type: integer
      burstRate:
        description: "The percentage of read/write IOPS and/or KBPS over the limits a storage object is allowed to process during a spike in demand."
        type: integer
      burstTime:
        description: "How long a storage object is allowed to process burst traffic."
        type: string
        format: date-time
      burstFrequency:
        description: "How often a storage object is allowed to process burst traffic for the duration of burst time"
        type: string
        format: date-time
  snapHostAccessParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Host access settings for snapshot."
    properties:
      host:
        description: "Host to grant access to snapshot, as defined by host type."
        $ref: '#/definitions/host'
      allowedAccess:
        description: "Access-level permissions for host."
        $ref: '#/definitions/SnapAccessLevelEnum'
  nfsShareDelete:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for deleting an NFS share when modifying a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      nfsShare:
        description: "NFS share to delete."
        $ref: '#/definitions/nfsShare'
  filesystemImportParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Settings to import a file system."
    properties:
      sourceFilesystemId:
        description: "Source file system id."
        type: string
      targetPool:
        description: "Target pool."
        $ref: '#/definitions/pool'
      importAsVMwareDatastore:
        description: "Indicates whether to import this file system as VMware datastore.
  Values are:
  <ul>
  <li>true - Import this file system as VMware datastore, which results in vmwarefs storage resource type.</li>
  <li>false - Do not import this file system as VMware datastore, which results in filesystem storage resource type.</li>
  </ul>"
        type: boolean
      isDataReductionEnabled:
        description: "Indicates whether to enable data reduction on the target file system. Values are:
  <ul>
  <li>true - Enable data reduction(default) </li>
  <li>false - Disable data reduction </li>
  </ul>"
        type: boolean
      isAdvancedDedupEnabled:
        description: "Indicates whether advanced dedup should be enabled on the target file system.
  Values are:
  <ul>
  <li>true - Enable advanced dedup on the target file system.</li>
  <li>false - Do not enable advanced dedup on the target file system.</li>
  </ul>"
        type: boolean
      targetAccessPolicy:
        description: "Target access policy."
        $ref: '#/definitions/AccessPolicyEnum'
  remoteSystemBandwidthSchedule:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about remote system bandwidth schedule.
  This object specifies the maximum bandwidth that would be evenly shared by all asynchronous replications on a remote system with source role and having active data transfer due to either RPO or manual sync between the from hour and the to hour on the days of week. Please note the maximum bandwidth is a limit that all replication data transfer total speed should not exceed, the actual replication data transfer speed is up to physical network."
    properties:
      fromHour:
        description: "Starting hour ranging from 0 to 23 indicating when this bandwidth schedule applies.
   fromHour value should be smaller than toHour value.
   fromHour will be based on the schedule time zone configured for snap schedules
   and asynchronous replication bandwidth schedules."
        type: integer
      toHour:
        description: "Ending hour ranging from 1 to 24 indicating when this bandwidth schedule applies.
   toHour value should be bigger than fromHour value.
   toHour will be based on the schedule time zone configured for snap schedules
   and asynchronous replication bandwidth schedules."
        type: integer
      daysOfWeek:
        description: "Days of the week indicating when this bandwidth schedule applies."
        type: array
        items:
          $ref: '#/definitions/DayOfWeekEnum'
      bandwidth:
        description: "Maximum bandwidth value in KB/s ranging from 0 to 524288000.
   If not specified, available bandwidth up to physical network bandwidth will be used."
        type: integer
  lunAdd:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for adding a LUN to a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      lun:
        description: "Existing LUN to add to the Consistency group.
  This LUN should not belong to any other Consistency group."
        $ref: '#/definitions/lun'
  compressionParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Inline compression settings for the storage resource.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      isCompressionEnabled:
        description: "Indicates whether inline compression is enabled or disabled for the storage resource.
  Values are:
  <ul>
  <li>true - (default)inline compression is enabled.</li>
  <li>false - inline compression is disabled.</li>
  </ul>"
        type: boolean
  nfsShareModify:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for modifying an NFS share when modifying a file system.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      nfsShare:
        description: "NFS share to modify."
        $ref: '#/definitions/nfsShare'
      nfsShareParameters:
        description: "NFS share settings, as defined by the nfsShareParameters resource type."
        $ref: '#/definitions/nfsShareParameters'
  hostGroupVmwareLunParam:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the hosts access the VMware VMFS datastore.
 <br/>
 <br/>
 This embedded object is passed to the create and modifyVmwareLuns method of hostGroup.
 <ul>
   <li>It is not allowed to specify host that is not in the host group in hostGroupHostModifys property.</li>
   <li>If the hlu property is not specified and this embedded object is used in addHostGroupVmwareLunParams parameter of hostGroup.modifyVmwareLuns, or hostGroupVmwareLunParams parameter of hostGroup.create:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the VMware VMFS datastore specified by storageResource property will be modified to be accessible by all hosts in the host group.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the VMware VMFS datastore will be modified to be accessible by these hosts.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the VMware VMFS datastore will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
   <li>If the hlu property is not specified and this embedded object is used in modifyHostGroupVmwareLunParams parameter of hostGroup.modifyVmwareLuns:
     <ul>
       <li>If the hostGroupHostModifys property is absent or it is an empty list, the VMware VMFS datastore specified by storageResource property will keep unchanged.</li>
       <li>For the hosts that is in the host group, but not appear in the hostGroupHostModifys property, the host access to the VMware VMFS datastore will keep unchanged.</li>
       <li>For the hosts that is in the host group and listed in the hostGroupHostModifys property, the VMware VMFS datastore will be updated according to these embedded hostGroupHostModify objects.</li>
     </ul>
   </li>
 </ul>"
    properties:
      storageResource:
        description: "Reference to the VMware VMFS datastore to be added to the host group or the VMware VMFS datastore that the host access for it to be updated."
        $ref: '#/definitions/storageResource'
      hlu:
        description: "An optional host LUN ID to be set to all hosts in the host group.
  If specified, then all hosts in the host group will grant production access for this VMware VMFS datastore with this host LUN ID, and the hostGroupHostModifys property will be ignored."
        type: integer
      hostGroupHostModifys:
        description: "An optional list of embedded hostGroupHostModify object to customize host LUN ID for each host.
  It is not allowed to specify host that is not in the host group."
        type: array
        items:
          $ref: '#/definitions/hostGroupHostModify'
  upgradeMessage:
    type: object
    x-tags:
      - ~Appendix
    description: "A message occurrence.
  
  This is also the message object returned in the body of non-2xx return code
  REST responses."
    properties:
      errorCode:
        description: "Error code for this message."
        type: string
      messages:
        description: "List of localized messages."
        type: array
        items:
          $ref: '#/definitions/localizedMessage'
      severity:
        description: "Severity level associated with this message."
        $ref: '#/definitions/SeverityEnum'
      httpStatus:
        description: "HTTP status code for this message."
        type: integer
  poolTier:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the tiers in the pool."
    properties:
      tierType:
        description: "Tier type."
        $ref: '#/definitions/TierTypeEnum'
      stripeWidth:
        description: "RAID stripe width of the drives in the tier."
        $ref: '#/definitions/RaidStripeWidthEnum'
      raidType:
        description: "RAID type of the drives in the tier."
        $ref: '#/definitions/RaidTypeEnum'
      sizeTotal:
        description: "Total size of space in the tier."
        type: integer
      sizeUsed:
        description: "Size of used space in the tier."
        type: integer
      sizeFree:
        description: "Size of free space in the tier."
        type: integer
      sizeMovingDown:
        description: "Size of data scheduled to be moved to a lower tier. This value is 0 for a
  single-tier pool."
        type: integer
      sizeMovingUp:
        description: "Amount of data scheduled to be moved to a higher tier. This value is 0 for a
  single tier pool."
        type: integer
      sizeMovingWithin:
        description: "Amount of data to be rebalanced within the tier."
        type: integer
      name:
        description: "Name of the pool."
        type: string
      poolUnits:
        description: "List of Pool Units, i.e. raidGroup and virtualDisk objects, in the tier."
        type: array
        items:
          $ref: '#/definitions/poolUnit'
      diskCount:
        description: "The number of physical drives in the tier."
        type: integer
      spareDriveCount:
        description: "The drive number of hot spare space for dynamic pool."
        type: integer
  capabilityProfileParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Parameters used for creation/modification of a VVol Datastore.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      capProfile:
        description: "CapabilityProfile to add to the VVol Datastore, as defined by the VVol Datastore resource type."
        $ref: '#/definitions/capabilityProfile'
      sizeTotal:
        description: "Pool allocation size of required CapabilityProfile in required VVol container."
        type: integer
  upgradeTask:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the upgrade task currently in progress."
    properties:
      caption:
        description: "Caption for this task."
        type: string
      creationTime:
        description: "Date and time when the upgrade task was started."
        type: string
        format: date-time
      status:
        description: "Current status of the upgrade activity."
        $ref: '#/definitions/UpgradeStatusEnum'
      type:
        description: "Upgrade session type."
        $ref: '#/definitions/UpgradeSessionTypeEnum'
      estRemainTime:
        description: "Estimated time remaining for the upgrade task."
        type: string
        format: date-time
  raidConfiguration:
    type: object
    x-tags:
      - ~Appendix
    description: "Possible RAID configurations for the pool tier. These configurations have
  the same RAID type (or RAID level) and different stripe widths (or RAID moduluses)."
    properties:
      raidType:
        description: "RAID type (or RAID level) of the RAID configuration."
        $ref: '#/definitions/RaidTypeEnum'
      isDefault:
        description: "Indicates whether the RAID configuration is the default RAID configuration for
  the associated storage tier. Values are:
  <ul>
  <li>true - RAID configuration is the default RAID configuration for the
  associated storage tier.</li>
  <li>false - RAID configuration is not the default RAID configuration for the
  associated storage tier.</li>
  </ul>"
        type: boolean
      stripeWidthConfig:
        description: "List of supported stripe widths (or RAID moduluses) for the RAID type."
        type: array
        items:
          $ref: '#/definitions/stripeWidthConfiguration'
  preferredInterfaceSourceParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about preferred interface settings of the source NAS server."
    properties:
      productionIpV4:
        description: "Requested IPv4 production preferred interface of the source NAS server"
        $ref: '#/definitions/fileInterface'
      productionIpV6:
        description: "Requested IPv6 production preferred interface of the source NAS server"
        $ref: '#/definitions/fileInterface'
  lunCreate:
    type: object
    x-tags:
      - ~Appendix
    description: "LUN parameters used for creating a LUN when creating or modifying a Consistency group.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      name:
        description: "LUN name unque to the storage system."
        type: string
      description:
        description: "LUN description."
        type: string
      lunParameters:
        description: "(Required) Settings for the LUN, as defined by the lunParameters resource
  type."
        $ref: '#/definitions/lunParameters'
  systemTierCapacity:
    type: object
    x-tags:
      - ~Appendix
    description: "Capacity data for one tier, collected from all pools."
    properties:
      tierType:
        description: "Tier type."
        $ref: '#/definitions/TierTypeEnum'
      sizeFree:
        description: "Amount of free space available in the tier."
        type: integer
      sizeTotal:
        description: "Total amount of space (used space plus free space) in the tier."
        type: integer
      sizeUsed:
        description: "Amount of space used by the tier's associated storage resources."
        type: integer
  interfacePortPair:
    type: object
    x-tags:
      - ~Appendix
    description: "List of source system client interface and target system port pairs used to create a VDM import."
    properties:
      sourceInterfaceName:
        description: "Source interface name of the interface port pair."
        type: string
      targetPort:
        description: "Target port of the interface port pair."
        $ref: '#/definitions/ipPort'
      targetVlanId:
        description: "Target VLAN ID of the interface port pair."
        type: integer
  svcStorageProcessor:
    type: object
    x-tags:
      - ~Appendix
    description: "Service-related information for the storage processors on the storage system. 
  You can use this information for servicing the storage processors. There is always
  one svcStorageProcessor per SP in the system.
  <br/>
  <br/>"
    properties:
      scope:
        description: "Scope of the object"
        $ref: '#/definitions/SvcScopeEnum'
      state:
        description: "Indicates which state the storage processor is in."
        $ref: '#/definitions/SvcStorageProcessorStateEnum'
      isPrimary:
        description: "Indicates whether the storage processor is the primary SP. The primary SP is
  the storage processor on which the management stack runs. Values are:
  <ul>
  <li>true - SP is the primary SP. </li>
  <li>false - SP is not the primary SP. </li>
  </ul>"
        type: boolean
      softwareVersion:
        description: "Software version of the storage processor"
        type: string
      hostName:
        description: "Host name of the storage processor. This host name corresponds to control path IP on this SP."
        type: string
      serviceModeReason:
        description: "Service mode reason (Rescue Reason Code), is a hexadecimal-formatted code. 
  If the storage processor is in service mode, this code indicates why the 
  SP is in Service Mode.
  <p>
  If the SP is in Normal Mode, the value of this attribute is null."
        type: string
      serviceModeReasonHint:
        description: "Service mode reason hint (Rescue reason hint code), is a hexadecimal-formatted code.
  If the SP is in Service Mode, this code provides additional information as to 
  why the SP is in Service Mode.
  <p>
  If the SP is in Normal Mode, the value of this attribute is null."
        type: string
      serviceModeRecommendedAction:
        description: "Localized recommended action in service mode. If the storage processor is in service mode, 
  this message indicates the recommended action the user can take to get the 
  storage processor out of service mode.
  <p>
  If the SP is in Normal Mode, the value of this attribute is null."
        type: string
      status:
        description: "Localized storage processor status message."
        type: string
      crus:
        description: "Customer Replaceable Units (CRUs) that are installed on the storage processor. 
  Usually, there is at least one Solid State Drive (SSD) and one or more SLICs."
        type: array
        items:
          $ref: '#/definitions/svcCRU'
  dataReductionParameters:
    type: object
    x-tags:
      - ~Appendix
    description: "Data reduction settings for the storage resource.
  <br/>
  <br/>
  This resource type is embedded in the storageResource resource type."
    properties:
      isDataReductionEnabled:
        description: "Indicates whether data reduction is enabled or disabled for the storage resource.
  Values are:
  <ul>
  <li>true - data reduction is enabled.</li>
  <li>false - (default)data reduction is disabled.</li>
  </ul>"
        type: boolean
  stripeWidthConfiguration:
    type: object
    x-tags:
      - ~Appendix
    description: "Possible stripe width (or RAID modulus) values for the specified RAID type and tier type."
    properties:
      id:
        description: "Unique identifier of the stripeWidthConfiguration instance. This identifier can 
  be used to find corresponding profile in CLI."
        type: string
      stripeWidth:
        description: "RAID group stripe width."
        $ref: '#/definitions/RaidStripeWidthEnum'
      parityDisks:
        description: "Number of parity drives."
        type: integer
      sizePotential:
        description: "Maximum usable capacity. The system calculates this
  figure by summing up the capacities of all available drives that have the
  required drive type, RAID type, and stripe width."
        type: integer
      isDefault:
        description: "Indicates whether the stripe width is the default stripe width for the
  associated RAID type. Values are:
  <ul>
  <li>true - Stripe width is the default stripe width for the associated RAID type.</>
  <li>false - Stripe width is not the default stripe width for the associated RAID
  type.</>
  </ul>"
        type: boolean
      type:
        description: "Indicates type of storage pools this stripe width applies to."
        $ref: '#/definitions/StoragePoolTypeEnum'
  kmipServerStatus:
    type: object
    x-tags:
      - ~Appendix
    description: "Address and corresponding status of the KMIP Server."
    properties:
      address:
        description: "Individual KMIP server IP address."
        type: string
      status:
        description: "Status of the KMIP Server."
        $ref: '#/definitions/KmipServerStatusEnum'
  diskGroupSet:
    type: object
    x-tags:
      - ~Appendix
    description: "Set of disk groups"
    properties:
      diskGroups:
        description: "A list of disk groups compatible for use together in a dynamic pool RAID group. 
  The minimum number of drives for a particular RAID type and stripe width can be met by any combination of drives from the groups in the list."
        type: array
        items:
          $ref: '#/definitions/diskGroup'
      minimumDriveCount:
        description: "Minimum number of drives can be used to create or expand pool depending on the operation."
        type: integer
      invalidDriveCounts:
        description: "It is not eligible to create or expand dynamic pool with number of drives specified in the list even though the number
  meets minimumDriveCount."
        type: array
        items:
          type: integer
  affectedResource:
    type: object
    x-tags:
      - ~Appendix
    description: "affectedResource is a resource entity affected by a job instance."
    properties:
      resource:
        description: "The resource name of the referenced instance (for GUI navigation)."
        type: string
      id:
        description: "The id of the referenced instance."
        type: string
      name:
        description: "The name of the reference instance, if applicable."
        type: string
  hostGroupHostParam:
    type: object
    x-tags:
      - ~Appendix
    description: "Information about the luns/VMware VMFS datastore accessed by the host.
 <br/>
 <br/>
 This embedded object is passed to the modify method of hostGroup."
    properties:
      host:
        description: "Reference to the host to be added to host group or the host in host group to be updated."
        $ref: '#/definitions/host'
      accessMergeType:
        description: "An optional HostGroupAccessMergeTypeEnum to specify how the host access is going to be updated when the host is added/modified in host group.
  If not specified, it is by default MergeFromHostGroup when used in addHostGroupHostParams in hostGroup.modify method, and by default Customized when used in modifyHostGroupHostParams in hostGroup.modify method."
        $ref: '#/definitions/HostGroupAccessMergeTypeEnum'
      hostGroupLunModifys:
        description: "An optional list of embedded hostGroupLunModify object, only valid when accessMergeType property is Customized.
  The embedded object specifies the LUN for the host to grant production access, and host LUN IDs to be updated for the host.
  The host access to the LUNs that not in this list will keep unchanged."
        type: array
        items:
          $ref: '#/definitions/hostGroupLunModify'
      hostGroupVmwareLunModifys:
        description: "An optional list of embedded hostGroupVmwareLunModify object, only valid when accessMergeType property is Customized.
  The embedded object specifies the VMware VMFS datastore for the host to grant production access, and host LUN IDs to be updated for the host."
        type: array
        items:
          $ref: '#/definitions/hostGroupVmwareLunModify'
  revokedCertificate:
    type: object
    x-tags:
      - ~Appendix
    description: "Settings for revoked certificates in the CRL.
 <br>
 <br>
 This resource type is embedded in the crl resource type.
 The CRL and revoked certificate formats are described in RFC 5280."
    properties:
      id:
        description: "Unique identifier of the revokedCertificate instance."
        type: string
      serialNumber:
        description: "Certificate serial number."
        type: string
      revocationDate:
        description: "Date and time when the certificate was revoked."
        type: string
        format: date-time
      reasonCode:
        description: "Reason the certificate was revoked."
        $ref: '#/definitions/CRLReasonCodeEnum'
  firmwarePackage:
    type: object
    x-tags:
      - ~Appendix
    description: "The drive firmware package is part of OE bundle
  List the detail of the drive firmware package"
    properties:
      name:
        description: "Name of drive firmware package."
        type: string
      version:
        description: "Version of drive firmware package."
        type: string
      releaseDate:
        description: "Release date of drive firmware package."
        type: string
        format: date-time
      upgradableDriveCount:
        description: "The number of upgradable drives in the array."
        type: integer
      estimatedTime:
        description: "Time estimation to upgrade drive firmware in minutes."
        type: integer
      isNewerVersion:
        description: "Indicates whether the drive firmware package is newer than the installed one."
        type: boolean
  AccessPolicyEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      File system security access policies.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Native   |   Native Security.   |
      |   1   |   Unix   |   UNIX Security.   |
      |   2   |   Windows   |   Windows Security.   |
    enum: [0,1,2]
  ACEAccessLevelEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      CIFS share access level granted or denied for a user or domain.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Read   |   Read access.   |
      |   2   |   Write   |   Write access.   |
      |   4   |   Full   |   Read and write access.   |
    enum: [1,2,4]
  ACEAccessTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates whether the CIFS share access is granted or denied for a user. Use<br>  <b>None</b> to remove the Access Control Entries (ACEs) for a Security<br>  Identifier (SID) from the CIFS share.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Deny   |   Deny CIFS share access to a user.   |
      |   1   |   Grant   |   Grant CIFS share acccess to a user.   |
      |   2   |   None   |   Remove the ACE for a SID from a CIFS share.   |
    enum: [0,1,2]
  AdvancedDeduplicationUnsupportedReasonEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Reason why advanced deduplication is not supported on the pool.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   Advanced deduplication is supported.   |
      |   1   |   Feature_Disabled   |   Advanced deduplication feature is disabled.   |
      |   2   |   License_Uninstalled   |   Advanced deduplication license is not installed.   |
      |   3   |   Pool_Type   |   Advanced deduplication is not supported because it is not Extreme Performance pool.   |
      |   4   |   System_Model   |   Advanced deduplication is not supported on this system model.   |
      |   5   |   Flash_Not_Enough   |   Advanced deduplication is not supported because pool flash percentage is not enough.   |
    enum: [0,1,2,3,4,5]
  AlertStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Alert state enum.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Active_Manual   |   Indicates the alert event will not be cleared automatically and needs manual clear up.   |
      |   1   |   Active_Auto   |   Indicates the alert event is still active.   |
      |   2   |   Inactive   |   Indicates the alert event is no longer active which means the problem has been resolved.   |
      |   3   |   Updating   |   Indicates the alert event is still updating it's state, only will appear when system is upgrading from 4.5.x or lower versions.   |
    enum: [0,1,2,3]
  AllocationStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Not_Started   |      |
      |   1   |   Running   |      |
      |   2   |   Completed   |      |
      |   3   |   Failed   |      |
    enum: [0,1,2,3]
  AUSizeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Allocation Unit possible sizes.<br>  The AUSize is granularity at which LUN's space is allocated in the pool.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   8,192   |   AuSize_8K   |   8K Allocation Unit.   |
      |   16,384   |   AuSize_16K   |   16K Allocation Unit.   |
      |   32,768   |   AuSize_32K   |   32K Allocation Unit.   |
      |   65,536   |   AuSize_64K   |   64K Allocation Unit.   |
    enum: [8192,16384,32768,65536]
  AuthenticationTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Type of authentication for the LDAP-based directory server.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Anonymous   |   Anonymous authentication means no authentication occurs and the NAS server uses an anonymous<br>      login to access the LDAP-based directory server.   |
      |   1   |   Simple   |   Simple authentication means the NAS server must provide a bind distinguished name and password<br>      to access the LDAP-based directory server.   |
      |   2   |   Kerberos   |   Kerberos authentication means the NAS server uses a KDC to confirm the identity<br>      when accessing the Active Directory.   |
    enum: [0,1,2]
  AuthTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Authentication type of smtp server.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   Authorization protocol: None.   |
      |   1   |   Plain   |   Authorization protocol: PLAIN(Uses Base64 encoding).   |
      |   2   |   Login   |   Authorization protocol: LOGIN(Uses Base64 encoding).   |
      |   3   |   CRAM_MD5   |   Authorization protocol: CRAM-MD5   |
      |   4   |   DIGEST_MD5   |   Authorization protocol: DIGEST-MD5   |
    enum: [0,1,2,3,4]
  AutodownloadSoftwareTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Image type of autodownloaded software.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Software   |   NDU software type.   |
      |   1   |   Firmware   |   Disk firmware software type.   |
      |   2   |   LanguagePack   |   Language pack software type.   |
      |   3   |   DynamicPUHC   |   Dynamic PUHC image type.   |
    enum: [0,1,2,3]
  BackendStorageTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |      |
      |   1   |   VNX3   |      |
      |   2   |   CloudArray   |      |
    enum: [0,1,2]
  BindContextEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Normal   |      |
      |   1   |   RebindStart   |      |
    enum: [0,1]
  BlockDedupRateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible System Deduplication rates.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   High   |   High deduplication rate.   |
      |   2   |   Medium   |   Medium deduplication rate.   |
      |   3   |   Low   |   Low deduplication rate.   |
      |   4   |   None   |   Deduplication rate is not initialized by the storage system.<br>  Do not use this value in Modify requests: the storage system will respond with error.   |
    enum: [1,2,3,4]
  BlockDedupStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Block deduplication states.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Invalid   |   Invalid state.   |
      |   1   |   Active   |   Deduplication is active, session is ongoing.   |
      |   2   |   Idle   |   Enabled. Deduplication has never been run or it has partially been run but the schedule window is closed.   |
      |   3   |   Pending   |   Waiting to be run inside the schedule window.   |
      |   4   |   Paused   |   Paused by user.   |
      |   5   |   Completed   |   Completed deduplication session in the scheduled window.   |
      |   6   |   Off   |   Deduplication is disabled.   |
    enum: [0,1,2,3,4,5,6]
  BlockHostAccessEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates the type of access a host has to a LUN or consistency group.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Off   |   Access is disabled.   |
      |   1   |   On   |   Access is enabled.   |
      |   2   |   Mixed   |   (Applies to Consistency Groups only.) Indicates that LUNs in a consistency group have different host access.   |
    enum: [0,1,2]
  CapabilityServiceLevelEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      This is service level enumearation for capability profile's constraint.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Basic   |      |
      |   1   |   Bronze   |      |
      |   2   |   Silver   |      |
      |   3   |   Gold   |      |
      |   4   |   Platinum   |      |
    enum: [0,1,2,3,4]
  CapabilityTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   FastCache   |      |
      |   1   |   DiskTier   |      |
      |   2   |   RaidType   |      |
      |   3   |   SpaceEfficiency   |      |
      |   4   |   TieringPolicy   |      |
      |   5   |   UsageTag   |      |
      |   6   |   ServiceLevel   |      |
      |   7   |   QOSLimitType   |      |
      |   8   |   QOSLimitUsage   |      |
      |   9   |   QOSBurstDuration   |      |
      |   10   |   QOSMaxRate   |      |
      |   11   |   QOSMaxBandwidth   |      |
      |   12   |   QOSBurstRate   |      |
    enum: [0,1,2,3,4,5,6,7,8,9,10,11,12]
  CertificateTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Types of certificates.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   CA   |   Certificate Authority (CA) certificate.   |
      |   2   |   Server   |   Server certificate.   |
      |   3   |   Client   |   Client certificate.   |
      |   4   |   TrustedPeer   |   Trusted Peer certificate.   |
      |   99   |   Unknown   |   Unknown certificate type.   |
    enum: [1,2,3,4,99]
  CHAPSecretTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      CHAP secret type.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Binary   |   CHAP secret is binary.   |
      |   1   |   ASCII   |   CHAP secret is ASCII.   |
    enum: [0,1]
  CifsShareACEPrivilegeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      CIFS privilege levels.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   No user or group access.   |
      |   1   |   Read   |   Read only user or group access.   |
      |   2   |   Write   |   Write only user or group access.   |
      |   3   |   FullControl   |   Full user or group access.   |
    enum: [0,1,2,3]
  CifsShareOfflineAvailabilityEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Defines a valid states of Offline Availability.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Manual   |   Only specified files will be available offline.   |
      |   1   |   Documents   |   All files that users open will be available offline.   |
      |   2   |   Programs   |   Program will preferably run from the offline cache even when connected to the network. All files that users open will be available offline.   |
      |   3   |   None   |   Prevents clients from storing documents and programs in offline cache (default).   |
      |   255   |   Invalid   |   Invalid state.   |
    enum: [0,1,2,3,255]
  CIFSTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      CIFS share type.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Cifs_Share   |   The share is created on a filesystem.   |
      |   2   |   Cifs_Snapshot   |   The share is created on a snapshot.   |
    enum: [1,2]
  CompressionStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Inline Compression status of the storage resource.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Disabled   |   Compression for the storage resource is disabled.   |
      |   1   |   Enabled   |   Compression for the storage resource is enabled.   |
      |   65,535   |   Mixed   |   There is a mix of compression enabled and disabled LUNs. This only applies to Consistency Groups.   |
    enum: [0,1,65535]
  CompressionUnsupportedReasonEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Reason why Inline Compression (ILC) is not supported on the pool.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   Inline compression (ILC) is supported.   |
      |   1   |   Feature_Disabled   |   Inline compression (ILC) feature is disabled.   |
      |   2   |   License_Uninstalled   |   Inline compression (ILC) license is not installed.   |
      |   3   |   Pool_Type   |   Inline compression (ILC) is not supported because it is not Extreme Performance pool.   |
      |   4   |   Filesystem_Compression_Not_Supported   |   Inline compression (ILC) is not supported for filesystems.   |
      |   5   |   Flash_Not_Enough   |   Inline compression (ILC) is not supported because pool flash percentage is not enough.   |
    enum: [0,1,2,3,4,5]
  ConnectivityTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |      |
      |   1   |   ISCSI_Software   |      |
      |   2   |   ISCSI_Offload   |      |
      |   3   |   FC   |      |
    enum: [0,1,2,3]
  ConnectorTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Supported Connector types.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Connector Type is unknown.   |
      |   1   |   RJ45   |   Connector Type is RJ45.   |
      |   2   |   LC   |   Connector Type is LC.   |
      |   3   |   MiniSAS_HD   |   Connector Type is Mini SAS HD.   |
      |   4   |   Copper_Pigtail   |      |
      |   5   |   No_Separable_Connector   |      |
      |   6   |   NAS_Copper   |      |
      |   7   |   Not_Present   |      |
    enum: [0,1,2,3,4,5,6,7]
  CopyStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   3   |   Unsynchronized   |      |
      |   4   |   Synchronized   |      |
      |   13   |   Skewed   |      |
      |   14   |   Mixed   |      |
    enum: [3,4,13,14]
  CRLReasonCodeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Reason codes - per RFC5280 - for certificate revocation.<br><br> NOTE: value 7 is not used

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unspecified   |   The revocation reason was not specified.   |
      |   1   |   Key_Compromise   |   The associated private key has been compromised.   |
      |   2   |   Ca_Compormise   |   The Certificate Authority (CA) that signed the certificate has been compromised.   |
      |   3   |   Affiliation_Changed   |   The certificate affiliation has changed.   |
      |   4   |   Superseded   |   The certificate has been superseded by another certificate.   |
      |   5   |   Cessation_Of_Operation   |   The certificate is no longer used.   |
      |   6   |   Certificate_Hold   |   The certificate is being held.   |
      |   8   |   Remove_From_CRL   |   The certificate is being removed from the CRL.   |
      |   9   |   Privilege_Withdrawn   |   The certificate privileges have been withdrawn.   |
      |   10   |   Aa_Compromise   |   The Attribute Authority (AA) has been compromised.   |
      |   99   |   Unknown   |   Unknown revocation reason.   |
    enum: [0,1,2,3,4,5,6,8,9,10,99]
  DataCollectionProfileEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Profiles for collecting service information.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Default   |   Default profile.   |
      |   1   |   Performance_Assessment   |   Profile for performance assessment collection.   |
      |   2   |   Performance_Trace   |   Profile for performance analysis.   |
      |   3   |   Other   |   Other profile used internally.   |
      |   4   |   Minimum   |   Profile for minimum collection, useful when service storage space is very low.   |
    enum: [0,1,2,3,4]
  DataReductionStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      DataReduction status of the storage resource.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Disabled   |   DataReduction for the storage resource is disabled.   |
      |   1   |   Enabled   |   DataReduction for the storage resource is enabled.   |
      |   65,535   |   Mixed   |   There is a mix of DataReduction enabled and disabled LUNs. This only applies to Consistency Groups.   |
    enum: [0,1,65535]
  DatastoreTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Versions of VMFS datastore file system.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   VMFS type unknown.   |
      |   1   |   VMFS3   |   VMFS version 3.   |
      |   2   |   VMFS5   |   VMFS version 5.   |
      |   3   |   VMFS6   |   VMFS version 6.   |
    enum: [0,1,2,3]
  DayOfWeekEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Enumeration of days of the week.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Sunday   |   Sunday   |
      |   2   |   Monday   |   Monday   |
      |   3   |   Tuesday   |   Tuesday   |
      |   4   |   Wednesday   |   Wednesday   |
      |   5   |   Thursday   |   Thursday   |
      |   6   |   Friday   |   Friday   |
      |   7   |   Saturday   |   Saturday   |
    enum: [1,2,3,4,5,6,7]
  DCMigrationStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Normal   |      |
      |   2   |   PrepareForMigration   |      |
      |   3   |   SourceDisabledForIO   |      |
      |   4   |   SourceMigrationInProgress   |      |
      |   5   |   SourceMigrationCompleted   |      |
      |   6   |   SourceAborted   |      |
      |   2,989   |   Unknown   |      |
    enum: [1,2,3,4,5,6,2989]
  DedupStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Deduplication status of the storage resource.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Disabled   |   Deduplication for the storage resource is disabled.   |
      |   1   |   Enabled   |   Deduplication for the storage resource is enabled.   |
      |   65,535   |   Mixed   |   There is a mix of deduplication enabled and disabled LUNs. This only applies to Consistency Groups.   |
    enum: [0,1,65535]
  DhsmConnectionModeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      A DhsmConnModeEnum represents the current operation mode of the file mover participating in this connection

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Enabled   |   Enabled allows both the creation of stub files and data migration through reads and writes.   |
      |   1   |   Disabled   |   Disabled means neither stub files nor data migration is possible   |
      |   2   |   RecallOnly   |   Recallonly means the policy engine is not allowed to create stub files,<br> but the user is still able to trigger data migration by using a read or<br> write request from the secondary file system to the Unity.   |
    enum: [0,1,2]
  DiskTechnologyEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible drive technologies.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   SAS   |   The Serial attached SCSI (SAS) drive can be used for the<br>  Performance storage tier.  This drive type provides high<br>  performance and medium capacity storage for applications<br>  that requires a balance between performance and capacity.   |
      |   2   |   NL_SAS   |   The Near-line serial attached SCSI (NL-SAS) drive can be used<br>  for the Capacity storage tier. This drive type provides<br>  high capacity storage, but with lower overall performance<br>  than regular SAS and Flash drives.   |
      |   6   |   SAS_FLASH_2   |   The Medium Endurance SAS Flash drive can be used for the<br>  Extreme Performance storage pool and for the FAST Cache.   |
      |   7   |   SAS_FLASH_3   |   The Low Endurance SAS Flash drive can be used for the Extreme<br>  Performance storage pool tier but not for the FAST Cache.   |
      |   8   |   SAS_FLASH_4   |   The Read Intensive SAS Flash drive can be used for the Extreme<br>  Performance storage pool tier but not for the FAST Cache.   |
      |   9   |   SAS_FLASH_5   |   Even lower endurance SAS flash drive cannot be used for FAST Cache.   |
      |   10   |   NVMe_FLASH_1   |   The Low Endurance NVMe Flash drive can be used for the NVMe Extreme<br>  Performance storage pool tier but not for the FAST Cache.   |
      |   11   |   NVMe_FLASH_2   |   The Read Intensive NVMe Flash drive can only be used for the NVMe Extreme Performance Pool and cannot be used for FAST Cache.   |
      |   50   |   Mixed   |   Applies only as an attribute value of an object containing mixed different types of drives.<br>  Drive cannot have this type.   |
      |   99   |   Virtual   |      |
    enum: [1,2,6,7,8,9,10,11,50,99]
  DiskTierEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Drive Type tiers.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   ExtremePerformanceTier   |   Tier that maps to SAS Flash drives.   |
      |   1   |   PerformanceTier   |   Tier that maps to SAS drives.   |
      |   2   |   CapacityTier   |   Tier that maps to NL-SAS drives.   |
      |   3   |   ExtremeMultiTier   |   Multi-tiered pool that includes SAS Flash tier.   |
      |   4   |   MultiTier   |   Multi-tiered pool that does not include Flash tier.   |
      |   5   |   NvmeExtremePerformanceTier   |   Tier that maps to NVMe drives.   |
      |   6   |   NvmeExtremeMultiTier   |   Multi-tiered pool that includes NVMe tier.   |
    enum: [0,1,2,3,4,5,6]
  DiskTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible drive types.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Unsupported drive type.   |
      |   5   |   SAS   |   The Serial attached SCSI (SAS) drive can be used for<br>  Performance storage tier.   |
      |   9   |   SAS_FLASH   |   The SAS Flash drive can be used for Extreme<br>  Performance storage pool tier and the FAST Cache.   |
      |   10   |   NL_SAS   |   The Near-line serial attached SCSI (NL-SAS) drive type can be<br>  used for the Capacity storage tier.   |
      |   11   |   SAS_FLASH_2   |   The Medium Endurance SAS Flash drive can be used for<br>  the Extreme Performance storage pool and for the FAST<br>  Cache.   |
      |   12   |   SAS_FLASH_3   |   The Low Endurance SAS Flash drive can be used for the Extreme<br>  Performance storage pool tier but not for the FAST Cache.   |
      |   16   |   NVMe_FLASH   |   The NVMe Flash drive can be used for the NVMe Extreme Performance storage pool tier.   |
      |   18   |   NVMe_FLASH_1   |   The Low Endurance NVMe Flash drive can be used for the NVMe Extreme Performance storage pool tier but not for the FAST Cache.   |
      |   19   |   NVMe_FLASH_2   |   The Read Intensive NVMe FLASH drive can only be used for NVMe Extreme Performance storage pool but not for the FAST Cache.   |
    enum: [0,5,9,10,11,12,16,18,19]
  DMOLockTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      DMO Lock Type Enumeration

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Read   |   Read Lock   |
      |   2   |   Write   |   Write Lock   |
    enum: [1,2]
  DMONotificationTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      DMO Notification Type Enumeration

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Creation   |   Creation Notification   |
      |   1   |   Modification   |   Modification Notification   |
      |   2   |   Deletion   |   Deletion Notification   |
    enum: [0,1,2]
  DNSServerOriginEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Source of the DNS server addresses.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Source of DNS server addresses is unknown.   |
      |   1   |   Static   |   DNS server addresses are set manually.   |
      |   2   |   DHCP   |   DNS server addresses are configured by DHCP.   |
    enum: [0,1,2]
  EnclosureTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown_Enclosure   |   Unknown Enclosure.   |
      |   20   |   Derringer_6G_SAS_DAE   |   25 Drive 6G DAE.   |
      |   26   |   Pinecone_6G_SAS_DAE   |   12 Drive 6G DAE.   |
      |   27   |   Steeljaw_6G_SAS_DPE   |   12 Drive 6G DPE.   |
      |   28   |   Ramhorn_6G_SAS_DPE   |   25 Drive 6G DPE.   |
      |   29   |   Tabasco_12G_SAS_DAE   |   25 Drive 12G DAE.   |
      |   30   |   Ancho_12G_SAS_DAE   |   15 Drive 12G DAE.   |
      |   32   |   Naga_12G_SAS_DAE   |   80 Drive 12G DAE.   |
      |   36   |   Miranda_12G_SAS_DPE   |   25 Drive 12G DPE.   |
      |   37   |   Rhea_12G_SAS_DPE   |   12 Drive 12G DPE.   |
      |   38   |   Scorp_12G_SAS_DPE   |   25 Drive 12G DPE.   |
      |   100   |   Virtual_DPE   |   Virtual DPE.   |
      |   999   |   Unsupported_Enclosure   |   Unsupported Enclosure.   |
    enum: [0,20,26,27,28,29,30,32,36,37,38,100,999]
  EncryptionModeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Data at Rest Encryption encryption mode

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   16   |   Unencrypted   |   No Data at Rest Encryption is activated.   |
      |   32   |   Controller_Based_Encryption   |   Controller Based Encryption within the Data at Rest Encryption Feature on the targeted array is activated.   |
    enum: [16,32]
  EncryptionStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Data at Rest Encryption status on the storage system

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   65,535   |   Invalid   |   Invalid encryption status.   |
      |   0   |   Fbe_Invalid   |   Invalid encryption status with internal errors.   |
      |   1   |   Not_Encrypting   |   Not Encrypting.   |
      |   16   |   Encrypting   |   Encrypting.   |
      |   32   |   Encrypted   |   Encrypted.   |
      |   64   |   Scrubbing   |   Scrubbing.   |
      |   254   |   No_License   |   The Data at Rest Encryption license is not installed.   |
      |   255   |   Unsupported   |   The Data at Rest Encryption is not supported.   |
    enum: [65535,0,1,16,32,64,254,255]
  EPSpeedValuesEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Supported Ethernet port transmission speeds.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Auto   |   Auto detected Ethernet port transmission speed.   |
      |   10   |   _10Mbps   |   10 Mbps Ethernet port transmission speed.   |
      |   100   |   _100Mbps   |   100 Mbps Ethernet port transmission speed.   |
      |   1,000   |   _1Gbps   |   1 Gbps Ethernet port transmission speed.   |
      |   10,000   |   _10Gbps   |   10 Gbps Ethernet port transmission speed.   |
      |   25,000   |   _25Gbps   |   25 Gbps Ethernet port transmission speed.   |
      |   40,000   |   _40Gbps   |   40 Gbps Ethernet port transmission speed.   |
      |   100,000   |   _100Gbps   |   100 Gbps Ethernet port transmission speed.   |
      |   1,000,000   |   _1Tbps   |   100 Tbps Ethernet port transmission speed.   |
    enum: [0,10,100,1000,10000,25000,40000,100000,1000000]
  EsrsConfigStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      ESRS configuration status enum.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Not_Attempted   |   ESRS configuration is not attempted   |
      |   1   |   Success   |   ESRS configuration has successed   |
      |   2   |   Failed   |   ESRS configuration failed   |
      |   3   |   Success_CallHome_Only   |   ESRS configured with only callhome support, which is just reserved but not used   |
      |   4   |   Success_One_Way   |   ESRS configured with one way connection   |
      |   5   |   Success_Two_Way   |   ESRS configured with two way connection   |
    enum: [0,1,2,3,4,5]
  EsrsLevelEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      ESRS configuration level enum.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Not_Set   |   ESRS level is not set.   |
      |   1   |   Callhome_Only   |   ESRS with callhome support only, which is just reserved but not used.   |
      |   2   |   One_Way   |   ESRS with one way connection support.   |
      |   3   |   Two_Way   |   ESRS with two way connection support.   |
    enum: [0,1,2,3]
  EsrsPolicyManagerStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Policy Manager configuration and connection statuses.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Disabled   |   Embedded ESRS Policy Manager is not enabled.   |
      |   1   |   Connected   |   Embedded ESRS Policy Manager is enabled and connected.   |
      |   2   |   Not_Connected   |   Embedded ESRS Policy Manager is enabled, but not running.   |
      |   3   |   Unknown   |   Embedded ESRS Policy Manager status cannot be determined.   |
    enum: [0,1,2,3]
  EsrsProxyStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Disabled   |   Integrated Remote Support proxy server is not enabled.   |
      |   1   |   Enabled   |   Embedded ESRS proxy server is enabled, but not connected.   |
      |   2   |   Connected   |   Embedded ESRS proxy server is enabled and connected (on-line).   |
      |   3   |   Not_Connected   |   Embedded ESRS proxy server is enabled, but not running (off-line).   |
      |   4   |   Unknown   |   Embedded ESRS proxy server status cannot be determined.   |
    enum: [0,1,2,3,4]
  EsrsStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      ESRS connection statuses.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Disabled   |   Remote Support is disabled.   |
      |   1   |   Connected   |   Remote Support is functioning normally.   |
      |   2   |   Not_Connected   |   Remote Support is enabled, but not connected.   |
      |   3   |   Unknown   |   Remote Support status could not be determined.   |
      |   5   |   Managed_Offline   |   Device is being managed by Remote Support server, but if offline.   |
      |   6   |   Managed_Missing   |   Device is being managed by Remote Support server, but is not connected.   |
      |   7   |   Managed_Removed   |   Device is removed from Remote Support server.   |
      |   11   |   Unmanaged_Online   |   Device is in a transitioning state, it is not being managed by Remote Support server, it was previously online.   |
      |   12   |   Unmanaged_Offline   |   Device is in a transitioning state, it is not being managed by Remote Support server, it was previously offline.   |
      |   13   |   Unmanaged_Missing   |   Device is in a transitioning state, it is not being managed by Remote Support server, it was previously in a missing state.   |
      |   14   |   Unmanaged_Removed   |   Device is in a transitioning state, it is not being managed by Remote Support server, it was previously in a removed state.   |
      |   15   |   PendingAdd_Online   |   Device is in a transitioning state, it is pending managed, it was previously online.   |
      |   16   |   PendingAdd_Offline   |   Device is in a transitioning state, it is pending managed, it was previously offline.   |
      |   17   |   PendingAdd_Missing   |   Device is in a transitioning state, it is pending managed, it was previously in a missing state.   |
      |   18   |   PendingAdd_Removed   |   Device is in a transitioning state, it is pending managed, it was previously in a removed state.   |
      |   19   |   PendingDelete_Online   |   Device is in a transitioning state, it is pending for deletion, it was previously online.   |
      |   20   |   PendingDelete_Offline   |   Device is in a transitioning state, it is pending for deletion, it was previously offline.   |
      |   21   |   PendingDelete_Missing   |   Device is in a transitioning state, it is pending for deletion, it was previously in a missing state.   |
      |   22   |   PendingDelete_Removed   |   Device is in a transitioning state, it is pending for deletion, it was previously in a removed state.   |
      |   23   |   Managed_UnRegistered   |   Device is in a transitioning state, it will change to connected state once the pending request for managed state is processed.   |
    enum: [0,1,2,3,5,6,7,11,12,13,14,15,16,17,18,19,20,21,22,23]
  ESXFilesystemBlockSizeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      VMFS block sizes.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   _1MB   |   1MB block.   |
      |   2   |   _2MB   |   2MB block.   |
      |   4   |   _4MB   |   4MB block.   |
      |   8   |   _8MB   |   8MB block.   |
    enum: [1,2,4,8]
  ESXFilesystemMajorVersionEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      VMFS file system major versions.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   3   |   VMFS_3   |   VMFS version 3.x.   |
      |   5   |   VMFS_5   |   VMFS version 5.x.   |
      |   6   |   VMFS_6   |   VMFS version 6.x.   |
    enum: [3,5,6]
  ESXMountProtocolEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      The protocol type used for remote share mount on ESXi server.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   3   |   NFSv3   |   NFSv3 mount.   |
      |   4   |   NFSv4   |   NFSv4 mount.   |
    enum: [3,4]
  EthernetPortStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible Ethernet port statuses.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Ethernet port status is unknown.   |
      |   2   |   OK   |   Ethernet port status is OK.   |
      |   3   |   Degraded   |   Ethernet port status is degraded.   |
      |   32,784   |   Link_Up   |   Ethernet port status is degraded.   |
      |   32,785   |   Link_Down   |   Ethernet port status is link down.   |
      |   32,786   |   Speed_Negotiation_Failed   |   Ethernet port status is speed negotiation failed.   |
      |   33,024   |   Uninitialized   |   Ethernet port status is uninitialized.   |
      |   33,025   |   Empty   |   Ethernet port status is empty.   |
      |   33,026   |   Missing   |   Ethernet port status is missing.   |
      |   33,027   |   Faulted   |   Ethernet port status is faulted.   |
      |   33,028   |   Unavailable   |   Ethernet port status is unavailable.   |
      |   33,029   |   Disabled   |   Ethernet port status is disabled.   |
      |   33,280   |   SFP_Not_Present   |   Ethernet port status is SFP not present.   |
      |   33,281   |   Module_Not_Present   |   Ethernet port status is module not present.   |
      |   33,282   |   Port_Not_Present   |   Ethernet port status is port not present.   |
      |   33,283   |   Missing_SFP   |   Ethernet port status is missing SFP.   |
      |   33,284   |   Missing_Module   |   Ethernet port status is missing module.   |
      |   33,285   |   Incorrect_SFP_Type   |   Ethernet port status is incorrect SFP type.   |
      |   33,286   |   Incorrect_Module   |   Ethernet port status is incorrect module.   |
      |   33,287   |   SFP_Read_Error   |   Ethernet port status is SFP read error.   |
      |   33,288   |   Unsupported_SFP   |   Ethernet port status is unsupported SFP.   |
      |   33,289   |   Module_Read_Error   |   Ethernet port status is module read error.   |
      |   33,290   |   Exceeded_Maximum_Limits   |   Ethernet port status is exceeded maximum limits.   |
      |   33,291   |   Module_Powered_Off   |   Ethernet port status is module powered off.   |
      |   33,292   |   Unsupported_Module   |   Ethernet port status is unsupported module.   |
      |   33,293   |   Database_Read_Error   |   Ethernet port status is database read error.   |
      |   33,294   |   Faulted_SFP   |   Ethernet port status is faulted SFP.   |
      |   33,295   |   Hardware_Fault   |   Ethernet port status is hardware Fault.   |
      |   33,296   |   Disabled_User_Initiated   |   Ethernet port status is Disabled user initiated.   |
      |   33,297   |   Disabled_Encryption_Required   |   Ethernet port status is disabled encryption required.   |
      |   33,298   |   Disabled_Hardware_Fault   |   Ethernet port status is disabled hardware fault.   |
      |   33,299   |   Asymmetric_SFP   |   Ethernet port status is asymmetric SFP.   |
    enum: [0,2,3,32784,32785,32786,33024,33025,33026,33027,33028,33029,33280,33281,33282,33283,33284,33285,33286,33287,33288,33289,33290,33291,33292,33293,33294,33295,33296,33297,33298,33299]
  EventCategoryEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Event category.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   User   |   User event.   |
      |   1   |   Audit   |   Audit event.   |
      |   2   |   Authentication   |   Authentication event.   |
    enum: [0,1,2]
  FastCacheOperationalStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |      |
      |   1   |   Other   |      |
      |   2   |   OK   |      |
      |   3   |   Degraded   |      |
      |   4   |   Stressed   |      |
      |   5   |   Predictive_Failure   |      |
      |   6   |   Error   |      |
      |   7   |   Non_Recoverable_Error   |      |
      |   8   |   Starting   |      |
      |   9   |   Stopping   |      |
      |   10   |   Stopped   |      |
      |   11   |   In_Service   |      |
      |   12   |   No_Contact   |      |
      |   13   |   Lost_Communication   |      |
      |   14   |   Aborted   |      |
      |   15   |   Dormant   |      |
      |   16   |   Supporting_Entity_in_Error   |      |
      |   17   |   Completed   |      |
      |   18   |   Power_Mode   |      |
      |   32,769   |   No_Backend_Object   |      |
      |   32,770   |   Under_Construction   |      |
    enum: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32769,32770]
  FastCacheStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      FAST Cache states.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Off   |   FAST Cache is off.   |
      |   1   |   On   |   FAST Cache is on.   |
    enum: [0,1]
  FastVPRelocationRateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible FAST VP relocation rates.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   High   |   High relocation rate.   |
      |   2   |   Medium   |   Medium relocation rate.   |
      |   3   |   Low   |   Low relocation rate.   |
      |   4   |   None   |   Relocation rate is not initialized by the storage system.<br>  Do not use this value in Modify requests: the storage system will respond with error.   |
    enum: [1,2,3,4]
  FastVPStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible FAST VP statuses.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Not_Applicable   |   Not applicable.   |
      |   2   |   Paused   |   FAST VP is paused.   |
      |   3   |   Active   |   FAST VP relocation or rebalancing is active.   |
      |   4   |   Not_started   |   FAST VP relocation or rebalancing has not occurred yet.   |
      |   5   |   Completed   |   Most recent FAST VP relocation or rebalancing completed successfully.   |
      |   6   |   Stopped_by_user   |   Most recent FAST VP relocation or rebalancing stopped by user.   |
      |   7   |   Failed   |   Most recent FAST VP relocation or rebalancing failed.   |
    enum: [1,2,3,4,5,6,7]
  FastVPUnsupportedReasonEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Reason why FastVP is not supported on the pool.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   FastVP is supported on the pool.   |
      |   1   |   Feature_Disabled   |   FastVP feature is disabled.   |
      |   2   |   License_Uninstalled   |   FastVP license is not installed.   |
      |   3   |   Single_Tier   |   FastVP is not supported because the pool has a single tier only.   |
    enum: [0,1,2,3]
  FcSpeedEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Supported FC port speeds.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Auto   |   Auto detected FC port transmission speed.   |
      |   1   |   _1Gbps   |   1 Gbps FC port transmission speed.   |
      |   2   |   _2Gbps   |   2 Gbps FC port transmission speed.   |
      |   4   |   _4Gbps   |   4 Gbps FC port transmission speed.   |
      |   8   |   _8Gbps   |   8 Gbps FC port transmission speed.   |
      |   16   |   _16Gbps   |   16 Gbps FC port transmission speed.   |
      |   32   |   _32Gbps   |   32 Gbps FC port transmission speed.   |
    enum: [0,1,2,4,8,16,32]
  FcStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible FC port statuses.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   FC port status is unknown.   |
      |   2   |   OK   |   FC port status is OK.   |
      |   3   |   Degraded   |   FC port status is degraded.   |
      |   32,784   |   Link_Up   |   FC port status is link up.   |
      |   32,785   |   Link_Down   |   FC port status is link down.   |
      |   33,024   |   Uninitialized   |   FC port status is uninitialized.   |
      |   33,025   |   Empty   |   FC port status is empty.   |
      |   33,026   |   Missing   |   FC port status is missing.   |
      |   33,027   |   Faulted   |   FC port status is faulted.   |
      |   33,028   |   Unavailable   |   FC port status is unavailable.   |
      |   33,029   |   Disabled   |   FC port status is disabled.   |
      |   33,280   |   SFP_Not_Present   |   FC port status is SFP not present.   |
      |   33,281   |   Module_Not_Present   |   FC port status is module not present.   |
      |   33,282   |   Port_Not_Present   |   FC port status is port not present.   |
      |   33,283   |   Missing_SFP   |   FC port status is missing SFP.   |
      |   33,284   |   Missing_Module   |   FC port status is missing module.   |
      |   33,285   |   Incorrect_SFP_Type   |   FC port status is incorrect SFP type.   |
      |   33,286   |   Incorrect_Module   |   FC port status is incorrect module.   |
      |   33,287   |   SFP_Read_Error   |   FC port status is SFP read error.   |
      |   33,288   |   Unsupported_SFP   |   FC port status is unsupported SFP.   |
      |   33,289   |   Module_Read_Error   |   FC port status is module read error.   |
      |   33,290   |   Exceeded_Maximum_Limits   |   FC port status is exceeded maximum limits.   |
      |   33,291   |   Module_Powered_Off   |   FC port status is module powered off.   |
      |   33,292   |   Unsupported_Module   |   FC port status is unsupported module.   |
      |   33,293   |   Database_Read_Error   |   FC port status is database read error.   |
      |   33,294   |   Faulted_SFP   |   FC port status is faulted SFP.   |
      |   33,295   |   Hardware_Fault   |   FC port status is hardware fault.   |
      |   33,296   |   Disabled_User_Initiated   |   FC port status is disabed user initiated.   |
      |   33,297   |   Disabled_Encryption_Required   |   FC port status is disabled encryption required.   |
      |   33,298   |   Disabled_Hardware_Fault   |   FC port status is disabled hardware fault.   |
      |   33,299   |   Asymmetric_SFP   |   FC port status is asymmetric SFP.   |
    enum: [0,2,3,32784,32785,33024,33025,33026,33027,33028,33029,33280,33281,33282,33283,33284,33285,33286,33287,33288,33289,33290,33291,33292,33293,33294,33295,33296,33297,33298,33299]
  FeatureReasonEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Defines the reason if a license is not properly configured.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   FeatureReasonUnlicensed   |      |
      |   2   |   FeatureReasonExpiredLicense   |      |
      |   3   |   FeatureReasonPlatformRestriction   |      |
      |   4   |   FeatureReasonExcluded   |      |
    enum: [1,2,3,4]
  FeatureStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Defines the applicable definition of the license.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   FeatureStateDisabled   |   The feature is not available on this storage system.   |
      |   2   |   FeatureStateEnabled   |   The feature is available. Either it does not require a license or there is a valid license installed.   |
      |   3   |   FeatureStateHidden   |   The feature is available, but currently not accessible to user because of the reason stated in the featureReason field   |
    enum: [1,2,3]
  FileEventsPublisherFTLevelTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Post-event notification policies for the File Event Service.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Ignore   |   Continue and tolerate lost events.   |
      |   1   |   Accumulate   |   Continue and use a persistence file as a circular event buffer for lost events.   |
      |   2   |   Guarantee   |   Continue and use a persistence file as a circular event buffer for lost events until the buffer is filled and then deny access to files systems where Events Publishing is Enabled.   |
      |   3   |   Deny   |   Deny access to files systems where Events Publishing is enabled.   |
    enum: [0,1,2,3]
  FileEventTypesEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      The list of valid events for File Event Service.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   OpenFileNoAccess   |   Sends a notification when a file is opened for a change other than read or write access. Protocols: CIFS, NFS(v4).   |
      |   1   |   OpenFileRead   |   Sends a notification when a file is opened for read access. Protocols: CIFS, NFS(v4).   |
      |   2   |   OpenFileWrite   |   Sends a notification when a file is opened for write access. Protocols: CIFS, NFS(v4).   |
      |   3   |   CreateFile   |   Sends a notification when a file is created. Protocols: CIFS, NFS(v3/v4).   |
      |   4   |   CreateDir   |   Sends a notification when a directory is created. Protocols: CIFS, NFS(v3/v4).   |
      |   5   |   DeleteFile   |   Sends a notification when a file is deleted. Protocols: CIFS, NFS(v3/v4).   |
      |   6   |   DeleteDir   |   Sends a notification when a directory is deleted. Protocols: CIFS, NFS(v3/v4).   |
      |   7   |   CloseModified   |   Sends a notification when a file was modified before closing. Protocols: CIFS, NFS(v4).   |
      |   8   |   CloseUnmodified   |   Sends a notification when a file was not modified before closing. Protocols: CIFS, NFS(v4).   |
      |   9   |   RenameFile   |   Sends a notification when a file is renamed. Protocols: CIFS, NFS(v3/v4).   |
      |   10   |   RenameDir   |   Sends a notification when a directory is renamed. Protocols: CIFS, NFS(v3/v4).   |
      |   11   |   SetAclFile   |   Sends a notification when the security descriptor (ACL) on a files is modified. Protocols: CIFS.   |
      |   12   |   SetAclDir   |   Sends a notification when the secuirty descriptor (ACL) on a directory is modified. Protocols: CIFS.   |
      |   13   |   OpenDir   |   Sends a notification when a directory is opened. Protocols: CIFS, NFSv4.   |
      |   14   |   CloseDir   |   Sends a notification when a directory is closed. Protocols: CIFS, NFSv4.   |
      |   15   |   FileRead   |   Sends a notification when a file read is received over NFS. Protocols: NFS(v3/v4).   |
      |   16   |   FileWrite   |   Sends a notification when a file write is received over NFS. Protocols: NFS(v3/v4).   |
      |   17   |   SetSecFile   |   Sends a notification when a file security modification is received over NFS. Protocols: NFS(v3/v4).   |
      |   18   |   SetSecDir   |   Sends a notification when a directory security modification is received over NFS. Protocols: NFS(v3/v4).   |
      |   19   |   OpenFileReadOffline   |   Sends a notification when a offline file is opened for read access. Protocols: CIFS.   |
      |   20   |   OpenFileWriteOffline   |   Sends a notification when a offline file in opened for write access. Protocols: CIFS.   |
    enum: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
  FileInterfaceRoleEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Role of NAS server network interface.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Production   |   Production network interfaces are used for all file protocols and services of NAS server. They are inactive while NAS server is in destination mode.   |
      |   1   |   Backup   |   Backup network interfaces are used only for NDMP/NFS backup or Disaster Recovery testing. They are always active in all NAS server modes.   |
    enum: [0,1]
  FilesystemSnapAccessTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates whether Checkpoint or Protocol access is granted to the file system snap.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Checkpoint   |   Checkpoint access to enable access through a .ckpt folder in the file system.   |
      |   2   |   Protocol   |   Protocol access to enable access through a file share.   |
    enum: [1,2]
  FilesystemTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      The file system types.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   FileSystem   |   Underlying file system associated with a file system storage resource.   |
      |   2   |   VMware   |   Underlying file system associated with a VMware NFS storage resource.   |
    enum: [1,2]
  FLRVersionEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      FLR version represents which File Level Retention (FLR) version is enabled on the file system. .

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Off   |   FLR is OFF on the file system.   |
      |   1   |   Enterprise   |   FLR enterprise type is enabled on the file system.<br> FLR enterprise type protects data content from changes made by users through CIFS, NFS, and FTP. It is intended for self-regulated archiving.   |
      |   2   |   Compliance   |   FLR compliance type is enabled on the file system.<br> FLR compliance type protects data content from changes made by users through CIFS, NFS, and FTP, from changes made by administrators, and also meets the requirements of SEC rule 17a-4(f). It is intended to assist those companies that have to comply with regulations such as SEC rule 17a-4(f). The main difference between enterprise and compliance include compliance does write verify to ensure the quality and accuracy of the storage media recording process and prevents any modification or deletion of protected files by administrators.   |
    enum: [0,1,2]
  FSFormatEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      UFS files system formats.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   UFS32   |   UFS32 file system.   |
      |   2   |   UFS64   |   UFS64 file system.   |
    enum: [0,2]
  FSLockingPolicyEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      File system locking policies.<br>  These policy choices control whether the NFSv4 range locks must be honored. <br>  Because NFSv3 is advisory by design, this policy allows specifying whether the NFSv4 locking feature behaves like NFSv3 (advisory mode) in order to be <br>  backward compatible with applications expecting an advisory locking scheme.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Advisory   |   No lock checking for NFS and honor SMB lock range only for SMB.   |
      |   1   |   Mandatory   |   Honor SMB and NFS lock range.   |
    enum: [0,1]
  FSRenamePolicyEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      File system folder rename policies.<br>  These policy choices control whether directory can be renamed from NFS or SMB clients if at least one file is opened in the directory or in one of its <br>  child directories.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   All_Rename_Allowed   |   All protocols are allowed to rename directories without any restrictions.   |
      |   1   |   SMB_Rename_Forbidden   |   A directory rename from the SMB protocol will be denied if at least one file is opened in the directory or in one of its child directories.   |
      |   2   |   All_Rename_Forbidden   |   Any directory rename request will be denied regardless of the protocol used, if at least one file is opened in the directory or in one of its child directories.   |
    enum: [0,1,2]
  FSSupportedProtocolEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Network share protocols supported by file system.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   NFS   |   Only NFS share protocol supported by file system.   |
      |   1   |   CIFS   |   Only SMB (also known as CIFS) share protocol is supported by file system.   |
      |   2   |   Multiprotocol   |   Both share protocols NFS and SMB (also known as CIFS) are supported by file system.   |
    enum: [0,1,2]
  HealthCheckModeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Health check mode

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   General   |   General health check   |
      |   1   |   NDU   |   Health check for software upgrade   |
      |   2   |   ODFU   |   Health check for drive firmware upgrade   |
    enum: [0,1,2]
  HealthEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible values for health attribute.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   UNKNOWN   |   Unknown.   |
      |   5   |   OK   |   OK.   |
      |   7   |   OK_BUT   |   OK But Minor Warning   |
      |   10   |   DEGRADED   |   Degraded.   |
      |   15   |   MINOR   |   Minor Issue.   |
      |   20   |   MAJOR   |   Major Issue.   |
      |   25   |   CRITICAL   |   Critical Issue.   |
      |   30   |   NON_RECOVERABLE   |   Non Recoverable Issue.   |
    enum: [0,5,7,10,15,20,25,30]
  HostContainerPotentialHostImportOptionEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      This enumeration gives the recommendation for how to import candidate hosts<br>  based on the matching condition with the existing host.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Import_New   |   Create a new host   |
      |   1   |   Import_Existing   |   Matched an imported host by UUID. We will allow it to be imported   |
      |   2   |   Import_Conflict   |   Matched multiple hosts on the array or matches UUID or initiators with other potential hosts. We will not allow the import   |
      |   3   |   Import_Match   |   Match one host on the array. Will allow importing to replace that host   |
      |   4   |   Import_Warn   |   Match ip address with another potential host. Will allow importing.   |
    enum: [0,1,2,3,4]
  HostContainerPotentialHostMatchConditionEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      This enumeration describes how the discovered candidate host matches the<br>  existing host/hosts that is/are already known to the storage array.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Match_Unknown   |   Unknown match condition   |
      |   1   |   Match_UUID   |   UUID matches   |
      |   2   |   Match_AllInitiators   |   all initiators match   |
      |   3   |   Match_UUID_AllInitiators   |   UUID and all initiators match   |
      |   4   |   Match_AllNetworkAddresses   |   all network addresses match   |
      |   5   |   Match_UUID_AllNetworkAddresses   |   UUID and all network addresses match   |
      |   6   |   Match_AllInitiators_AllNetworkAddresses   |   all initiators and all network addresses match   |
      |   7   |   Match_UUID_AllInitiators_AllNetworkAddresses   |   UUID and all initiators and all network addresses match   |
      |   8   |   Match_SomeInitiators   |   some initiators match   |
      |   9   |   Match_UUID_SomeInitiators   |   UUID and some initiators match   |
      |   12   |   Match_AllNetworkAddresses_SomeInitiators   |   all network addresses and some initiators match   |
      |   13   |   Match_UUID_AllNetworkAddresses_SomeInitiators   |   UUID and all network addresses and some initiators match   |
      |   16   |   Match_SomeNetworkAddresses   |   some network addresses match   |
      |   17   |   Match_UUID_SomeNetworkAddresses   |   UUID and some network addresses match   |
      |   18   |   Match_AllInitiators_SomeNetworkAddresses   |   some initiators and some network addresses match   |
      |   19   |   Match_UUID_AllInitiators_SomeNetworkAddresses   |   UUID and some initiators and some network addresses match   |
      |   24   |   Match_SomeInitiators_SomeNetworkAddresses   |   some initiators and some network addresses match   |
      |   25   |   Match_UUID_SomeInitiators_SomeNetworkAddresses   |   UUID and some initiators and some network addresses match   |
    enum: [0,1,2,3,4,5,6,7,8,9,12,13,16,17,18,19,24,25]
  HostContainerTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      A VMware host container type for managed VMs.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   UNKNOWN   |   Unknown type.   |
      |   1   |   ESX   |   ESXi type.   |
      |   2   |   VCENTER   |   vCenter type.   |
    enum: [0,1,2]
  HostGroupAccessMergeTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Specify how the host access is going to be merged when the host is added/modified in host group.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   NoChange   |   Do not change the existing host access.   |
      |   1   |   Customized   |   Customized host access.   |
      |   2   |   MergeFromHostGroup   |   Add host access to the LUNs that are accessible by all hosts in the host group.   |
      |   3   |   MergeToHostGroup   |   Add host access to the LUNs that are accessible by all hosts in the host group, and the LUNs that are accessible by the specified host will be accessible by all hosts in the host group.   |
      |   4   |   RemoveAccessFromHostGroup   |   Remove host access to the LUNs that are accessible by all hosts in the host group.   |
    enum: [0,1,2,3,4]
  HostGroupTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Specify the type of a host group.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   General   |   General host group, only general host can be added to the host group.   |
      |   1   |   ESX   |   ESX host group, only ESX host can be added to the host group.   |
    enum: [0,1]
  HostInitiatorChapSecretTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      This enumeration describes the possible encoding types for the iSCSI chap secret.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   CHAPSECRET_TYPE_BINARY   |   Encoded in binary mode.   |
      |   1   |   CHAPSECRET_TYPE_ASCII   |   Encoded in ascii mode.   |
    enum: [0,1]
  HostInitiatorFailoverModeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      This enumeration describes the possible failover mode of an initiator.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Auto_Trespass   |   Any media access to the non owning SP is rejected.   |
      |   1   |   Passive_Not_Ready   |   A command failure during I/O is sent to the non owning SP.   |
      |   2   |   DMP_Mode   |   Quiet trespass on I/O to non owning SP.   |
      |   3   |   Passive_Always_Ready   |   Some commands, e.g. Test Unit Ready, returns PAR status.   |
      |   4   |   ALUA_Mode   |   Initiators are permitted to send I/O to a LUN regardless of which SP actually owns the LUN. This is the system default mode.   |
    enum: [0,1,2,3,4]
  HostInitiatorIscsiTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      This enumeration describes the possible iSCSI types of an initiator.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   ISCSI_TYPE_UNKNOWN   |   Unknown iSCSI type or not an iSCSI initiator.   |
      |   1   |   ISCSI_TYPE_HARDWARE   |   Hardware iSCSI type.   |
      |   2   |   ISCSI_TYPE_SOFTWARE   |   Software iSCSI type.   |
      |   3   |   ISCSI_TYPE_DEPENDENT   |   Hardware dependent adapter device. The iSCSI initiator needs to be bound to an IP address before it can be used.   |
    enum: [0,1,2,3]
  HostInitiatorPathTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates how the host initiator path is registered.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Manual   |   Registered manually.   |
      |   1   |   ESX_Auto   |   Registered automatically by an ESXi host.   |
      |   2   |   Other_Auto   |   Registered automatically by a non-ESXi host.   |
    enum: [0,1,2]
  HostInitiatorSourceTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      This enumeration describes the possible source types of an initiator.  This type regulates some aspects of system behavior.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Unknown.   |
      |   2   |   HP_Autotrespass   |   HP with Auto-trespass.   |
      |   3   |   Open_Native   |   Open native (a.k.a. CLARiiON Open). This is the system default type.   |
      |   9   |   SGI   |   Silicon Graphics.   |
      |   10   |   HP_No_Autotrespass   |   HP without Auto-trespass.   |
      |   19   |   Dell   |   Dell.   |
      |   22   |   Fujitsu_Siemens   |   Fujitsu-Siemens.   |
      |   25   |   Clariion_Array_CMI   |   Remote CLARiiON array.   |
      |   28   |   Tru64   |   Compaq Tru64.   |
      |   31   |   Recoverpoint   |   RecoverPoint.   |
    enum: [0,2,3,9,10,19,22,25,28,31]
  HostInitiatorTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      This enumeration describes the possible protocol types of an initiator.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   UNKNOWN   |   Unknown initiator type.   |
      |   1   |   FC   |   Fibre channel initiator.   |
      |   2   |   ISCSI   |   iSCSI initiator.   |
    enum: [0,1,2]
  HostIOSizeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Typical size of writes from the server or other computer using the file system or LUN to the storage system. <br> This setting is used to match the storage block size to the I/O of the primary application using the storage,<br> which can optimize performance. Choose one of the suggested applications if you are using one of them, or <br> check the setup guide or performance tuning information for the primary application, or stay with default 8K <br> size for general use.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   8,192   |   General_8K   |   Host I/O size is 8K for general purpose   |
      |   16,384   |   General_16K   |   Host I/O size is 16K for general purpose   |
      |   32,768   |   General_32K   |   Host I/O size is 32K for general purpose   |
      |   65,536   |   General_64K   |   Host I/O size is 64K for general purpose   |
      |   8,193   |   Exchange2007   |   Host I/O size is 8K for Exchange 2007 application   |
      |   32,769   |   Exchange2010   |   Host I/O size is 32K for Exchange 2010 application   |
      |   32,770   |   Exchange2013   |   Host I/O size is 32K for Exchange 2013 application   |
      |   8,194   |   Oracle   |   Host I/O size is 8K for Oracle DB application   |
      |   8,195   |   SQLServer   |   Host I/O size is 8K for Microsoft SQL Server application   |
      |   8,196   |   VMwareHorizon   |   Host I/O size is 8K for VMware Horizon VDI application   |
      |   32,771   |   SharePoint   |   Host I/O size is 32K for SharePoint application   |
      |   8,197   |   SAP   |   Host I/O size is 8K for SAP application   |
    enum: [8192,16384,32768,65536,8193,32769,32770,8194,8195,8196,32771,8197]
  HostLUNAccessEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates the type of access a host has to a LUN or consistency group.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   NoAccess   |   No access.   |
      |   1   |   Production   |   Access to production LUNs only.   |
      |   2   |   Snapshot   |   Access to LUN snapshots only.   |
      |   3   |   Both   |   Access to both production LUNs and their snapshots.   |
      |   65,535   |   Mixed   |   (Applies to consistency groups only.) Indicates that LUNs in a consistency group have different host access. Do not use this value in Create or Modify requests.   |
    enum: [0,1,2,3,65535]
  HostLUNTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates the type of LUN to which a host has access.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Unknown LUN type.   |
      |   1   |   LUN   |   Production LUN.   |
      |   2   |   LUN_Snap   |   Snapshot LUN.   |
    enum: [0,1,2]
  HostManageEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates how the host is managed.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   UNKNOWN   |   Managed manually.   |
      |   1   |   VMWARE   |   Automatically managed by an ESXi server.   |
      |   2   |   OTHERS   |   Managed by another method.   |
    enum: [0,1,2]
  HostOperationalStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |      |
      |   1   |   Other   |      |
      |   2   |   OK   |      |
      |   3   |   Degraded   |      |
      |   4   |   Stressed   |      |
      |   5   |   Predictive_Failure   |      |
      |   6   |   Error   |      |
      |   7   |   Non_Recoverable_Error   |      |
      |   8   |   Starting   |      |
      |   9   |   Stopping   |      |
      |   10   |   Stopped   |      |
      |   11   |   In_Service   |      |
      |   12   |   No_Contact   |      |
      |   13   |   Lost_Communication   |      |
      |   14   |   Aborted   |      |
      |   15   |   Dormant   |      |
      |   16   |   Supporting_Entity_in_Error   |      |
      |   17   |   Completed   |      |
      |   18   |   Power_Mode   |      |
      |   19   |   Temp_Unmounted   |      |
      |   20   |   Perm_Unmounted   |      |
      |   32,768   |   Initiators_Config_not_HA   |      |
      |   32,769   |   No_LoggedIn_Initiator   |      |
      |   32,770   |   Initiators_Data_Inconsistent   |      |
      |   32,771   |   Network_Addresses_Data_Inconsistent   |      |
      |   32,772   |   Tenant_Data_Inconsistent   |      |
      |   34,048   |   Credential_Invalid   |      |
      |   34,049   |   Storage_Not_Found   |      |
      |   34,050   |   Certificate_Invalid   |      |
    enum: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,32768,32769,32770,32771,32772,34048,34049,34050]
  HostPortTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      This enumeration describes the possible IP address types of a host port.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   IPv4   |   IPv4.   |
      |   1   |   IPv6   |   IPv6.   |
      |   2   |   NetworkName   |   Network name.   |
    enum: [0,1,2]
  HostRegistrationTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates how initiators are registered to the host.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   UNKNOWN   |   Registration type is unknown.   |
      |   1   |   MANUAL   |   Initiator is registered manually.   |
      |   2   |   ESXAUTO   |   Initiator is registered automatically by an ESXi server.   |
    enum: [0,1,2]
  HostTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates the type of the host.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Host configuration is unknown.   |
      |   1   |   HostManual   |   A manually defined individual host system.   |
      |   2   |   Subnet   |   All the hosts in a subnet.   |
      |   3   |   NetGroup   |   A netgroup, used for NFS access. Netgroups are defined by NIS, and only available when NIS is active.   |
      |   4   |   RPA   |   A RecoverPoint appliance host.   |
      |   5   |   HostAuto   |   An auto-managed host - the system or an external agent identifies and updates the information for this host.   |
      |   255   |   VNXSanCopy   |   Host defined for Block Migration from VNX Platform system.   |
    enum: [0,1,2,3,4,5,255]
  HotSparePolicyStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   OK   |      |
      |   741   |   Violated   |      |
    enum: [0,741]
  ImportCapabilityEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Importable   |      |
      |   1   |   Non_importable_internal_error   |      |
      |   2   |   Non_importable_only_support_vnx   |      |
      |   3   |   Non_importable_src_vdm_name_in_use_sess_completed   |      |
      |   4   |   Non_importable_src_vdm_name_in_use_sess_active   |      |
      |   5   |   Non_importable_src_vdm_name_in_use   |      |
      |   6   |   Non_importable_no_up_src_clnt_if   |      |
      |   7   |   Non_importable_no_fs_on_src_vdm   |      |
      |   8   |   Non_importable_reach_src_fs_limit   |      |
      |   9   |   Non_importable_nfsv4_not_support   |      |
      |   10   |   Non_importable_secnfs_not_support   |      |
      |   11   |   Non_importable_vdm_cannot_have_cifs_server   |      |
      |   12   |   Non_importable_srcmigif_more_error   |      |
      |   13   |   Non_importable_srcmigif_error   |      |
      |   14   |   Non_importable_invalid_vdm   |      |
      |   15   |   Non_importable_reach_src_if_limit   |      |
      |   16   |   Non_importable_src_cs_not_primary   |      |
    enum: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]
  ImportOpStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |      |
      |   7   |   Non_Recoverable_Error   |      |
      |   32,768   |   Configuring_Target_Resource   |      |
      |   32,769   |   Enabling_Target_Resource_Access   |      |
      |   32,770   |   Migrator_Cannot_Discover_Target_Resource   |      |
      |   32,771   |   Ready_To_Migrate   |      |
      |   32,772   |   Initial_Transfer_Inprogress   |      |
      |   32,773   |   Delta_Transfer_Inprogress   |      |
      |   32,774   |   Paused   |      |
      |   32,776   |   Ready_To_Cutover   |      |
      |   32,777   |   Lost_Communication   |      |
      |   32,779   |   Target_Luns_Offline   |      |
      |   32,780   |   Pending   |      |
      |   32,781   |   Cutover_Sync_Complete   |      |
      |   32,782   |   Session_Cleanup_Complete   |      |
      |   32,783   |   Final_Transfer_Inprogress   |      |
      |   33,532   |   Session_Exceed_Limit   |      |
      |   33,024   |   Initialized   |      |
      |   33,025   |   Starting   |      |
      |   33,026   |   Start_Failed   |      |
      |   33,027   |   Migrating_Data   |      |
      |   33,028   |   Migrating_Data_Stopped   |      |
      |   33,029   |   Migrating_Data_Failed   |      |
      |   33,030   |   Migrating_Data_Failed_Stopped   |      |
      |   33,031   |   Migrating_Configuration   |      |
      |   33,032   |   Migrating_Configuration_Failed   |      |
      |   33,033   |   Migrating_Configuration_Paused   |      |
      |   33,280   |   Cutting_Over   |      |
      |   33,281   |   Cutover_Failed   |      |
      |   33,282   |   Syncing_Data   |      |
      |   33,283   |   Syncing_Data_Stopped   |      |
      |   33,284   |   Syncing_Data_Failed   |      |
      |   33,285   |   Syncing_Data_Failed_Stopped   |      |
      |   33,536   |   Ready_To_Complete   |      |
      |   33,537   |   Completing   |      |
      |   33,538   |   Complete_Failed   |      |
      |   33,539   |   Completed   |      |
      |   33,540   |   Cancelling   |      |
      |   33,541   |   Cancel_Failed   |      |
      |   33,542   |   Cancelled   |      |
      |   33,543   |   Migrating_Data_Stopping   |      |
      |   33,544   |   Syncing_Data_Stopping   |      |
      |   33,547   |   Provisioning_Target_Paused   |      |
      |   34,048   |   FS_OK   |      |
      |   34,049   |   FS_Source_IO_Failure   |      |
      |   34,050   |   FS_Destination_IO_Failure   |      |
      |   34,051   |   FS_Connection_Failure   |      |
      |   34,052   |   FS_Unrecoverable_Failure   |      |
      |   34,304   |   VMO_Faulted   |      |
      |   34,305   |   VMO_Offline   |      |
      |   34,560   |   Element_Import_OK   |      |
      |   34,561   |   Element_Import_Unable_To_Locate_Device   |      |
      |   34,562   |   Element_Import_Bad_Block_On_Source_Device   |      |
      |   34,563   |   Element_Import_Unable_To_Access_Device   |      |
      |   34,564   |   Element_Import_LU_Trespassed   |      |
      |   34,565   |   Element_Import_Source_Device_Inaccessible   |      |
      |   34,566   |   Element_Import_Low_User_Link_Bandwidth   |      |
      |   34,567   |   Element_Import_Concurrent_SanCopy_Session_Destinations   |      |
      |   34,568   |   Element_Import_Error_Communicating_With_SanpView   |      |
      |   34,569   |   Element_Import_Error_Communicating_With_SanpView_1   |      |
      |   34,570   |   Element_Import_Session_Inconsistent_State   |      |
      |   34,571   |   Element_Import_Destination_Inconsistent_State   |      |
      |   34,572   |   Element_Import_Auto_Recovery_Resume_Failed   |      |
      |   34,573   |   Element_Import_All_Paths_failure   |      |
      |   34,574   |   Element_Import_Access_Denied_To_Device   |      |
      |   34,575   |   Element_Import_Not_Enough_Memory   |      |
      |   34,576   |   Element_Import_Source_Device_Failure   |      |
      |   34,577   |   Element_Import_Destination_Device_Failure   |      |
      |   34,578   |   Element_Import_Destination_Device_Not_found   |      |
      |   34,579   |   Element_Import_Target_LU_Not_Initialized   |      |
      |   34,580   |   Element_Import_Command_TimedOut   |      |
      |   34,581   |   Element_Import_Verifying_Frontend_TimedOut   |      |
      |   34,582   |   Element_Import_Verifying_Frontend_TimedOut_Another_Operation   |      |
      |   34,583   |   Element_Import_Source_Connectivity_TimedOut   |      |
      |   34,584   |   Element_Import_Destination_Connectivity_TimedOut   |      |
      |   34,585   |   Element_Import_RLP_IO_Failure   |      |
      |   34,586   |   Element_Import_Total_Sessions_Limit_Reached   |      |
      |   34,587   |   Element_Import_Incremental_Sessions_Limit_Reached   |      |
      |   34,588   |   Element_Import_Incremental_Sessions_Total_Number_Reached   |      |
      |   34,589   |   Element_Import_Limit_Of_Total_Sessions_Reached   |      |
      |   34,590   |   Element_Import_Limit_Of_Total_Incremental_Sessions_Reached   |      |
      |   34,591   |   Element_Import_Copy_Command_Queued   |      |
      |   34,592   |   Element_Import_Session_Failed_On_Source_Or_Destination   |      |
      |   34,593   |   Element_Import_Device_Cannot_Be_Located   |      |
      |   34,594   |   Element_Import_No_Unused_Rlp_Luns   |      |
      |   34,595   |   Element_Import_Reserved_Lun_Not_Support_Incremental_Sessions   |      |
      |   34,596   |   Element_Import_Snapview_Reserved_Lun_Not_Enough_Space   |      |
      |   34,597   |   Element_Import_Too_Many_Snapshots_On_Source_Lu   |      |
      |   34,598   |   Element_Import_Cannot_Open_Reserved_Lun   |      |
      |   34,599   |   Element_Import_Cannot_Get_Reserved_Lun_info   |      |
      |   34,600   |   Element_Import_No_Space_On_Rlp   |      |
      |   34,601   |   Element_Import_Rlp_Maximum_Devices   |      |
      |   34,602   |   Element_Import_Session_With_No_Cache_Devices   |      |
      |   34,603   |   Element_Import_Session_Failed_Write_To_Target_Device_Insufficient_Storage   |      |
      |   34,604   |   Element_Import_Session_Device_Not_Ready   |      |
      |   34,605   |   Element_Import_Session_Source_Device_Unavailable   |      |
      |   34,606   |   Element_Import_Session_Source_In_Import_Session   |      |
    enum: [0,7,32768,32769,32770,32771,32772,32773,32774,32776,32777,32779,32780,32781,32782,32783,33532,33024,33025,33026,33027,33028,33029,33030,33031,33032,33033,33280,33281,33282,33283,33284,33285,33536,33537,33538,33539,33540,33541,33542,33543,33544,33547,34048,34049,34050,34051,34052,34304,34305,34560,34561,34562,34563,34564,34565,34566,34567,34568,34569,34570,34571,34572,34573,34574,34575,34576,34577,34578,34579,34580,34581,34582,34583,34584,34585,34586,34587,34588,34589,34590,34591,34592,34593,34594,34595,34596,34597,34598,34599,34600,34601,34602,34603,34604,34605,34606]
  ImportStageEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Import synchronization stage.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Initial   |   Initial sync.   |
      |   1   |   Incremental   |   Incremental sync.   |
      |   2   |   Final   |   Final sync.   |
    enum: [0,1,2]
  ImportStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Import state.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |      |
      |   50,000   |   Initialized   |   Initialized.   |
      |   50,001   |   Initial_Copy   |   Initial Copy .   |
      |   50,002   |   Ready_to_Cutover   |   Ready to Cutover .   |
      |   50,003   |   Paused   |   Paused .   |
      |   50,004   |   Cutting_Over   |   Cutting Over .   |
      |   50,005   |   Incremental_Copy   |   Incremental Copy .   |
      |   50,006   |   Ready_to_Commit   |   Ready to Commit.   |
      |   50,007   |   Committing   |   Committing .   |
      |   50,008   |   Completed   |   Completed.   |
      |   50,009   |   Cancelling   |   Cancelling .   |
      |   50,010   |   Cancelled   |   Cancelled.   |
      |   50,011   |   Pending   |   Pending.   |
      |   50,012   |   Syncing   |   Syncing.   |
      |   50,013   |   Error   |   Error.   |
    enum: [0,50000,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013]
  ImportTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Type of import session.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   block   |      |
      |   1   |   nas   |      |
    enum: [0,1]
  ImportUnixDirectoryServiceEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Local   |      |
      |   1   |   NIS   |      |
      |   2   |   LDAP   |      |
      |   3   |   LocalThenNis   |      |
      |   4   |   LocalThenLdap   |      |
      |   5   |   None   |      |
      |   6   |   DirectMatch   |      |
    enum: [0,1,2,3,4,5,6]
  InterfaceConfigModeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Configuration mode of management interfaces.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Disabled   |   Management access is disabled.   |
      |   1   |   Static   |   Management interface address is set manually.   |
      |   2   |   Auto   |   Management interface address is configured by DHCP/SLAAC.   |
    enum: [0,1,2]
  IOLimitPolicyStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Global_Paused   |   Global Paused   |
      |   2   |   Paused   |   Paused   |
      |   3   |   Active   |   Active   |
    enum: [1,2,3]
  IOLimitPolicyTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Absolute   |   Absolute Value   |
      |   2   |   Density_Based   |   Density-based Value   |
    enum: [1,2]
  IoModuleStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible IO Module statuses.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   IO Module status is unknown.   |
      |   2   |   OK   |   IO Module status is OK.   |
      |   32,768   |   Not_Symmetric   |   IO Module status is not symmetric.   |
      |   32,769   |   Ready_For_Configuration   |   IO Module status is ready for configuration.   |
      |   33,024   |   Uninitialized   |   IO Module status is uninitialized.   |
      |   33,025   |   Empty   |   IO Module status is empty.   |
      |   33,026   |   Missing   |   IO Module status is missing.   |
      |   33,027   |   Faulted   |   IO Module status is faulted.   |
      |   33,028   |   Unsupported   |   IO Module status is unsupported.   |
      |   32,800   |   Not_Present   |   IO Module status is not present.   |
      |   32,801   |   PROM_Read_Error   |   IO Module status is PROM read error.   |
      |   32,802   |   Incorrect_Module   |   IO Module status is incorrect module.   |
      |   32,803   |   Unsupported_Module   |   IO Module status is unsupported module.   |
      |   32,804   |   Powered_Off   |   IO Module status is powered off.   |
      |   32,805   |   Power_Up_Failed   |   IO Module status is power up failed.   |
      |   32,806   |   POST_BIOS_Failed   |   IO Module status is POST BIOS failed.   |
      |   32,807   |   Unsupported_Not_Committed   |   IO Module status is unsupported not committed.   |
    enum: [0,2,32768,32769,33024,33025,33026,33027,33028,32800,32801,32802,32803,32804,32805,32806,32807]
  IpInterfaceTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Type of network interface.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Mgmt   |   Network interfaces are used for management access.   |
      |   2   |   ISCSI   |   Network interfaces are used for iSCSI access.   |
      |   3   |   File   |   Network interfaces are used for File access.   |
      |   4   |   Replication   |   Network interfaces are used for replication.   |
    enum: [1,2,3,4]
  IpProtocolTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   UDP   |      |
      |   1   |   TCP   |      |
      |   3   |   Vendor_Specific   |      |
      |   4   |   Other   |      |
    enum: [0,1,3,4]
  IpProtocolVersionEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      IP version of network interface.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   4   |   IPv4   |   Network interface uses IPv4 address.   |
      |   6   |   IPv6   |   Network interface uses IPv6 address.   |
    enum: [4,6]
  IPRecommendUsageEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   File   |      |
      |   2   |   ISCSI   |      |
    enum: [1,2]
  ISCSIConnectionStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   iscsi connection state is unkown.   |
      |   1   |   Logged_In   |   Connection is active and logged in.   |
      |   2   |   Reconnecting   |   Currently trying to re-establish the connection.   |
      |   3   |   Free   |   Target is discovered but not logged in.   |
      |   4   |   No_Target   |   Target for the initiator has been removed.   |
    enum: [0,1,2,3,4]
  JobStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Job state.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Queued   |   Job is queued to run.   |
      |   2   |   Running   |   Job is running.   |
      |   3   |   Suspended   |   Job is suspended.   |
      |   4   |   Completed   |   Job completed successfully.   |
      |   5   |   Failed   |   Job is failed, interrupted or terminated.   |
      |   6   |   Rolling_Back   |   Job has failed and is attempting to roll back.   |
      |   7   |   Completed_With_Problems   |   Job ran to the end, but a task returned an error.   |
    enum: [1,2,3,4,5,6,7]
  JobTaskStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Job task state. A job task is defined by the jobTask resource type.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Not_Started   |   Job task is waiting to run.   |
      |   1   |   Running   |   Job task is running.   |
      |   2   |   Completed   |   Job task completed successfully.   |
      |   3   |   Failed   |   Job task failed.   |
      |   5   |   Rolling_Back   |   Job task is rolling back.   |
      |   6   |   Completed_With_Problems   |   Job ran to the end, but a task returned an error.   |
      |   7   |   Suspended   |   Job is suspended.   |
    enum: [0,1,2,3,5,6,7]
  KdcTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Type of Kerberos Domain Controller used for secure NFS service.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Custom   |   Use the custom Kerberos Domain Controller for secure NFS service.<br>        This requires a configured Kerberos server and an uploaded Kerberos key table file.   |
      |   1   |   Unix   |   Use the Unix Kerberos Domain Controller (MIT/Heimdal) for secure NFS service.<br>        This requires a configured Kerberos server.   |
      |   2   |   Windows   |   Use the Windows Kerberos Domain Controller for secure NFS service.<br>      This requires a configured SMB server joined to an Active Directory domain.   |
    enum: [0,1,2]
  KeyManagerBackupKeysStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Key store backup retrieval status

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   65,535   |   Invalid   |   Invalid.   |
      |   0   |   No_Retrieval_Required   |   No backup keys retrieval is required.   |
      |   16   |   Retrieval_Required   |   Backup keys retrieval is required.   |
      |   32   |   Retrieval_In_Progress   |   The backup keys retrieval is in progress.   |
      |   64   |   Retrieval_Completed   |   The backup keys retrieval is completed.   |
      |   128   |   Keystore_Inaccessible   |   The Keystore is inaccessible.   |
    enum: [65535,0,16,32,64,128]
  KmipServerStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      KMIP server status

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Down   |   Server is down.   |
      |   1   |   Up   |   Server is up.   |
      |   2   |   Unknown   |   Server status is unknown.   |
    enum: [0,1,2]
  KmipStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Key Management Interoperability Protocol (KMIP) compliant<br> external key management feature status <br> @author zhangp

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Disabled   |   KMIP feature is disabled.   |
      |   1   |   Enabled   |   KMIP feature is enabled.   |
      |   255   |   Unsupported   |   KMIP feature is not supported.   |
      |   65,535   |   Unknown   |   KMIP feature status is unknown. It cannot be determined.   |
    enum: [0,1,255,65535]
  LDAPProtocolEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates whether the LDAP protocol uses SSL for secure network communication.<br>  SSL encrypts data over the network and provides message and server<br>  authentication.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   ldap   |   LDAP protocol without SSL.   |
      |   1   |   ldaps   |   (Default) LDAP protocol with SSL. When you enable LDAPS, make sure to specify the appropriate LDAPS port (usually port 636) and to upload an LDAPS trust certificate to the LDAP server.   |
      |   2   |   unknown   |   Unknown protocol.   |
    enum: [0,1,2]
  LicenseProductLineEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates the EMC product family for which this license is valid.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Invalid product type   |
      |   1   |   EUVSA   |   EMC UnityVSA product family   |
      |   3   |   EU   |   EMC Unity product family   |
    enum: [0,1,3]
  LicenseUnitOfMeasurementEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Unit of measurement for compliance with the given license instance

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Indicates an invalid unit of measurement in license file.   |
      |   1   |   CA   |   Indicates the unit of measurement will be registered capacity in TB.   |
      |   2   |   CB   |   Indicates the unit of measurement will be raw capacity in TB.   |
      |   3   |   CC   |   Indicates the unit of measurement will be usable capacity in TB.   |
      |   4   |   IC   |   Indicates the unit of measurement will be instance measured per storage array.   |
    enum: [0,1,2,3,4]
  LocaleEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   en_US   |      |
      |   1   |   es_AR   |      |
      |   2   |   de_DE   |      |
      |   3   |   fr_FR   |      |
      |   5   |   ja_JP   |      |
      |   6   |   ko_KR   |      |
      |   7   |   pt_BR   |      |
      |   8   |   ru_RU   |      |
      |   9   |   zh_CN   |      |
    enum: [0,1,2,3,5,6,7,8,9]
  LUNTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Types of LUNs.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   GenericStorage   |   Generic Storage Volume, i.e. LUN associated with Consistency group.   |
      |   2   |   Standalone   |   Standalone Storage Volume (LUN), <br>  not associated with Consistency group.   |
      |   3   |   VmWareISCSI   |   VMWare Storage Volume for VMFS datastore.   |
    enum: [1,2,3]
  MetricTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   2   |   counter32   |      |
      |   3   |   counter64   |      |
      |   4   |   rate   |      |
      |   5   |   fact   |      |
      |   6   |   text   |      |
      |   7   |   virtualcounter32   |      |
      |   8   |   virtualcounter64   |      |
    enum: [2,3,4,5,6,7,8]
  MetricUnitEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   OTHER   |      |
      |   1   |   BYTES   |      |
      |   2   |   BYTES_PER_SECOND   |      |
      |   3   |   PERCENTAGE   |      |
      |   4   |   COUNT   |      |
      |   5   |   MILLISECONDS   |      |
      |   6   |   IOS   |      |
      |   7   |   IOS_PER_SECOND   |      |
      |   8   |   PACKETS_PER_SECOND   |      |
      |   9   |   MICROSECONDS   |      |
      |   10   |   KILOBYTES   |      |
      |   11   |   KILOBYTES_PER_SECOND   |      |
      |   12   |   MEGABYTES   |      |
      |   13   |   COUNT_PER_SECOND   |      |
    enum: [0,1,2,3,4,5,6,7,8,9,10,11,12,13]
  MirrorConditionEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Mirror condition

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Condition of mirror is unknown.   |
      |   1   |   Master   |   Condition of mirror is master.   |
      |   2   |   Normal   |   Condition of mirror is normal.   |
      |   3   |   Admin_Fracture   |   Condition of mirror is admin fracture.   |
      |   4   |   Sys_Fracture   |   Condition of mirror is system fracture.   |
      |   5   |   Synch_Queue   |   Condition of mirror is sync queue.   |
      |   6   |   Syncing   |   Condition of mirror is syncing.   |
      |   7   |   Waiting_On_Admin   |   Condition of mirror is waiting on admin.   |
    enum: [0,1,2,3,4,5,6,7]
  MirrorStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Mirror state.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   100   |   Unknown   |   Mirror state is unknown.   |
      |   101   |   Out_Of_Sync   |   Mirror state is out of sync.   |
      |   102   |   In_Sync   |   Mirror state is in sync.   |
      |   103   |   Consistent   |   Mirror state is consistent.   |
      |   104   |   Syncing   |   Mirror state is syncing.   |
    enum: [100,101,102,103,104]
  MoveSessionPriorityEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      An enumeration that represents the spectrum of priorities for a move session.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Idle   |   With an idle priority the migration session there is no copy I/O <br> generated.  The migration session will continue to mirror host I/O.   |
      |   1   |   Low   |   The low priority is designated for migration sessions that have <br>  the least precedence over other migration sessions.   |
      |   2   |   Below_Normal   |   Migration sessions that have a below normal priority are slightly <br>  less critical than the average (or normal) migration session.   |
      |   3   |   Normal   |   The default priority that is appropriate for most use cases.   |
      |   4   |   Above_Normal   |   Migration sessions that have an above normal priority are slightly <br>  more critical than the average (or normal) migration session.   |
      |   5   |   High   |   The high priority is reserved for migration sessions that take <br>   the highest precedence over other migration sessions.   |
    enum: [0,1,2,3,4,5]
  MoveSessionStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      An enumeration that represents the spectrum of priorities for a move session.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Initializing   |   The migration session is in the process of initializing.   |
      |   1   |   Queued   |   The migration session is queued to run.   The system will begin the data <br>  transfer when there are sufficient resources.   |
      |   2   |   Running   |   The running state indicates that the migration session is transferring <br>  data.   |
      |   3   |   Failed   |   The migration session has failed.  Consult the health of migration session <br>  for more details.   |
      |   4   |   Cancelling   |   The cancelling state indicates that the migration session is in the process of<br>  being cancelled   |
      |   5   |   Cancelled   |   The cancelled state indicates that the migration session has been cancelled.   |
      |   6   |   Completed   |   The data transfer for the migration session has completed.   |
    enum: [0,1,2,3,4,5,6]
  MoveSessionStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      An enumeration that represents the various status values for a move session.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   OK   |   The migration(move) object is operating normally   |
      |   1   |   PoolOffline   |   The pool went offline and the migration cannot continue.  Please remove the migration session, <br>  address the issue, and recreate the migration session   |
      |   2   |   PoolOutOfSpace   |   The pool exhausted the space available and the migration cannot continue.  <br>  Please remove the migration session, address the issue, and recreate the migration session.   |
      |   3   |   InternalError   |   The managed object encountered an internal error.  Please contact your service provider.   |
    enum: [0,1,2,3]
  MoveSessionThrottleEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Idle   |      |
      |   10   |   Low   |      |
      |   20   |   Below_Normal   |      |
      |   30   |   Normal   |      |
      |   40   |   Above_Normal   |      |
      |   50   |   High   |      |
    enum: [0,10,20,30,40,50]
  NasServerFileTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      The available types for NAS server scope file uploads and downloads.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |      |
      |   1   |   Ldap_Configuration   |   Upon configuration of your LDAP settings your NAS server attempts to connect to the LDAP server and automatically detects default LDAP schema depending on by the type of your LDAP server (such as SFU or OpenLDAP).   |
      |   2   |   Ldap_CA_Certificate   |   A Certificaton Authority (CA) Certificate is used for validating certificate of the LDAP Server.   |
      |   3   |   Username_Mappings   |   A NAS server text file (NTXMAP) to map Windows and UNIX user accounts with different names.   |
      |   4   |   Virus_Checker_Configuration   |   Antivirus configuration file with parameters of CAVA service.   |
      |   5   |   Users   |   Unix-style local users "passwd" file. Used for resolving unix users for NFS, FTP. Each line contains: username, encrypted password (optional), UID, GID.   |
      |   6   |   Groups   |   Unix-style groups file. Each line contains: group name, GID (Group ID), and list of UIDs (group members user IDs).   |
      |   7   |   Hosts   |   Unix-style hosts file. Each line contains: IP address, corresponding host name, and (optionally) an alias.   |
      |   8   |   Netgroups   |   Unix-style file with network groups. Each line contains: group name and members such as hosts and other groups.   |
      |   9   |   User_Mapping_Report   |   The report generated by an explicit request, for dry-run of users mapping update (typically before enabling multiprotocol on a NAS Server). This contains a reports about user mapping problems and upcoming NAS server changes.   |
      |   10   |   Kerberos_Key_Table   |   Kerberos Key Table (keytab) file is required for secure NFS with custom Kerberos settings. It contains service principal names (SPNs), encryption methods and keys for secure NFS service.   |
      |   11   |   Homedir   |   Configuration file with users name and home directory. Each line contains: a Windows domain (optional), a user name, a home directory (related to the NAS server root) and non-mandatory options.   |
    enum: [0,1,2,3,4,5,6,7,8,9,10,11]
  NasServerTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   32   |   Type32   |      |
      |   64   |   Type64   |      |
    enum: [32,64]
  NasServerUnixDirectoryServiceEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Define the Unix directory service used for looking up identity information for Unix<br> such as UIDs, GIDs, net groups, and so on.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   No Unix Directory Services is used.   |
      |   1   |   Local   |   Use local files for looking up identity information.   |
      |   2   |   NIS   |   Use NIS servers for looking up identity information.   |
      |   3   |   LDAP   |   Use LDAP servers for looking up identity information.   |
      |   4   |   LocalThenNIS   |      |
      |   5   |   LocalThenLDAP   |      |
    enum: [0,1,2,3,4,5]
  NFSAccessLevelEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      NFS Share access levels.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Read   |   Read-only access.   |
      |   1   |   Write   |   Read-Write access.   |
      |   2   |   Root   |   Read-Write, Root access.   |
      |   3   |   None   |   No access.   |
    enum: [0,1,2,3]
  NFSShareDefaultAccessEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Default access level for all hosts that can access the share.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   NoAccess   |   Deny access to the share for the hosts.   |
      |   1   |   ReadOnly   |   Allow read only access to the share for the hosts.   |
      |   2   |   ReadWrite   |   Allow read write access to the share for the hosts.   |
      |   3   |   Root   |   Allow read write root access to the share for the hosts.   |
      |   4   |   RoRoot   |   Allow read only root access to the share for the hosts.   |
    enum: [0,1,2,3,4]
  NFSShareRoleEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Role of NAS server network interface.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Production   |   Production NFS shares are used to access production file systems and snapshots. They are inactive while NAS server is in destination mode.   |
      |   1   |   Backup   |   Backup NFS shares are used to access snapshots for NDMP/NFS backup or Disaster Recovery testing. They are always active in all NAS server modes.   |
    enum: [0,1]
  NFSShareSecurityEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      NFS enforced security type for users accessing an NFS share.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Sys   |   Allow user to authenticate with any NFS security types: <br>  UNIX, Kerberos, Kerberos with integrity and Kerberos<br>  with encryption.   |
      |   1   |   Kerberos   |   Allow only Kerberos security for user authentication.   |
      |   2   |   KerberosWithIntegrity   |   Allow only Kerberos with integrity and <br>  Kerberos with encryption security <br>  for user authentication.   |
      |   3   |   KerberosWithEncryption   |   Allow only Kerberos with encryption security<br>  for user authentication.   |
    enum: [0,1,2,3]
  NFSTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      NFS Share type.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Nfs_Share   |   The NFS share is created on a filesystem.   |
      |   2   |   Vmware_Nfs   |   The NFS share is created on a VMware datastore.   |
      |   3   |   Nfs_Snapshot   |   The NFS share is created on a snapshot.   |
    enum: [1,2,3]
  NodeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   SPA   |      |
      |   1   |   SPB   |      |
      |   2,989   |   Unknown   |   LUNs may return Unknown for current node when in an intermediate or failed state. Unknown is never valid in a configuration change request.   |
    enum: [0,1,2989]
  NotRecommendedReasonEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Thin clone operations.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   None   |   Snapshot could be used for requested Thin clone operation.   |
      |   2   |   NotReadOnly   |   Snapshot is currently in rw attached mode and cannot be used for Thin clone operation.   |
      |   3   |   AutoDeleteSet   |   Snapshot has auto delete set to true and cannot be used for Thin clone operation.   |
      |   4   |   ExpirationTimeSet   |   Snapshot has retention policy configured to remove snap in some period and cannot be used for Thin clone operation.   |
      |   5   |   SystemSnap   |   Snapshot is system and cannot be used for Thin clone operation.   |
    enum: [1,2,3,4,5]
  PingStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Alive   |      |
      |   1   |   Unreachable   |      |
    enum: [0,1]
  PolicyComplianceStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Overall compliance status of the Virtual Volume.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Compliant   |      |
      |   1   |   NonCompliant   |      |
      |   2   |   Unknown   |      |
    enum: [0,1,2]
  PoolConsumerTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      PoolConsumerTypeEnum describes different types of object consuming space from<br>  pool.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   FileSystem   |   storageResource of type filesystem.   |
      |   2   |   ConsistencyGroup   |   storageResource of type consistencyGroup.   |
      |   3   |   VMwareNFS   |   storageResource of type vmwareNfs.   |
      |   4   |   VMwareVMFS   |   storageResource of type vmwareLun.   |
      |   8   |   LUN   |   storageResource of type lun.   |
      |   9   |   VVolDatastoreFS   |   storageResource of type VVol (file).   |
      |   10   |   VVolDatastoreISCSI   |   storageResource of type VVol (block).   |
      |   32,768   |   NASServer   |   nasServer.   |
    enum: [1,2,3,4,8,9,10,32768]
  PoolDataRelocationTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Pool FAST VP data relocation types.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Manual   |   FAST VP relocation is supposed to start manualy.   |
      |   2   |   Scheduled   |   FAST VP relocation is scheduled.   |
      |   3   |   Rebalance   |   FAST VP is now rebalancing the pool.   |
    enum: [1,2,3]
  PoolStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Pool state.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Initializing   |   The storage pool is being created.   |
      |   2   |   Ready   |   The storage pool is operating normally.   |
      |   3   |   Faulted   |   The storage pool is degraded.   |
      |   4   |   Offline   |   The storage pool is offline.   |
      |   5   |   Destroying   |   The storage pool is being deleted.   |
    enum: [1,2,3,4,5]
  PoolTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Type of storage pool based on disk types.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   The pool has an unknown tier.   |
      |   5   |   NVMe_Extreme_Performance   |   The pool has an NVMe extreme performance tier only.   |
      |   10   |   Extreme_Performance   |   The pool has an extreme performance tier only.   |
      |   20   |   Performance   |   The pool has a performance tier only.   |
      |   30   |   Capacity   |   The pool has a capacity tier only.   |
      |   100   |   Multi_Tier   |   The pool has multiple tiers.   |
    enum: [0,5,10,20,30,100]
  PoolUnitOpStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      This must be merge of operational statuses of all classes derived from poolUnit.<br> Some statuses are applicable for all poolUnit classes, the other are specific for certain subclasses.<br> @author Stanislav Samolenkov

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |      |
      |   1   |   Other   |      |
      |   2   |   OK   |      |
      |   3   |   Degraded   |      |
      |   4   |   Stressed   |      |
      |   5   |   Predictive_Failure   |      |
      |   6   |   Error   |      |
      |   7   |   Non_Recoverable_Error   |      |
      |   8   |   Starting   |      |
      |   9   |   Stopping   |      |
      |   10   |   Stopped   |      |
      |   11   |   In_Service   |      |
      |   12   |   No_Contact   |      |
      |   13   |   Lost_Communication   |      |
      |   14   |   Aborted   |      |
      |   15   |   Dormant   |      |
      |   16   |   Supporting_Entity_in_Error   |      |
      |   17   |   Completed   |      |
      |   18   |   Power_Mode   |      |
      |   19   |   Online   |      |
      |   20   |   Available   |      |
      |   21   |   Offline   |      |
      |   22   |   Available_Connection_Invalid   |      |
      |   23   |   Available_Restore_Possible   |      |
      |   32,768   |   Inconsistency_Detected   |      |
      |   32,769   |   No_Backend_Object   |      |
      |   32,770   |   Under_Construction   |      |
    enum: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,32768,32769,32770]
  PoolUnitTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   RAID_Group   |      |
      |   2   |   Virtual_Disk   |      |
    enum: [1,2]
  PortRepCapabilityEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Port replication capability.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Sync_Replication   |   This port can be used for sync replication.   |
      |   1   |   RecoverPoint   |   This port can be used for RecoverPoint.   |
    enum: [0,1]
  ProductTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   VNXe   |      |
      |   1   |   VNX   |      |
      |   3   |   CX4   |      |
      |   4   |   vVNX   |      |
    enum: [0,1,3,4]
  ProxyProtocolEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Proxy server protocols.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Http   |   Support proxy protocol is http.   |
      |   1   |   Socks   |   Support proxy protocol is socks.   |
    enum: [0,1]
  PublicKeyAlgoTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Cryptographic algorithm used to generate the public key.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   RSA   |   RSA algorithm.   |
      |   2   |   DSA   |   Digital Signature Algorithm (DSA).   |
      |   3   |   ECDSA   |   Elliptic Curve Digital Sigature Algorithm (ECDSA).   |
      |   99   |   Unknown   |   Unknown algorithm.   |
    enum: [1,2,3,99]
  QOSBurstDurationEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Burst Duration for the Storage Profile.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   one_minute   |      |
      |   1   |   three_minutes   |      |
      |   2   |   five_minutes   |      |
    enum: [0,1,2]
  QOSLimitTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Limit Type for the Storage Profile.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Density_Per_GB   |      |
      |   1   |   Absolute   |      |
    enum: [0,1]
  QOSLimitUsageEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Limit Usage for the Storage Profile.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Maximum_Rate   |      |
      |   1   |   Maximum_Bandwidth   |      |
      |   2   |   Both   |      |
    enum: [0,1,2]
  QuotaPolicyEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      A quota policy value represents a policy how drive usage (used by a user or within a quota tree) is calculated.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Blocks   |   Calculates drive usage in terms of file system blocks (8 KB units)<br> and the usage of all files including directories and symbolic links. With<br> this policy, any operation resulting in allocation of blocks or removal of<br> blocks such as creating, expanding, or deleting a directory; writing or<br> deleting files; or creating or deleting symbolic links changes block usage.<br> <br><br> Note: When using the blocks policy, the user can create a sparse file whose<br> size is large (more than the limit), but that actually uses few blocks on the drive.   |
      |   0   |   File_Size   |   Calculates drive usage only in terms of logical file sizes, ignoring directory<br> sizes and symbolic links. Use this policy where file sizes are critical to<br> quotas, such as where user usage is based on the size of the files created,<br> and where sizes or their sum exceeding the limit is unacceptable. This policy<br> is recommended in CIFS environments. With this policy , block usage depends<br> solely on the number of bytes added to or removed from the file. Usage depends<br> only on changes to a regular file. Directories and symbolic links are not considered.   |
    enum: [1,0]
  QuotaStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      A QuotaStateEnum value represents a state of the quota record (either user quota or tree quota) period.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   OK   |   No quota limits are exceeded.   |
      |   1   |   Soft_Exceeded   |   Soft limit is exceeded, and grace period is not expired yet.   |
      |   2   |   Soft_Exceeded_And_Expired   |   Soft limit is exceeded, and grace period is expired.   |
      |   3   |   Hard_Exceeded   |   Hard limit is exceeded.   |
      |   4   |   Unlimited   |   Grace Period Unlimited.   |
    enum: [0,1,2,3,4]
  RaidGroupOpStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Now raidGroup does not have operational statuses. Enum exists for compatibility with base class poolUnit.<br> @author Stanislav Samolenkov

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |      |
      |   1   |   Other   |      |
      |   2   |   OK   |      |
      |   3   |   Degraded   |      |
      |   4   |   Stressed   |      |
      |   5   |   Predictive_Failure   |      |
      |   6   |   Error   |      |
      |   7   |   Non_Recoverable_Error   |      |
      |   8   |   Starting   |      |
      |   9   |   Stopping   |      |
      |   10   |   Stopped   |      |
      |   11   |   In_Service   |      |
      |   12   |   No_Contact   |      |
      |   13   |   Lost_Communication   |      |
      |   14   |   Aborted   |      |
      |   15   |   Dormant   |      |
      |   16   |   Supporting_Entity_in_Error   |      |
      |   17   |   Completed   |      |
      |   18   |   Power_Mode   |      |
    enum: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]
  RaidStripeWidthEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      This enum provides a set of choices for RAID group stripe widths,<br>  including parity or mirror disks.<br>  <br><br>  For example, a stripe width of 5 for RAID5 specifies a 4+1 RAID5 configuration.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   BestFit   |   BestFir value is used in automatic selection of stripe configuration.   |
      |   2   |   _2   |   A 2 disk group, usable in RAID10 1+1 configuration.   |
      |   4   |   _4   |   A 4 disk group, usable in RAID10 2+2 configuration.   |
      |   5   |   _5   |   A 5 disk group, usable in RAID5 4+1 configuration.   |
      |   6   |   _6   |   A 6 disk group, usable in RAID6 4+2 and RAID10 3+3 configurations.   |
      |   8   |   _8   |   A 8 disk group, usable in RAID6 6+2 and RAID10 4+4 configurations.   |
      |   9   |   _9   |   A 9 disk group, usable in RAID5 8+1 configuration.   |
      |   10   |   _10   |   A 10 disk group, usable in RAID6 8+2 and RAID10 5+5 configurations.   |
      |   12   |   _12   |   A 12 disk group, usable in RAID6 10+2 and RAID10 6+6 configurations.   |
      |   13   |   _13   |   A 13 disk group, usable in RAID5 12+1 configuration.   |
      |   14   |   _14   |   A 14 disk group, usable in RAID6 12+2 configuration.   |
      |   16   |   _16   |   raid strip width including parity disks, can be used in RAID6 14+2 configuration.   |
    enum: [0,2,4,5,6,8,9,10,12,13,14,16]
  RaidTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      RAID group types or RAID levels.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   None. @engdocs VNX value 0 is "INVALID"   |
      |   1   |   RAID5   |   RAID 5 has one parity disk. It provides best performance and space efficiency. RAID 5 groups provide protection for single disk faults and RAID5 is vulnerable to double disk fault. The preferred stripe width configurations are 4+1 and 8+1.   |
      |   2   |   RAID0   |   RAID 0 is a striping RAID. No parity or mirroring protection used. RAID 0 is not used in the storage system. @engdocs VNX value 4.   |
      |   3   |   RAID1   |   RAID 1 provides mirroring protection. RAID 1 is used only to create RAID groups for FAST Cache.   |
      |   4   |   RAID3   |   RAID 3 is not used in the storage system. @engdocs VNX value 5   |
      |   7   |   RAID10   |   RAID 1/0 is mixture of striping and mirroring. It has a number of parity disks equal to half of the disks in the RAID group. The best for heavy transactional workloads with random writes. The preferred stripe width configuration is 4+4.   |
      |   10   |   RAID6   |   RAID 6 uses two disks for parity, it's mostly used with NL-SAS disks and read intensive workloads, for archives and backups. Two disks in the RAID group may fail simultaneously without data loss. The preferred stripe width configurations are 8+2 and 14+2.   |
      |   12   |   Mixed   |   (Applies to pool objects only.) Indicates that RAID groups in a pool have different RAID levels. Do not use this value in Create or Modify requests.   |
      |   48,879   |   Automatic   |   Automatic is a valid value for create/modify requests. Indicates that the default RAID level will be used in pool's Create and Modify requests for the specified TierType. E.g. for SAS disk type (performance tier) RAID5, for NL-SAS disk type (capacity tier) RAID6. You can obtain the default RAID levels by querying the storageTier objects.   |
    enum: [0,1,2,3,4,7,10,12,48879]
  RebootPrivilegeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Reboot for a time change is required only if the time shift exceeds a<br>  threshold of 1000 seconds.<br><br>  If a reboot is required, and allowed, on a single SP system or a system<br>  with only one SP operating, then clients will be unable to access data<br>  during the reboot.<br> <br>  @engdocs<br>  There is another OSLS value in the iteration (Not_Initialized=255) that is not<br>  exposed to users but only expose to engineering.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   No_Reboot_Allowed   |   Set time or NTP server if possible without a reboot.   |
      |   1   |   Reboot_Allowed   |   Set time or NTP server if possible; reboot if needed, but do not allow data unavailability.   |
      |   2   |   DU_Allowed   |   Set time or NTP server if possible; reboot if needed, even if this will cause data unavailability.   |
    enum: [0,1,2]
  RecallPolicyEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Represents the recall policy

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Full   |   Recalls the whole file to Unity on read request before the data is returned   |
      |   1   |   PassThrough   |   Retrieves data without recalling the data to Unity   |
      |   2   |   Partial   |   Recalls only the blocks required to satisfy the client read request.   |
      |   3   |   None   |   Specifies no override   |
    enum: [0,1,2,3]
  RecallPolicyOnDeleteEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Represents the policy about how to handle the remote data when deleting a DHSM connection.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Yes   |   Migrates the files back to the Unity before the connection is removed   |
      |   1   |   No   |   Deletes the connection without checking for stub files that depend on the connection   |
      |   2   |   Fail   |   Scans the file system for stub files that depend on the connection and fails on the first one.   |
    enum: [0,1,2]
  RemoteObjectTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Type of replicated or imported remote object available locally.<br> .

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   lun   |      |
      |   1   |   filesystem   |      |
      |   2   |   consistencyGroup   |      |
      |   3   |   nasServer   |      |
    enum: [0,1,2,3]
  RemoteSyslogFacilityTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Remote syslog facility types.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Kernel_Messages   |   Kernel Messages   |
      |   1   |   User_level_Messages   |   User-Level  Messages   |
      |   5   |   Syslogd   |   Messages Generated Internally by syslogd   |
    enum: [0,1,5]
  RemoteSystemConnectionTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Type of remote system connection.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Sync   |   Synchronous replication.   |
      |   1   |   Async   |   Asynchronous replication.   |
      |   2   |   Both   |   Both Synchronous and Asynchronous replication.   |
    enum: [0,1,2]
  RemoteSystemTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Remote system platform type.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   VNXe   |   VNXe type remote system.   |
      |   1   |   VNX   |   VNX type remote system.   |
      |   99   |   Unknown   |   Unknown.   |
    enum: [0,1,99]
  ReplicationCapabilityEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Remote system connection capability

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Sync   |   Synchronous replication connection   |
      |   1   |   Async   |   Asynchronous replication connection   |
      |   2   |   Both   |   Synchronous and Asynchronous replication connection   |
      |   3   |   None   |   No regular replication connection   |
    enum: [0,1,2,3]
  ReplicationElementTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Replication element type.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   lun   |   LUN   |
      |   1   |   filesystem   |   File system   |
    enum: [0,1]
  ReplicationEndpointResourceTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Replication session end-point storage resource type.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   filesystem   |   File system.   |
      |   2   |   consistencyGroup   |   Consistency group.   |
      |   3   |   vmwarefs   |   VMware (NFS).   |
      |   4   |   vmwareiscsi   |   VMware (VMFS).   |
      |   8   |   lun   |   LUN.   |
      |   10   |   nasServer   |   NAS Server   |
    enum: [1,2,3,4,8,10]
  ReplicationFailbackForceDataLossChoiceEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Types of replication session failback force data choice.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   Fail the operation if data both ends of the replication have been read/write while the session was stopped.   |
      |   1   |   Discard_Destination_Changes   |   Discard writes to the destination since the replication stopped, and resync from the source.   |
      |   2   |   Discard_Source_Changes   |   Discard writes to the source since the replication stopped, and resync from the destination.   |
    enum: [0,1,2]
  ReplicationOpStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Status of replication session end point.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Unknown.   |
      |   1   |   Other   |   Other.   |
      |   2   |   OK   |   OK.   |
      |   7   |   Non_Recoverable_Error   |   Non-recoverable error.   |
      |   13   |   Lost_Communication   |   Lost communication between source and destination end of the session.   |
      |   33,792   |   Failed_Over_with_Sync   |   Planned failover state - Production access from destination site.   |
      |   33,793   |   Failed_Over   |   DR Failed over - Production access from destination site.   |
      |   33,794   |   Manual_Syncing   |   Sync in-progress for a manual sync session.   |
      |   33,795   |   Paused   |   Session is in paused state.   |
      |   33,796   |   Idle   |   Session is idle.   |
      |   33,797   |   Auto_Sync_Configured   |   Sync in-progress for auto sync session.   |
      |   33,803   |   Destination_Extend_Failed_Not_Syncing   |   Destination resource extend failed, session is not syncing.   |
      |   33,804   |   Destination_Extend_In_Progress   |   Destination resource extend in-progress.   |
      |   33,805   |   Active   |   Replication session is active.   |
      |   33,806   |   Lost_Sync_Communication   |   Synchronous replication connection is down.   |
      |   33,807   |   Destination_Pool_Out_Of_Space   |   Destination resource related pool is out of space.   |
      |   33,809   |   Syncing   |   Replication session is syncing.   |
      |   34,792   |   Failed_Over_with_Sync_Mixed   |   Planned failover state Mixed - Production access from destination site.   |
      |   34,793   |   Failed_Over_Mixed   |   DR Failed over Mixed - Production access from destination site.   |
      |   34,794   |   Manual_Syncing_Mixed   |   Sync in-progress Mixed for a manual sync session.   |
      |   34,795   |   Paused_Mixed   |   Session is in paused mixed state.   |
      |   34,796   |   Idle_Mixed   |   Session is idle mixed.   |
      |   34,797   |   Auto_Sync_Configured_Mixed   |   Sync in-progress for auto sync session.   |
      |   34,798   |   Hibernated   |   Source or destination is in hibernated state.   |
      |   34,799   |   Zero_Bandwidth_Configured   |   Data transfer suspended due to zero bandwidth configured.   |
      |   34,800   |   Source_VDM_Performance_Degraded   |   Performance of source VDM is degraded.   |
    enum: [0,1,2,7,13,33792,33793,33794,33795,33796,33797,33803,33804,33805,33806,33807,33809,34792,34793,34794,34795,34796,34797,34798,34799,34800]
  ReplicationPolicyEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates the status of the NAS server object operating as a replication destination.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Not_Replicated   |   NAS object is not replicated over to the destination.   |
      |   1   |   Replicated   |   NAS object is automatically synchronized over to the replication destination.<br>  Any modify or delete operations at the source will automatically be reflected on the destination.   |
      |   2   |   Overridden   |   NAS object has been manually modified or overridden on the replication destination.<br>  Modifications on the source NAS server will have no effect on the overridden object<br>  on the replication destination.   |
    enum: [0,1,2]
  ReplicationSessionNetworkStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Replication session network status types.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Unknown.   |
      |   1   |   Other   |   Other.   |
      |   2   |   OK   |   OK.   |
      |   5   |   Lost_Communication   |   Lost communication to remote site.   |
      |   10   |   Lost_Sync_Communication   |   Lost synchronous connection communication.   |
      |   18   |   Zero_Bandwidth_Configured   |   Data transfer is suspended because bandwidth is set to 0   |
    enum: [0,1,2,5,10,18]
  ReplicationSessionReplicationRoleEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Source   |   Source side of a remote replication   |
      |   1   |   Destination   |   Destination side of a remote replication   |
      |   2   |   Loopback   |   Session is between resources from the same SP on the local array   |
      |   3   |   Local   |   Session is between resources from different SPs on the local array   |
      |   4   |   Unknown   |   Session role unknown   |
    enum: [0,1,2,3,4]
  ReplicationSessionStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Status of replication session end point.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Unknown.   |
      |   1   |   Other   |   Other.   |
      |   2   |   OK   |   OK.   |
      |   3   |   Paused   |   Paused.   |
      |   4   |   Fatal_Replication_Issue   |   Fatal issue.   |
      |   5   |   Lost_Communication   |   Lost communication to remote site.   |
      |   6   |   Failed_Over   |   Failed over.   |
      |   7   |   Failed_Over_With_Sync   |   Planned failed over.   |
      |   8   |   Destination_Extend_Not_Syncing   |   Destination resource extension failed.   |
      |   9   |   Destination_Extend_In_Progress   |   Destination pool full or destination resource is extending.   |
      |   10   |   Lost_Sync_Communication   |   Lost synchronous replication connection.   |
      |   11   |   Destination_Pool_Out_Of_Space   |   Destination pool out of space.   |
      |   16   |   Hibernated   |   Session is hibernated.   |
    enum: [0,1,2,3,4,5,6,7,8,9,10,11,16]
  ReplicationSessionSyncStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Status of replication session scheduler.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Manual_Syncing   |   Sync in-proress for manual sync session.   |
      |   1   |   Auto_Syncing   |   RPO sync in-progress for auto sync session.   |
      |   2   |   Idle   |   Session is idle.   |
      |   100   |   Unknown   |   Unknown.   |
      |   101   |   Out_Of_Sync   |   Destination out of sync.   |
      |   102   |   In_Sync   |   Both source and target are in sync.   |
      |   103   |   Consistent   |   Destination is consistent with source data.   |
      |   104   |   Syncing   |   Actively synchronizing.   |
      |   105   |   Inconsistent   |   Destination is not consistent with source.   |
    enum: [0,1,2,100,101,102,103,104,105]
  ReplicationTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Replication type for replication session<br>  Valid values are: None, Local, Remote and Mixed

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   No replication session exists for the resource   |
      |   1   |   Local   |   Async Replication session between resources from local system exists for the resource   |
      |   2   |   Remote   |   Replication session between resources on local system and remote system exists for the resource   |
      |   3   |   Mixed   |   More than one async replication session involved resources on local system   |
    enum: [0,1,2,3]
  ReplicaTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Defines the replica type of VVol. It can be base VVol, snapshot or fast-clone.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Base   |   Base (primary) VVol.   |
      |   1   |   PreSnapshot   |   Prepared snapshot VVol.   |
      |   2   |   Snapshot   |   Snapshot VVol.   |
      |   3   |   FastClone   |   Fast-clone VVol.   |
    enum: [0,1,2,3]
  ResourcePoolFullPolicyEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Delete_All_Snaps   |   Opt to delete all snaps to free up pool space.   |
      |   1   |   Fail_Writes   |   Opt to fail writes.   |
    enum: [0,1]
  RoleMappingTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      The type of role mapping.  This may be localuser, ldapuser, or<br>  ldapgroup.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   ldapgroup   |   LDAP Group role.   |
      |   1   |   ldapuser   |   LDAP User role.   |
      |   2   |   localuser   |   Local User role.   |
      |   3   |   unknown   |   Unknown role type.   |
    enum: [0,1,2,3]
  SasStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible SAS port statuses.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   SAS port status is unknown.   |
      |   2   |   OK   |   SAS port status is OK.   |
      |   3   |   Degraded   |   SAS port status is degrated.   |
      |   32,784   |   Link_Up   |   SAS port status is link up.   |
      |   32,785   |   Link_Down   |   SAS port status is link down.   |
      |   32,816   |   Maximum_Enclosures_Exceeded   |   SAS port status is maximum enclosures exceeded.   |
      |   33,024   |   Uninitialized   |   SAS port status is uninitialized.   |
      |   33,025   |   Empty   |   SAS port status is empty.   |
      |   33,026   |   Missing   |   SAS port status is missing.   |
      |   33,027   |   Faulted   |   SAS port status is faulted.   |
      |   33,028   |   Unavailable   |   SAS port status is unavailable.   |
      |   33,029   |   Disabled   |   SAS port status is disabled.   |
      |   33,280   |   SFP_Not_Present   |   SAS port status is SFP not present.   |
      |   33,281   |   Module_Not_Present   |   SAS port status is module not present.   |
      |   33,282   |   Port_Not_Present   |   SAS port status is port not present.   |
      |   33,283   |   Missing_SFP   |   SAS port status is missing sfp.   |
      |   33,284   |   Missing_Module   |   SAS port status is missing module.   |
      |   33,285   |   Incorrect_SFP_Type   |   SAS port status is incorrect SFP type.   |
      |   33,286   |   Incorrect_Module   |   SAS port status is incorrect module.   |
      |   33,287   |   SFP_Read_Error   |   SAS port status is SFP read error.   |
      |   33,288   |   Unsupported_SFP   |   SAS port status is unsupported SFP.   |
      |   33,289   |   Module_Read_Error   |   SAS port status is module read error.   |
      |   33,290   |   Exceeded_Maximum_Limits   |   SAS port status is exceeded maximum limits.   |
      |   33,291   |   Module_Powered_Off   |   SAS port status is module powered off.   |
      |   33,292   |   Unsupported_Module   |   SAS port status is unsupported module.   |
      |   33,293   |   Database_Read_Error   |   SAS port status is database read error.   |
      |   33,294   |   Faulted_SFP   |   SAS port status is faulted SFP.   |
      |   33,295   |   Hardware_Fault   |   SAS port status is hardware fault.   |
      |   33,296   |   Disabled_User_Initiated   |   SAS port status is disabled user initiated.   |
      |   33,297   |   Disabled_Encryption_Required   |   SAS port status is disabled encryption required.   |
      |   33,298   |   Disabled_Hardware_Fault   |   SAS port status is disabled hardware fault.   |
    enum: [0,2,3,32784,32785,32816,33024,33025,33026,33027,33028,33029,33280,33281,33282,33283,33284,33285,33286,33287,33288,33289,33290,33291,33292,33293,33294,33295,33296,33297,33298]
  ScheduleTimezoneCandidatesEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Enumeration of possible schedule timezone candidates.<br><br>  @engdocs It displays all timezone candidate strings.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   10   |   UTCm1200CoordinatedUniversalTime   |   (UTC-12:00) Coordinated Universal Time   |
      |   20   |   UTCm1100MidwayNiuePagoPagoSamoa   |   (UTC-11:00) Midway, Niue, Pago Pago, Samoa   |
      |   30   |   UTCm1100CoordinatedUniversalTime   |   (UTC-11:00) Coordinated Universal Time   |
      |   40   |   UTCm1000AdakAtka   |   (UTC-10:00) Adak, Atka   |
      |   50   |   UTCm1000HonoluluJohnstonRarotongaTahiti   |   (UTC-10:00) Honolulu, Johnston, Rarotonga, Tahiti   |
      |   60   |   UTCm1000CoordinatedUniversalTime   |   (UTC-10:00) Coordinated Universal Time   |
      |   70   |   UTCm0930Marquesas   |   (UTC-09:30) Marquesas   |
      |   80   |   UTCm0930CoordinatedUniversalTime   |   (UTC-09:30) Coordinated Universal Time   |
      |   90   |   UTCm0900AlaskaJuneauMetlakatlaSitka   |   (UTC-09:00) Alaska, Juneau, Metlakatla, Sitka   |
      |   100   |   UTCm0900Gambier   |   (UTC-09:00) Gambier   |
      |   110   |   UTCm0900CoordinatedUniversalTime   |   (UTC-09:00) Coordinated Universal Time   |
      |   120   |   UTCm0800BajaNorteEnsenadaLosAngeles   |   (UTC-08:00) BajaNorte, Ensenada, Los Angeles   |
      |   130   |   UTCm0800PacificTimeUSCanada   |   (UTC-08:00) Pacific Time (US & Canada)   |
      |   140   |   UTCm0800Pitcairn   |   (UTC-08:00) Pitcairn   |
      |   150   |   UTCm0800CoordinatedUniversalTime   |   (UTC-08:00) Coordinated Universal Time   |
      |   160   |   UTCm0700BajaSurChihuahuaMazatlan   |   (UTC-07:00) BajaSur, Chihuahua, Mazatlan   |
      |   170   |   UTCm0700BoiseCambridgeBayYellowknife   |   (UTC-07:00) Boise, Cambridge Bay, Yellowknife   |
      |   180   |   UTCm0700MountainTimeUSCanada   |   (UTC-07:00) Mountain Time (US & Canada)   |
      |   190   |   UTCm0700CrestonDawsonCreekHermosilloPhoenix   |   (UTC-07:00) Creston, Dawson Creek, Hermosillo, Phoenix   |
      |   200   |   UTCm0700CoordinatedUniversalTime   |   (UTC-07:00) Coordinated Universal Time   |
      |   210   |   UTCm0600BahiaBanderasMeridaMexicoCityMonterrey   |   (UTC-06:00) Bahia Banderas, Merida, Mexico City, Monterrey   |
      |   220   |   UTCm0600CentralTimeUSCanada   |   (UTC-06:00) Central Time (US & Canada)   |
      |   230   |   UTCm0600ChicagoMatamorosMenominee   |   (UTC-06:00) Chicago, Matamoros, Menominee   |
      |   240   |   UTCm0600EasterIsland   |   (UTC-06:00) EasterIsland   |
      |   250   |   UTCm0600ManaguaSaskatchewanTegucigalpa   |   (UTC-06:00) Managua, Saskatchewan, Tegucigalpa   |
      |   260   |   UTCm0600CoordinatedUniversalTime   |   (UTC-06:00) Coordinated Universal Time   |
      |   270   |   UTCm0500AtikokanBogotaLimaRioBranco   |   (UTC-05:00) Atikokan, Bogota, Lima, Rio Branco   |
      |   280   |   UTCm0500DetroitIqaluitMarengoNewYorkVincennes   |   (UTC-05:00) Detroit, Iqaluit, Marengo, New York, Vincennes   |
      |   290   |   UTCm0500EasternTimeUSCanada   |   (UTC-05:00) Eastern Time (US & Canada)   |
      |   300   |   UTCm0500Havana   |   (UTC-05:00) Havana   |
      |   310   |   UTCm0500CoordinatedUniversalTime   |   (UTC-05:00) Coordinated Universal Time   |
      |   320   |   UTCm0400Asuncion   |   (UTC-04:00) Asuncion   |
      |   330   |   UTCm0400AtlanticBermudaHalifaxMoncton   |   (UTC-04:00) Atlantic, Bermuda, Halifax, Moncton   |
      |   340   |   UTCm0400CampoGrandeCuiaba   |   (UTC-04:00) Campo Grande, Cuiaba   |
      |   350   |   UTCm0400Caracas   |   (UTC-04:00) Caracas   |
      |   360   |   UTCm0400ContinentalPalmerSantiago   |   (UTC-04:00) Continental, Palmer, Santiago   |
      |   370   |   UTCm0400LaPazManausSantoDomingoWest   |   (UTC-04:00) La Paz, Manaus, Santo Domingo, West   |
      |   380   |   UTCm0400CoordinatedUniversalTime   |   (UTC-04:00) Coordinated Universal Time   |
      |   390   |   UTCm0330NewfoundlandStJohns   |   (UTC-03:30) Newfoundland, St Johns   |
      |   400   |   UTCm0330CoordinatedUniversalTime   |   (UTC-03:30) Coordinated Universal Time   |
      |   410   |   UTCm0300AraguainaBahiaBuenosAiresMontevideo   |   (UTC-03:00) Araguaina, Bahia, Buenos Aires, Montevideo   |
      |   420   |   UTCm0300EastSaoPaulo   |   (UTC-03:00) East, Sao Paulo   |
      |   430   |   UTCm0300Godthab   |   (UTC-03:00) Godthab   |
      |   440   |   UTCm0300Miquelon   |   (UTC-03:00) Miquelon   |
      |   450   |   UTCm0300CoordinatedUniversalTime   |   (UTC-03:00) Coordinated Universal Time   |
      |   460   |   UTCm0200DeNoronhaNoronhaSouthGeorgia   |   (UTC-02:00) DeNoronha, Noronha, South Georgia   |
      |   470   |   UTCm0200CoordinatedUniversalTime   |   (UTC-02:00) Coordinated Universal Time   |
      |   480   |   UTCm0100AzoresScoresbysund   |   (UTC-01:00) Azores, Scoresbysund   |
      |   490   |   UTCm0100CapeVerde   |   (UTC-01:00) Cape Verde   |
      |   500   |   UTCm0100CoordinatedUniversalTime   |   (UTC-01:00) Coordinated Universal Time   |
      |   510   |   UTCp0000CasablancaElAaiun   |   (UTC+00:00) Casablanca, El Aaiun   |
      |   520   |   UTCp0000DublinLisbonLondon   |   (UTC+00:00) Dublin, Lisbon, London   |
      |   530   |   UTCp0000LomeMonroviaReykjavikSaoTome   |   (UTC+00:00) Lome, Monrovia, Reykjavik, Sao Tome   |
      |   540   |   UTCp0000Troll   |   (UTC+00:00) Troll   |
      |   550   |   UTCp0000CoordinatedUniversalTime   |   (UTC+00:00) Coordinated Universal Time   |
      |   560   |   UTCp0100AlgiersLagosNdjamenaNiameyTunis   |   (UTC+01:00) Algiers, Lagos, Ndjamena, Niamey, Tunis   |
      |   570   |   UTCp0100AmsterdamBerlinRomeStockholmVienna   |   (UTC+01:00) Amsterdam, Berlin, Rome, Stockholm, Vienna   |
      |   580   |   UTCp0100BelgradeBratislavaBudapestLjubljanaPrague   |   (UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague   |
      |   590   |   UTCp0100BrusselsCopenhagenMadridParis   |   (UTC+01:00) Brussels, Copenhagen, Madrid, Paris   |
      |   600   |   UTCp0100SarajevoSkopjeWarsawZagreb   |   (UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb   |
      |   610   |   UTCp0100CoordinatedUniversalTime   |   (UTC+01:00) Coordinated Universal Time   |
      |   620   |   UTCp0200Amman   |   (UTC+02:00) Amman   |
      |   630   |   UTCp0200AthensBucharest   |   (UTC+02:00) Athens, Bucharest   |
      |   640   |   UTCp0200Beirut   |   (UTC+02:00) Beirut   |
      |   650   |   UTCp0200ChisinauTiraspol   |   (UTC+02:00) Chisinau, Tiraspol   |
      |   660   |   UTCp0200Damascus   |   (UTC+02:00) Damascus   |
      |   670   |   UTCp0200GazaHebron   |   (UTC+02:00) Gaza, Hebron   |
      |   680   |   UTCp0200HarareKaliningradTripoliWindhoek   |   (UTC+02:00) Harare, Kaliningrad, Tripoli, Windhoek   |
      |   690   |   UTCp0200HelsinkiKievRigaSofiaTallinnVilnius   |   (UTC+02:00) Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius   |
      |   700   |   UTCp0200JerusalemTelAviv   |   (UTC+02:00) Jerusalem, Tel Aviv   |
      |   710   |   UTCp0200CoordinatedUniversalTime   |   (UTC+02:00) Coordinated Universal Time   |
      |   720   |   UTCp0300AsmeraJubaKampalaMinskMoscow   |   (UTC+03:00) Asmera, Juba, Kampala, Minsk, Moscow   |
      |   730   |   UTCp0300BaghdadIstanbulKuwaitRiyadh   |   (UTC+03:00) Baghdad, Istanbul, Kuwait, Riyadh   |
      |   740   |   UTCp0300CoordinatedUniversalTime   |   (UTC+03:00) Coordinated Universal Time   |
      |   750   |   UTCp0330Tehran   |   (UTC+03:30) Tehran   |
      |   760   |   UTCp0400BakuMuscatSamaraTbilisiYerevan   |   (UTC+04:00) Baku, Muscat, Samara, Tbilisi, Yerevan   |
      |   770   |   UTCp0400CoordinatedUniversalTime   |   (UTC+04:00) Coordinated Universal Time   |
      |   780   |   UTCp0430Kabul   |   (UTC+04:30) Kabul   |
      |   790   |   UTCp0500AshgabatKarachiQyzylordaTashkent   |   (UTC+05:00) Ashgabat, Karachi, Qyzylorda, Tashkent   |
      |   800   |   UTCp0500CoordinatedUniversalTime   |   (UTC+05:00) Coordinated Universal Time   |
      |   810   |   UTCp0530ChennaiKolkataMumbai   |   (UTC+05:30) Chennai, Kolkata, Mumbai   |
      |   820   |   UTCp0530CoordinatedUniversalTime   |   (UTC+05:30) Coordinated Universal Time   |
      |   830   |   UTCp0545Katmandu   |   (UTC+05:45) Katmandu   |
      |   840   |   UTCp0545CoordinatedUniversalTime   |   (UTC+05:45) Coordinated Universal Time   |
      |   850   |   UTCp0600AlmatyBishkekChagosDhakaOmsk   |   (UTC+06:00) Almaty, Bishkek, Chagos, Dhaka, Omsk   |
      |   860   |   UTCp0600CoordinatedUniversalTime   |   (UTC+06:00) Coordinated Universal Time   |
      |   870   |   UTCp0630CocosRangoon   |   (UTC+06:30) Cocos, Rangoon   |
      |   880   |   UTCp0630CoordinatedUniversalTime   |   (UTC+06:30) Coordinated Universal Time   |
      |   890   |   UTCp0700BangkokHoChiMinhJakartaNovokuznetsk   |   (UTC+07:00) Bangkok, Ho Chi Minh, Jakarta, Novokuznetsk   |
      |   900   |   UTCp0700Hovd   |   (UTC+07:00) Hovd   |
      |   910   |   UTCp0700CoordinatedUniversalTime   |   (UTC+07:00) Coordinated Universal Time   |
      |   920   |   UTCp0800BeijingChongqingHongKongUrumqi   |   (UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi   |
      |   930   |   UTCp0800BruneiIrkutskKualaLumpurManila   |   (UTC+08:00) Brunei, Irkutsk, Kuala Lumpur, Manila   |
      |   940   |   UTCp0800PerthSingaporeTaipeiUlaanbaatar   |   (UTC+08:00) Perth, Singapore, Taipei, Ulaanbaatar   |
      |   950   |   UTCp0800CoordinatedUniversalTime   |   (UTC+08:00) Coordinated Universal Time   |
      |   960   |   UTCp0830Pyongyang   |   (UTC+08:30) Pyongyang   |
      |   970   |   UTCp0845Eucla   |   (UTC+08:45) Eucla   |
      |   980   |   UTCp0845CoordinatedUniversalTime   |   (UTC+08:45) Coordinated Universal Time   |
      |   990   |   UTCp0900ChitaSeoulTokyoYakutsk   |   (UTC+09:00) Chita, Seoul, Tokyo, Yakutsk   |
      |   1,000   |   UTCp0900CoordinatedUniversalTime   |   (UTC+09:00) Coordinated Universal Time   |
      |   1,010   |   UTCp0930AdelaideBrokenHillYancowinna   |   (UTC+09:30) Adelaide, Broken Hill, Yancowinna   |
      |   1,020   |   UTCp0930Darwin   |   (UTC+09:30) Darwin   |
      |   1,030   |   UTCp0930CoordinatedUniversalTime   |   (UTC+09:30) Coordinated Universal Time   |
      |   1,040   |   UTCp1000BrisbaneGuamPortMoresbySaipanVladivostok   |   (UTC+10:00) Brisbane, Guam, Port Moresby, Saipan, Vladivostok   |
      |   1,050   |   UTCp1000CanberraHobartMelbourneSydney   |   (UTC+10:00) Canberra, Hobart, Melbourne, Sydney   |
      |   1,060   |   UTCp1000CoordinatedUniversalTime   |   (UTC+10:00) Coordinated Universal Time   |
      |   1,070   |   UTCp1030LHILordHowe   |   (UTC+10:30) LHI, Lord Howe   |
      |   1,080   |   UTCp1030CoordinatedUniversalTime   |   (UTC+10:30) Coordinated Universal Time   |
      |   1,090   |   UTCp1100MagadanNorfolkSakhalinSolomon   |   (UTC+11:00) Magadan, Norfolk, Sakhalin, Solomon   |
      |   1,100   |   UTCp1100CoordinatedUniversalTime   |   (UTC+11:00) Coordinated Universal Time   |
      |   1,110   |   UTCp1200AnadyrFunafutiKamchatka   |   (UTC+12:00) Anadyr, Funafuti, Kamchatka   |
      |   1,120   |   UTCp1200AucklandMcMurdoSouthPole   |   (UTC+12:00) Auckland, McMurdo, South Pole   |
      |   1,130   |   UTCp1200Fiji   |   (UTC+12:00) Fiji   |
      |   1,140   |   UTCp1200CoordinatedUniversalTime   |   (UTC+12:00) Coordinated Universal Time   |
      |   1,150   |   UTCp1245Chatham   |   (UTC+12:45) Chatham   |
      |   1,160   |   UTCp1245CoordinatedUniversalTime   |   (UTC+12:45) Coordinated Universal Time   |
      |   1,170   |   UTCp1300Apia   |   (UTC+13:00) Apia   |
      |   1,180   |   UTCp1300EnderburyFakaofoTongatapu   |   (UTC+13:00) Enderbury, Fakaofo, Tongatapu   |
      |   1,190   |   UTCp1300CoordinatedUniversalTime   |   (UTC+13:00) Coordinated Universal Time   |
      |   1,200   |   UTCp1400Kiritimati   |   (UTC+14:00) Kiritimati   |
      |   1,210   |   UTCp1400CoordinatedUniversalTime   |   (UTC+14:00) Coordinated Universal Time   |
      |   1,220   |   UTCLegacy   |   UTC Legacy   |
    enum: [10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,480,490,500,510,520,530,540,550,560,570,580,590,600,610,620,630,640,650,660,670,680,690,700,710,720,730,740,750,760,770,780,790,800,810,820,830,840,850,860,870,880,890,900,910,920,930,940,950,960,970,980,990,1000,1010,1020,1030,1040,1050,1060,1070,1080,1090,1100,1110,1120,1130,1140,1150,1160,1170,1180,1190,1200,1210,1220]
  ScheduleTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Enumeration of possible snapshot schedule types.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   N_HOURS_AT_MM   |   Snap every &lt;interval&gt; hours, at &lt;minutes&gt; past the hour. Supported parameters: interval (required), minutes (optional, default 0)   |
      |   1   |   DAY_AT_HHMM   |   Specify a list of &lt;hour[,...]&gt; to snap one or more times each day at &lt;minutes&gt; past the hour.  Supported parameters: hours (at least one required), minutes (optional).   |
      |   2   |   N_DAYS_AT_HHMM   |   Snap every &lt;interval&gt; days at the time &lt;hours&gt;:&lt;minutes&gt;. Supported Parameters: interval (required), hours (optional, exactly one), minutes (optional).   |
      |   3   |   SELDAYS_AT_HHMM   |   Snap on the selected &lt;daysOfWeek&gt;, at the time &lt;hours&gt;:&lt;minutes&gt;. Supported parameters: daysOfWeek (at least one required), hours (optional, default 0), minutes (optional, default 0)   |
      |   4   |   NTH_DAYOFMONTH_AT_HHMM   |   Snap on the selected &lt;daysOfMonth&gt;, at the time &lt;hours&gt;:&lt;minutes&gt;. Supported parameters: daysOfMonth (at least one required), hours (optional, default 0), minutes (optional, default 0).   |
      |   5   |   UNSUPPORTED   |      |
    enum: [0,1,2,3,4,5]
  ScheduleVersionEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Enumeration of snapshot schedule versions.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Legacy   |   Legacy schedule with more than two rules of type HoursList, DaysInterval or MonthDaysList.   |
      |   2   |   Simple   |   Simple schedule with two rules or less of rule type HoursInterval or WeekDaysList.   |
    enum: [1,2]
  SchemeTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      LDAP server scheme type.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Unknown LDAP scheme.   |
      |   1   |   RFC2307   |   OpenLDAP/iPlanet scheme.   |
      |   2   |   Microsoft   |   Microsoft Identity Management for UNIX (IDMU/SFU) scheme.   |
    enum: [0,1,2]
  SecuritySettingsTLSModeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      TLS Mode

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   tls_1_0   |   TLSv1.0 and above are enabled.   |
      |   1   |   tls_1_1   |   TLSv1.1 and above are enabled.   |
      |   2   |   tls_1_2   |   TLSv1.2 and above are enabled.   |
    enum: [0,1,2]
  ServiceContractStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Service contract statuses.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Active   |   Service contract is active.   |
      |   1   |   About_To_Expire   |   Service contract will expire in 90 days.   |
      |   2   |   Expired   |   Service contract has expired.   |
      |   3   |   Terminated   |   Contract is terminated.   |
      |   4   |   Pending   |   Contract is pending. The contract start time is a future time.   |
    enum: [0,1,2,3,4]
  ServiceLevelEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Service Level for the Capability Profile.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Basic   |   Basic service level.   |
      |   1   |   Bronze   |   Bronze service level.   |
      |   2   |   Silver   |   Silver service level.   |
      |   3   |   Gold   |   Gold service level.   |
      |   4   |   Platinum   |   Platinum service level.   |
    enum: [0,1,2,3,4]
  ServiceTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Types of services supported with certificate management.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   2   |   VASA_HTTP   |   HTTP for VASA VVOL.   |
      |   3   |   Mgmt_LDAP   |   LDAP for storage array administrative user authentication and authorization.   |
      |   4   |   Mgmt_KMIP   |   KMIP for remote key storage and retrieval.   |
      |   99   |   Unknown   |   Unknown service type.   |
    enum: [2,3,4,99]
  SeverityEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Severity levels for alerts.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   8   |   OK   |   OK   |
      |   7   |   DEBUG   |   Debug   |
      |   6   |   INFO   |   Information   |
      |   5   |   NOTICE   |   Notice   |
      |   4   |   WARNING   |   Warning   |
      |   3   |   ERROR   |   Error   |
      |   2   |   CRITICAL   |   Critical   |
      |   1   |   ALERT   |   Alert   |
      |   0   |   EMERGENCY   |   Emergency   |
    enum: [8,7,6,5,4,3,2,1,0]
  SFPProtocolValuesEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Supported SFP protocols.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   SFP protocol is unknown.   |
      |   1   |   FIBRE_CHANNEL   |   SFP protocol is Fibre Channel.   |
      |   2   |   Ethernet   |   SFP protocol is Ethernet.   |
      |   3   |   SAS   |   SFP protocol is SAS.   |
    enum: [0,1,2,3]
  SFPSpeedValuesEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Supported SFP speeds.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Auto   |   Auto detected SFP transmission speed.   |
      |   10   |   _10Mbps   |   10 Mbps auto detected SFP transmission speed.   |
      |   100   |   _100Mbps   |   100 Mbps SFP transmission speed.   |
      |   1,000   |   _1Gbps   |   1 Gbps SFP transmission speed.   |
      |   1,500   |   _1500Mbps   |   1500 Mbps SFP transmission speed.   |
      |   2,000   |   _2Gbps   |   2 Gbps SFP transmission speed.   |
      |   3,000   |   _3Gbps   |   3 Gbps SFP transmission speed.   |
      |   4,000   |   _4Gbps   |   4 Gbps SFP transmission speed.   |
      |   6,000   |   _6Gbps   |   6 Gbps SFP transmission speed.   |
      |   8,000   |   _8Gbps   |   8 Gbps SFP transmission speed.   |
      |   10,000   |   _10Gbps   |   10 Gbps SFP transmission speed.   |
      |   12,000   |   _12Gbps   |   12 Gbps SFP transmission speed.   |
      |   16,000   |   _16Gbps   |   16 Gbps SFP transmission speed.   |
      |   25,000   |   _25Gbps   |   25 Gbps SFP transmission speed.   |
      |   32,000   |   _32Gbps   |   32 Gbps SFP transmission speed.   |
      |   40,000   |   _40Gbps   |   40 Gbps SFP transmission speed.   |
      |   100,000   |   _100Gbps   |   100 Gbps SFP transmission speed.   |
      |   1,000,000   |   _1Tbps   |   1 Tbps SFP transmission speed.   |
    enum: [0,10,100,1000,1500,2000,3000,4000,6000,8000,10000,12000,16000,25000,32000,40000,100000,1000000]
  SFPSupportedModeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Supported SFP (the small form-factor pluggable) mode.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   SFP mode is Unknown.   |
      |   1   |   Single_Mode   |   SFP mode is SingleMode.   |
      |   2   |   Multi_Mode   |   SFP mode is MultiMode.   |
    enum: [0,1,2]
  SignatureAlgoTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Cryptographic algorithm used by the Certificate Authority (CA) to sign the certificate.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   DSA_With_SHA   |   Digital Signature Algorithm (DSA) with Signature Hash Algrothm (SHA).   |
      |   2   |   DSA_With_SHA1   |   Digital Signature Algorithm (DSA) with SHA1.   |
      |   3   |   MD5_With_RSA_Encryption   |   MD5 hash with RSA encryption.   |
      |   4   |   RIPEMD160_With_RSA   |   RIPEMD algorithm 160-bit hash with RSA encryption.   |
      |   5   |   SHA_With_RSA_Encryption   |   SHA hash with RSA encryption.   |
      |   6   |   SHA1_With_RSA_Encryption   |   SHA1 hash with RSA encryption.   |
      |   7   |   SHA224_With_RSA_Encryption   |   SHA2 224-bit hash with RSA encryption.   |
      |   8   |   SHA256_With_RSA_Encryption   |   SHA2 256-bit hash with RSA encryption.   |
      |   9   |   SHA384_With_RSA_Encryption   |   SHA2 384-bit hash with RSA encryption.   |
      |   10   |   SHA512_With_RSA_Encryption   |   SHA2 512-bit hash with RSA encryption.   |
      |   11   |   ECDSA_With_SHA1   |   Elliptic Curve Digital Sigature Algorithm (ECDSA) hash with SHA1.   |
      |   12   |   ECDSA_With_SHA224   |   ECDSA hash with SHA2 224-bit.   |
      |   13   |   ECDSA_With_SHA256   |   ECDSA hash with SHA2 256-bit.   |
      |   14   |   ECDSA_With_SHA384   |   ECDSA hash with SHA2 384-bit.   |
      |   15   |   ECDSA_With_SHA512   |   ECDSA hash with SHA2 512-bit.   |
      |   99   |   Unknown   |   Unknown algorithm.   |
    enum: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,99]
  SmtpTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Default   |      |
      |   1   |   PhoneHome   |      |
    enum: [0,1]
  SnapAccessLevelEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Indicates a type of access a host has to a snapshot.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   ReadOnly   |   Allow read-only access to the snapshot for a host.   |
      |   1   |   ReadWrite   |   Allow read/write access to the snapshot for a host.   |
      |   2   |   ReadOnlyPartial   |   (Applies to consistency group snapshots only.) Indicates that host has read-only access to some individual snapshots in a consistency group snapshot. Do not use this value in Modify requests.   |
      |   3   |   ReadWritePartial   |   (Applies to consistency group snapshots only.) Indicates that host has read/write access to some individual snapshots in a consistency group snapshot. Do not use this value in Modify requests.   |
      |   4   |   Mixed   |   (Applies to consistency group snapshots only.) Indicates that host has read-only and read/write access to some individual snapshots in a consistency group snapshot. Do not use this value in Modify requests.   |
    enum: [0,1,2,3,4]
  SnapCreatorTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Enumeration of possible snapshot creator types.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   Not specified.   |
      |   1   |   Scheduled   |   Created by a snapshot schedule.   |
      |   2   |   User_Custom   |   Created by a user with a custom name.   |
      |   3   |   User_Default   |   Created by a user with a default name.   |
      |   4   |   External_VSS   |   Created by Windows Volume Shadow Copy Service (VSS) to obtain an application consistent snapshot.   |
      |   5   |   External_NDMP   |   Created by an NDMP backup operation.   |
      |   6   |   External_Restore   |   Created as a backup snapshot before a snapshot restore.   |
      |   8   |   External_Replication_Manager   |   Created by Replication Manager.   |
      |   9   |   Replication   |   Created by a native replication operation.   |
      |   11   |   Snap_CLI   |   Created inband by SnapCLI.   |
      |   12   |   AppSync   |   Created by AppSync.   |
    enum: [0,1,2,3,4,5,6,8,9,11,12]
  SnapReplicationStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      These are the possible replication statuses for a snapshot.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Not_Marked_For_Replication   |   Replication was not requested for this snap.   |
      |   1   |   Marked_For_Replication   |   Replication was requested for this snap and it is waiting for a replication sync.   |
      |   2   |   Replicated_On_Destination   |   This snap was replicated to the destination successfully.   |
      |   3   |   Failed_To_Replicate   |   This snap was marked for replication but failed to replicate successfully<br>  Check Alert for detailed descriptions and recommended actions.   |
      |   4   |   In_Progress   |   This snap was being transferred by replication.   |
    enum: [0,1,2,3,4]
  SnapStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Enumeration of possible snapshot states.<br><br>  @engdocs It displays snap's state, ideally it should use snap health info,<br>  but there is no health instance for snap at backend currently,<br>  so we keep a backlog (US137796) for snap health instance in future.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   2   |   Ready   |   The snaphot is operating normally.   |
      |   3   |   Faulted   |   The storage pool that the snapshot belongs to is degraded.   |
      |   6   |   Offline   |   The snapshot is not accessible possibly because the storage resource is not ready or the storage pool is full.   |
      |   7   |   Invalid   |   The snapshot has become invalid becauuse of a non recoverable error.   |
      |   8   |   Initializing   |   The snapshot is being created.   |
      |   9   |   Destroying   |   The snapshot is being deleted.   |
    enum: [2,3,6,7,8,9]
  SNMPAuthProtocolEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   No Authentication.   |
      |   1   |   MD5   |   MD5 Authentication.   |
      |   2   |   SHA   |   SHA Authentication.   |
    enum: [0,1,2]
  SNMPPrivacyProtocolEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      SNMP privacy protocols

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   No privacy protocol.   |
      |   1   |   AES   |   AES privacy protocol.   |
      |   2   |   DES   |   DES privacy protocol.   |
    enum: [0,1,2]
  SNMPVersionEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      SNMP versions

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   v1   |   Version 1.   |
      |   2   |   v2c   |   Version 2.   |
      |   3   |   v3   |   Version 3.   |
    enum: [1,2,3]
  SpaceEfficiencyEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Space Efficiency enum

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Thick   |   Thick allocation.   |
      |   1   |   Thin   |   Thin allocation.   |
    enum: [0,1]
  SpeedValuesEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Supported SAS port transmission speeds.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   3   |   _3Gbps   |   3 Gbps SAS port transmission speed.   |
      |   6   |   _6Gbps   |   6 Gbps SAS port transmission speed.   |
      |   12   |   _12Gbps   |   12 Gbps SAS port transmission speed.   |
    enum: [3,6,12]
  SPModelNameEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      All possible storageprocessor model names

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   SP300   |   Unity 300 or Unity 300F   |
      |   2   |   SP400   |   Unity 400 or Unity 400F   |
      |   3   |   SP500   |   Unity 500 or Unity 500F   |
      |   4   |   SP600   |   Unity 600 or Unity 600F   |
      |   5   |   SP350   |   Unity 350F   |
      |   6   |   SP450   |   Unity 450F   |
      |   7   |   SP550   |   Unity 550F   |
      |   8   |   SP650   |   Unity 650F   |
      |   9   |   VSA2Core   |   UnityVSA 2Core   |
      |   10   |   VSA12Core   |   UnityVSA 12Core   |
      |   11   |   SP380   |   Unity 380 or Unity 380F   |
      |   12   |   SP480   |   Unity 480 or Unity 480F   |
      |   13   |   SP680   |   Unity 680 or Unity 680F   |
      |   14   |   SP880   |   Unity 880 or Unity 880F   |
    enum: [1,2,3,4,5,6,7,8,9,10,11,12,13,14]
  SsdTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible ssd types.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |      |
      |   1   |   Sata   |      |
      |   2   |   Nvme   |      |
    enum: [0,1,2]
  SSLMethodEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      SSL protocols used in smtp server.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   SSL protocol: None.   |
      |   1   |   StartTLS   |   SSL protocol feature: startTLS.<br>  startTLS is a protocol feature which allows SSL and plain text connections to co-exist on the same port.<br>  After sending this startTLS command, both client/server switch to TLS/SSL mode, and cannot switch back to plain text mode.   |
      |   2   |   SSL_TLS   |   SSL protocol: SSL.   |
    enum: [0,1,2]
  SSLStrengthEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      SSL strengths.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Not set yet.   |
      |   1   |   Low   |   Low SSL Strength - 40 bit.   |
      |   2   |   Medium   |   Medium SSL Strength - 128 bit.   |
      |   3   |   High   |   High SSL Strength - 168 bit.   |
    enum: [0,1,2,3]
  StoragePoolTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Storage Pool types.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Traditional   |   Traditional pool. Traditional pools use traditional fixed size RAID groups of entire disks.   |
      |   2   |   Dynamic   |   Dynamic pool. Dynamic pools utilize advanced RAID technology to support larger drives, <br>  faster rebuild times, and improved storage utilization.   |
    enum: [1,2]
  StorageProcessorEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   SPA   |      |
      |   1   |   SPB   |      |
    enum: [0,1]
  StorageResourceTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   filesystem   |      |
      |   2   |   consistencyGroup   |      |
      |   3   |   vmwarefs   |      |
      |   4   |   vmwareiscsi   |      |
      |   8   |   lun   |      |
      |   9   |   VVolDatastoreFS   |      |
      |   10   |   VVolDatastoreISCSI   |      |
    enum: [1,2,3,4,8,9,10]
  SupportCredentialStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Status of the stored support credential.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Not_Set   |   Support credentials are not set.   |
      |   1   |   Unvalidated   |   Validation could not be performed because of various reasons. For example, there may be no internet connection.   |
      |   2   |   Valid   |   Stored support credentials have been validated previously.   |
      |   3   |   Invalid   |   Stored support credentials are incorrect and cannot pass validation.   |
    enum: [0,1,2,3]
  SvcCRUTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Types of Customer Replaceable Units (CRUs) installed on the storage processors.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   SLIC   |   Usually, there is one or more SLIC installed on one SP.   |
      |   1   |   SSD   |   Usually, there is one SSD installed on one SP.   |
    enum: [0,1]
  SvcScopeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Scope of service.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   system   |   Storage system.   |
      |   1   |   SPA   |   SP A.   |
      |   2   |   SPB   |   SP B.   |
    enum: [0,1,2]
  SvcStorageProcessorStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Types of the storage processors state.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Normal   |   Indicates that SP is in normal mode.   |
      |   1   |   Service   |   Indicates that SP is in service mode.   |
      |   2   |   Hold_In_Reset   |   Indicates that SP is in hold in reset mode.   |
      |   3   |   Rebooting   |   Indicates that SP is rebooting.   |
    enum: [0,1,2,3]
  SyncSnapReplicationStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      These are the possible replication statuses for a snapshot.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Not_Marked_For_Replication   |   Snapshot was created on destination site and will not be replicated on source.   |
      |   1   |   Replicated   |   This snapshot was replicated to the destination successfully.   |
      |   2   |   Failed_To_Replicate   |   Snapshot was created on source site while replication session was in fracture and will not be replicated on destination.   |
    enum: [0,1,2]
  ThinCloneOperationEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Thin clone operations.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Create   |   Thin clone create.   |
      |   2   |   Refresh   |   Thin clone refresh.   |
    enum: [1,2]
  ThinStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Thin provisioning statuses for storage resource objects,<br>   as defined by storageResource type.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   False   |   The storage resource is not thin-provisioned.   |
      |   1   |   True   |   The storage resource is thin-provisioned.   |
      |   65,535   |   Mixed   |   (Applies only to Consistency groups).<br>  If some LUNs in a Consistency group are thin-provisioned <br>  but other LUNs are not non-provisioned then the Mixed value is returned <br>  for this Consistency group.<br>  Do not use Mixed value in creation or modification requests:<br>  the storage system will respond with error.   |
    enum: [0,1,65535]
  ThumbprintAlgoTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Cryptographic algorithm used to hash the public key certificate.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   SHA   |   Secure Hash Algorithm (SHA).   |
      |   2   |   SHA1   |   SHA1 algorithm.   |
      |   3   |   SHA224   |   SHA2 algorithm, 224-bit.   |
      |   4   |   SHA256   |   SHA2 algorithm, 256-bit.   |
      |   5   |   SHA384   |   SHA2 algorithm, 384-bit.   |
      |   6   |   SHA512   |   SHA2 algorithm, 512-bit.   |
      |   7   |   MD5   |   MD5 algorithm.   |
      |   8   |   RIPEMD160   |   RIPEMD algorithm, 160-bit.   |
      |   9   |   DSS1   |   Digital Signature Standard (DSS) 1 algorithm.   |
      |   99   |   Unknown   |   Unknown algorithm.   |
    enum: [1,2,3,4,5,6,7,8,9,99]
  TieringPolicyEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Tiering policy choices for how the storage resource data will be distributed<br>  among the tiers available in the pool.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Autotier_High   |   The storage resource data will be initially placed on the highest available tier <br>  and then optimaly distributed over the pool's tiers by auto-tiering algorithm.<br>  <br><br>  This is a default value for most storage resource types.   |
      |   1   |   Autotier   |   The storage resource data will be optimally distributed over the <br>  pool's tiers according to the auto-tiering algorithm.   |
      |   2   |   Highest   |   The storage resource data will be placed on the highest available tier.   |
      |   3   |   Lowest   |   The storage resource data will be placed on the lowest available tier.   |
      |   4   |   No_Data_Movement   |   The storage resource data will not be moved between pool's teirs by auto-tiering algorithm. <br>  <br><br>  No longer supported.<br>  <br><br>  Please specify a different tiering policy.<br>  If you use this value in Create or Modify requests, <br>  the system will return an error.   |
      |   65,535   |   Mixed   |   (Applies to consistency groups only.)<br>  Indicates that the LUNs contained in a consistency group have different pool tiering policies.<br>  <br><br>  <b>Note:</b> <br>  This value applies only to the relocationPolicy attribute of the Consistency group storage resource type. <br>  <br><br>  If you use this value in Create or Modify requests,<br>  an error will be returned.   |
    enum: [0,1,2,3,4,65535]
  TierTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Supported pool tier types.<br>  <br/><br>  <br/>

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   None   |   The disks in the storage pool has no tier type.   |
      |   5   |   NVMe_Extreme_Performance   |   This storage pool tier provides very fast access times for<br>  resources and subjects with low latency to variable workloads.<br>  It contains all supported NVMe Flash Disks.   |
      |   10   |   Extreme_Performance   |   This storage pool tier provides very fast access times for<br>  resources and subjects to variable workloads.<br>  It contains all supported SAS Flash Disks.   |
      |   20   |   Performance   |   This storage pool tier provides high throughput and good<br>  bandwidth at a mid-level price point.<br>  It contains all supported SAS disks.   |
      |   30   |   Capacity   |   This storage pool tier provides the highest storage capacity<br>  with generally lower performance.<br>  It contains all supported NL-SAS disks.   |
    enum: [0,5,10,20,30]
  TsCloudProviderOpStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |      |
      |   2   |   OK   |      |
    enum: [0,2]
  UDoctorPackageStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible install statuses for udoctorPackages.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Available   |   udoctorPackage available status means that the package is downloaded and ready to be installed.   |
      |   1   |   Scheduled   |   udoctorPackage scheduled status means that the package has been scheduled to be installed at a specific date and time.   |
      |   2   |   Installing   |   udoctorPackage installing status means that the package is being installed, and the installation haven't been finished yet.   |
      |   3   |   Installed   |   udoctorPackage installed status means that the package has been installed successfully.   |
      |   4   |   InstallFailed   |   udoctorPackage install failed status means that the package was attempted to be installed but installation failed.   |
    enum: [0,1,2,3,4]
  UFS64TypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      The types of UFS64 file system.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   UFS64_Transactional   |   Transactional file system provisioned for VMware NFS datastores.   |
      |   1   |   UFS64_Traditional   |   Traditional file system provisioned for CIFS or/and NFS accessed shared folders.   |
    enum: [0,1]
  UnbindContextEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Normal   |      |
      |   1   |   RebindStart   |      |
      |   2   |   RebindEnd   |      |
    enum: [0,1,2]
  UncPortStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Possible Uncommitted port statuses.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Uncommitted port status is unknown.   |
      |   2   |   OK   |   Uncommitted port status is OK.   |
      |   3   |   Degraded   |   Uncommitted port status is degraded.   |
      |   33,024   |   Uninitialized   |   Uncommitted port status is uninitialized.   |
      |   33,025   |   Empty   |   Uncommitted port status is empty.   |
      |   33,026   |   Missing   |   Uncommitted port status is missing.   |
      |   33,027   |   Faulted   |   Uncommitted port status is faulted.   |
      |   33,028   |   Unavailable   |   Uncommitted port status is unavailabled.   |
      |   33,029   |   Disabled   |   Uncommitted port status is disabled.   |
      |   33,280   |   SFP_Not_Present   |   Uncommitted port status is SFP not present.   |
      |   33,281   |   Module_Not_Present   |   Uncommitted port status is module not present.   |
      |   33,282   |   Port_Not_Present   |   Uncommitted port status is port not present.   |
      |   33,283   |   Missing_SFP   |   Uncommitted port status is missing SFP.   |
      |   33,284   |   Missing_Module   |   Uncommitted port status is missing module.   |
      |   33,285   |   Incorrect_SFP_Type   |   Uncommitted port status is incorrect SFP type.   |
      |   33,286   |   Incorrect_Module   |   Uncommitted port status is incorrect module.   |
      |   33,287   |   SFP_Read_Error   |   Uncommitted port status is SFP read error.   |
      |   33,288   |   Unsupported_SFP   |   Uncommitted port status is unsupported SFP.   |
      |   33,289   |   Module_Read_Error   |   Uncommitted port status is module read error.   |
      |   33,290   |   Exceeded_Maximum_Limits   |   Uncommitted port status is exceeded maximum limits.   |
      |   33,291   |   Module_Powered_Off   |   Uncommitted port status is module powered off.   |
      |   33,292   |   Unsupported_Module   |   Uncommitted port status is unsupported module.   |
      |   33,293   |   Database_Read_Error   |   Uncommitted port status is database read error.   |
      |   33,294   |   Faulted_SFP   |   Uncommitted port status is faulted SFP.   |
      |   33,295   |   Hardware_Fault   |   Uncommitted port status is hardware fault.   |
      |   33,296   |   Disabled_User_Initiated   |   Uncommitted port status is disabled user initiated.   |
      |   33,297   |   Disabled_Encryption_Required   |   Uncommitted port status is disabled encryption required.   |
      |   33,298   |   Disabled_Hardware_Fault   |   Uncommitted port status is disabed hardware fault.   |
    enum: [0,2,3,33024,33025,33026,33027,33028,33029,33280,33281,33282,33283,33284,33285,33286,33287,33288,33289,33290,33291,33292,33293,33294,33295,33296,33297,33298]
  UnitEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      The unit of measurement.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   1   |   Bytes   |   The value is measured in bytes.   |
      |   2   |   BytesPerSecond   |   The value is measured in bytes per second.   |
      |   3   |   Percentage   |   The value is measured in percents.   |
      |   4   |   Count   |   The value has no unit of measurement.   |
      |   5   |   Milliseconds   |   The value is measured in milliseconds.   |
      |   6   |   IOs   |   The value is measured in IO operations.   |
      |   7   |   IOsPerSecond   |   The value is measured in IO operations per second.   |
    enum: [1,2,3,4,5,6,7]
  UpgradeSessionTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Upgrade   |      |
      |   1   |   Health_Check   |      |
      |   2   |   Storageprocessor_Upgrade   |      |
      |   3   |   Offline_Storageprocessor_Upgrade   |      |
    enum: [0,1,2,3]
  UpgradeStatusEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Current status of the associated upgrade session.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Upgrade_Not_Started   |   Upgrade session was not started.   |
      |   1   |   Upgrade_In_Progress   |   Upgrade session is in the process of upgrading the system software, language pack, or drive firmware.   |
      |   2   |   Upgrade_Completed   |   Upgrade session completed successfully.   |
      |   3   |   Upgrade_Failed   |   Upgrade session did not complete successfully.   |
      |   4   |   Upgrade_Failed_Lock   |   Upgrade session failed, and the system is in a locked state.   |
      |   5   |   Upgrade_Cancelled   |   Upgrade session was cancelled.   |
      |   6   |   Upgrade_Paused   |   Upgrade session is paused.   |
      |   7   |   Upgrade_Acknowledged   |   Upgrade session was acknowledged.   |
      |   8   |   Upgrade_Waiting_For_User   |   Upgrade session is waiting for user action to continue the upgrade   |
      |   9   |   Upgrade_Paused_Lock   |   Upgrade session is paused past the point of cancellation.   |
    enum: [0,1,2,3,4,5,6,7,8,9]
  UpgradeTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Software   |      |
      |   1   |   Firmware   |      |
      |   2   |   LanguagePack   |      |
    enum: [0,1,2]
  UsageHarvestStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Pool space harvesting states.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Idle   |   Harvesting is idle and not running now.   |
      |   1   |   Running   |   Harvesting is running now.   |
      |   2   |   Could_Not_Reach_LWM   |   Harvesting was running but could not reach Low Watermark.   |
      |   3   |   Paused_Could_Not_Reach_HWM   |   Harvesting was running but could not reach Hight Watermark and paused.   |
      |   4   |   Failed   |   Harvesting was running but failed.   |
    enum: [0,1,2,3,4]
  UserRoleEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Administrator   |      |
      |   1   |   Storage_Administrator   |      |
      |   2   |   Vm_Administrator   |      |
      |   3   |   Operator   |      |
      |   4   |   Security_Administrator   |      |
    enum: [0,1,2,3,4]
  VasaProviderStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      VASA Provider state

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Not_Registered   |      |
      |   1   |   Registered   |      |
      |   99   |   Not_Supported   |      |
    enum: [0,1,99]
  VDMSupportedProtocolsEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Network sharing protocols supported by VDM.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   NFS   |   Only NFS sharing protocol supported by VDM.   |
      |   1   |   CIFS   |   Only SMB (also known as CIFS) sharing protocol is supported by VDM.   |
      |   2   |   Multiprotocol   |   Both SMB (also known as CIFS) and NFS sharing protocols are supported by VDM.<br> A file system can be shared via both NFS and CIFS simultaneously.   |
      |   3   |   CIFSAndNFS   |   Both CIFS and NFS sharing protocols are supported by VDM. <br>  Any file system can only be share with one or the other.   |
    enum: [0,1,2,3]
  VMDiskTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Virtual Machine disk type enum returned by vSphere.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Virtual Machine disk type unknown.   |
      |   1   |   VMFS_Thick   |   Virtual Machine disk type thick.   |
      |   2   |   VMFS_Thin   |   Virtual Machine disk type thin.   |
      |   3   |   RDM_Physical   |   Physical compatibility mode (pass-through) raw disk mapping. An rdmp <br>  virtual disk passes SCSI commands directly to the hardware, but the <br>  virtual disk cannot participate in snapshots. (from vSphere API description)   |
      |   4   |   RDM_Virtual   |   Virtual compatibility mode raw disk mapping. An rdm virtual disk <br>  grants access to the entire raw disk and the virtual disk can <br>  participate in snapshots. (from vSphere API description)   |
    enum: [0,1,2,3,4]
  VMPowerStateEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Power State Enum for virtual machines.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Unknown   |   Virtual machine power state unknown.   |
      |   1   |   Off   |   Virtual machine power state off.   |
      |   2   |   On   |   Virtual machine power state on.   |
      |   3   |   Suspended   |   Virtual machine power state suspended.   |
      |   4   |   Paused   |   Virtual machine power state paused.   |
    enum: [0,1,2,3,4]
  VmwarePETypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      Defines the type of VMware Protocol Endpoint.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   NAS   |      |
      |   1   |   SCSI   |      |
    enum: [0,1]
  VVolDatastoreTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      VVol datastore types.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   iSCSI   |   LUN based VVol datastore.   |
      |   1   |   NFS   |   File system based VVol datastore.   |
    enum: [0,1]
  VVolTypeEnum:
    type: integer
    x-tags:
      - ~Appendix
    description: |- 
      The type of VVol, for instance Config, Data, or Swap.

      |   Value   |   Name   |   Description   |
      |  ----  | ----  | ---- |
      |   0   |   Config   |   Config VVol type.   |
      |   1   |   Data   |   Data VVol type.   |
      |   2   |   Swap   |   Swap VVol type.   |
      |   3   |   Memory   |   Memory VVol type.   |
      |   99   |   Other   |   Other VVol type.   |
    enum: [0,1,2,3,99]
  APIChanges:
    type: object
    x-tags:
      - ~What's changed
    description: 'APIChangesPlaceholder'
    summary: REST API changes in Unity 5.1.0
parameters:
  X-EMC-REST-CLIENT:
    name: X-EMC-REST-CLIENT
    in: header
    type: boolean
    required: true
    description: |
      Required to send in all requests if using Basic authentication.
    enum:
    - true
  EMC-CSRF-TOKEN:
    name: EMC-CSRF-TOKEN
    in: header
    type: string
    required: true
    description: |
      CSRF token used to mitigate Cross-Site Request Forgery vulnerabilities.
      The token is gathered from a GET response and required to send with POST and DELETE requests. It is good for the entirety of the session.
  language:
    name: language
    in: query
    type: string
    enum:
    - de-DE
    - en-US
    - es-MX
    - fr-FR
    - ja-JP
    - ko-KR
    - pt-BR
    - ru-BR
    - zh-CN
    description: |
      Localization language for error response messages, events, alerts, and other localizable query results.
  compact:
    name: compact
    in: query
    type: boolean
    description: |
      Omits metadata from each instance in the query response. Values are:
      - true (implied when you use &compact without a value)
      - false (default)
  fields:
    name: fields
    in: query
    type: string
    description: |
      Specifies a comma-separated list of attributes to return in a response. If you do not use this parameter, a query will return the id attribute only.
      When using fields, you can:
      - Use dot notation syntax to return the values of related attributes.
      - Optionally, define a new attribute from field expressions associated with one or more existing attributes.
  filter:
    name: filter
    in: query
    type: string
    description: |
      Filters the response data against a set of criteria. Only matching resource instances are returned. Filtering is case insensitive.
      When using filter, you can use dot notation syntax to filter by the attributes of related resource types.
  orderby:
    name: orderby
    in: query
    type: string
    description: |
      Specifies how to sort response data.
      You can sort response data in ascending or descending order by the attributes of the queried resource type.
      And you can use dot notation syntax to sort response data by the attributes of related resource types.
  groupby:
    name: groupby
    in: query
    type: string
    description: |
      Groups the specified values and applies the @sum function to each group.
      For example, you could use groupby with @sum to return a summary of disk sizes for each disk type
  page:
    name: page
    in: query
    type: integer
    minimum: 1
    description: |
      Identifies the page to return in a response by specifying the page number.
      If this parameter is not specified, the server returns all resource instances that meet the request criteria in page 1.
  per_page:
    name: per_page
    in: query
    type: integer
    minimum: 1
    maximum: 2000
    description: |
      Specifies the number of resource type instances that form a page.
      If this parameter is not specified, the server returns all resource instances that meet the request criteria in the page specified by page (or in page 1, if page is also not specified).
  with_entrycount:
    name: with_entrycount
    in: query
    type: boolean
    description: |
      Indicates whether to return the entryCount response component in the response data. The entryCount response component indicates the number of resource instances in the complete list.
      You can use it to get the total number of entries when paging returned a partial response.
      By default, the entryCount response component is not returned. Set with_entrycount=true to return the entryCount response component.
  timeout:
    name: timeout
    in: query
    type: integer
    description: |
      Executes the request in the background if timeout (unit: second).
